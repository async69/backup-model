{"version":3,"sources":["pages/FinanceManagement/Setup/GeneralProductPostingGroup/example.jsx","pages/FinanceManagement/Setup/GeneralProductPostingGroup/InLineEditableTable/reducer.jsx","pages/FinanceManagement/Setup/GeneralProductPostingGroup/InLineEditableTable/main.jsx","pages/FinanceManagement/Setup/GeneralProductPostingGroup/InLineEditableTable/render.jsx","pages/FinanceManagement/Setup/GeneralProductPostingGroup/GeneralProductPostingGroup.jsx","pages/FinanceManagement/Setup/GeneralProductPostingGroup/index.jsx"],"names":["data","partner_group_detail","item_group_detail","purchase_account_detail","sales_account_detail","cost_of_goods_sold_account_detail","root_item","value","updated_at","String","Date","columns","type","label","tag","path","options","name","id","optionsFrom","noEdit","schema","_id","Joi","string","allow","optional","number","statusTypes","initialState","addCount","status","hasEdit","hasDelete","_data","constants","reducer","state","arguments","length","undefined","action","Object","objectSpread","payload","addLine","dispatch","uuid","Math","random","toString","substring","populateLine","obj","returnObj","prop","DisplayTable","_ref","callback","_useState","useState","_useState2","slicedToArray","fetchedData","setFetchedData","_useState3","_useState4","formStatus","setFormStatus","_useState5","map","_useState6","displayValues","setDisplay","useEffect","item","idx","found","find","_item","_","get","_useState7","_useState8","formData","setForm","_useState9","_useState10","validationData","setValidation","_useState11","_useState12","completed","setCompleted","concat","populateData","error","validate","abortEarly","console","log","handleChange","_ref2","_ref2$currentTarget","currentTarget","defineProperty","react_default","a","createElement","Table","size","responsive","striped","dataItem","Input","onChange","returnName","Button","className","outline","color","onClick","disabled","index","findIndex","filter","cancelCallback","index_esm","Fragment","deleteCallback","InlineTable","_useReducer","useReducer","_useReducer2","Col","align","main_DisplayTable","assign","GeneralProductPostingSetup","doneAdd","doneEdit","_toggle","CommonModal","toggle","Page","Card","CardHeader","CardBody","render_InlineTable","sampleData","connect","fetchStatus","selectFetchStatus","addStatus","selectAddStatus","postingSetups","selectGeneralBusinessPostingSetups","postingGroups","selectGeneralBusinessPostingGroups","editStatus","selectEditStatus","deleteStatus","selectDeleteStatus","itemCategories","selectItemCategories","accounts","selectChartOfAccounts","fetchGeneralBusinessPostingSetups","Fetch","addGeneralBusinessPostingSetup","Add","editGeneralBusinessPostingSetup","Edit","deleteGeneralBusinessPostingSetup","Remove","fetchLock","setFetchLock","addLock","setAddLock","editLock","setEditLock","deleteLock","setDeleteLock","reduxStatus","failure","toast","success","GeneralProductPostingGroup","requestBody","partner_group","partnerGroup","item_group","itemGroup","purchase_account","sales_account","cost_of_goods_sold_account","costOfGoodsSoldAcc","cash_account","cashAccount","doneDelete"],"mappings":"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","file":"static/js/110.e27d4de7.chunk.js","sourcesContent":["import Joi from \"joi-browser\"\n\nexport const data = [\n  {\n    partner_group_detail: \"OOO\",\n    item_group_detail: 2,\n    purchase_account_detail: \"Account 1\",\n    sales_account_detail: 1222,\n    cost_of_goods_sold_account_detail: \"One\",\n    root_item: {\n      value: \"Some value 1\"\n    },\n    updated_at: String(new Date()),\n  },\n  {\n    partner_group_detail: \"OOO\",\n    item_group_detail: 4,\n    purchase_account_detail: \"Account 1\",\n    sales_account_detail: 1222,\n    cost_of_goods_sold_account_detail: \"Three\",\n    root_item: {\n      value: \"Some value 2\"\n    },\n    updated_at: String(new Date()),\n  },\n  {\n    partner_group_detail: \"OOO\",\n    item_group_detail: 2,\n    purchase_account_detail: \"Account 1\",\n    sales_account_detail: 4444,\n    cost_of_goods_sold_account_detail: \"Three\",\n    root_item: {\n      value: \"Some value 3\"\n    },\n    updated_at: String(new Date()),\n  },\n];\n\nexport const options = [\"One\", \"Two\", \"Three\"];\n\nexport const optionsNew = [\n  { name: \"A\", id: 1 },\n  { name: \"B\", id: 2 },\n  { name: \"C\", id: 3 },\n  { name: \"D\", id: 4 },\n]\n\nexport const columns = [\n  {\n    type: \"text\",\n    label: \"Partner Group\",\n    tag: \"partner_group_detail\",\n    path: \"partner_group_detail\",\n  },\n  {\n    type: \"select\",\n    label: \"Item Group\",\n    tag: \"item_group_detail\",\n    path: \"item_group_detail\",\n    options: optionsNew,\n    optionsFrom: \"server\"\n  },\n  {\n    type: \"text\",\n    label: \"Purchase Account\",\n    tag: \"purchase_account_detail\",\n    path: \"purchase_account_detail\",\n  },\n  {\n    type: \"number\",\n    label: \"Sales Account\",\n    tag: \"sales_account_detail\",\n    path: \"sales_account_detail\",\n  },\n  {\n    type: \"select\",\n    label: \"Cost Account\",\n    tag: \"cost_of_goods_sold_account_detail\",\n    path: \"cost_of_goods_sold_account_detail\",\n    options,\n  },\n  {\n    type: \"root_item\",\n    label: \"Root Item\",\n    tag: \"root_item\",\n    path: \"root_item.value\",\n  },\n  {\n    type: \"text\",\n    noEdit: true,\n    label: \"Last Modified\",\n    tag: \"updated_at\",\n    path: \"updated_at\",\n  }\n];\n\nexport const schema = {\n    _id: Joi.string().allow(\"\").optional(),\n    partner_group_detail: Joi.string(),\n    item_group_detail: Joi.number(),\n    purchase_account_detail: Joi.string(),\n    sales_account_detail: Joi.number(),\n    cost_of_goods_sold_account_detail: Joi.string(),\n    root_item: Joi.string(),\n    updated_at: Joi.string().allow(\"\").optional(),\n  };","export const statusTypes = {\n    ADD: \"ADDING_LINE\",\n    IDLE: \"IDLE\",\n    EDIT: \"EDIT\",\n    SAVED: \"SAVED\",\n    CANCELED: \"CANCELED\",\n};\n\nexport const initialState = {\n    addCount: 0,\n    status: statusTypes.IDLE,\n    hasEdit: true,\n    hasDelete: true,\n    _data: []\n}\n\nexport const constants = {\n    ADD: \"_ADD\",\n    UPDATE: \"UPDATE\"\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case constants.ADD: {\n            return {\n                ...state,\n                addCount: state.addCount + 1,\n                status: statusTypes.ADD\n            }\n        }\n\n        case constants.UPDATE: {\n            return {\n                ...state,\n                _data: action.payload\n            }\n        }\n\n        default: return state\n    }\n}\n\nexport const addLine = (dispatch) => dispatch({ type: constants.ADD })\n\nexport const updateData = (data) => dispatch => {\n    dispatch({ type: constants.UPDATE, payload: data })\n}\n\nexport const getData = (state) => state._data","import React, { useState, useEffect } from \"react\";\nimport { Table as ReactstrapTable, Button, Input } from \"reactstrap\";\nimport { MdEdit, MdDelete } from \"react-icons/md\";\nimport { updateData } from \"./reducer\";\nimport Joi from \"joi-browser\";\nimport _ from \"lodash\";\n\nconst uuid = () => Math.random().toString(36).substring(7);\n\nexport const populateLine = (obj, _id) => {\n  let returnObj = {};\n  for (let prop in obj) {\n    returnObj[prop] = \"\";\n  }\n  return {\n    ...returnObj,\n    _id,\n  };\n};\n\nexport const statusTypes = {\n  ADD: \"ADDING_LINE\",\n  IDLE: \"IDLE\",\n  EDIT: \"EDIT\",\n  SAVED: \"SAVED\",\n  CANCELED: \"CANCELED\",\n};\n\nexport const DisplayTable = ({\n  data,\n  columns,\n  hasEdit,\n  hasDelete,\n  status,\n  addCount,\n  schema,\n  dispatch,\n  callback,\n}) => {\n  const [fetchedData, setFetchedData] = useState([]);\n  const [formStatus, setFormStatus] = useState(statusTypes.IDLE);\n  const [displayValues, setDisplay] = useState(data.map(() => false));\n\n  useEffect(() => {\n    if (\n      statusTypes.IDLE === formStatus ||\n      statusTypes.SAVED === formStatus ||\n      statusTypes.CANCELED === formStatus\n    ) {\n      setFormStatus(status);\n    }\n  }, [status, setFormStatus, addCount]);\n\n  useEffect(() => {\n    if (data.length > 0 && fetchedData.length === 0) {\n      setFetchedData(\n        data.map((item, idx) => {\n          var returnObj = {};\n          for (var prop in item) {\n            // eslint-disable-next-line no-loop-func\n            const found = columns.find((_item) => _item.tag === prop);\n            returnObj[found.tag] = _.get(item, found.path);\n          }\n          return {\n            ...returnObj,\n            _id: uuid(),\n          };\n        })\n      );\n    }\n  }, [data, setFetchedData]);\n\n  useEffect(() => {\n    updateData(fetchedData)(dispatch);\n    callback(fetchedData);\n  }, [fetchedData, dispatch]);\n\n  const [formData, setForm] = useState({});\n  const [validationData, setValidation] = useState({});\n  const [completed, setCompleted] = useState(false);\n\n  useEffect(() => {\n    if (formStatus === statusTypes.ADD) {\n      const _id = uuid();\n      setFetchedData(fetchedData.concat(populateLine(fetchedData[0], _id)));\n      populateData(populateLine(fetchedData[0], _id));\n      setDisplay(displayValues.concat(true));\n    }\n  }, [formStatus]);\n\n  const populateData = (data) => {\n    setValidation(schema);\n    setForm(data);\n  };\n\n  useEffect(() => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(formData, validationData, options);\n\n    if (!error) {\n      setCompleted(true);\n    } else {\n      console.log(error);\n      setCompleted(false);\n    }\n  }, [formData]);\n\n  const handleChange = ({ currentTarget: { name, value } }) => {\n    setForm({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const cancelCallback = () => {\n    if (formStatus === statusTypes.ADD) {\n      const index = fetchedData.findIndex((data) => data._id === formData._id);\n      if (index >= 0) {\n        setFetchedData(fetchedData.filter((_, idx) => index !== idx));\n        setDisplay(displayValues.filter((_, idx) => index !== idx));\n      }\n      setCompleted(true);\n    } else {\n      setDisplay(displayValues.map(() => false));\n    }\n    setFormStatus(statusTypes.CANCELED);\n    setValidation({});\n  };\n\n  const deleteCallback = (_id) => {\n    const index = fetchedData.findIndex((data) => data._id === _id);\n    if (index >= 0) {\n      setFetchedData(fetchedData.filter((_, idx) => idx !== index));\n      setDisplay(displayValues.filter((_, idx) => idx !== index));\n      setFormStatus(statusTypes.CANCELED);\n    }\n  };\n\n  const saveCallback = () => {\n    setFetchedData(\n      fetchedData.map((data) => {\n        if (data._id === formData._id) {\n          return {\n            _id: uuid(),\n            ...formData,\n          };\n        } else {\n          return data;\n        }\n      })\n    );\n    setDisplay(displayValues.map(() => false));\n  };\n\n  const returnName = (dataItem, item) => {\n    if (item.tag === \"root_item\") {\n    }\n    if (item.optionsFrom === \"server\") {\n      const found = item.options.find(\n        (prop) => String(prop.id) === String(dataItem[item.tag])\n      );\n      if (found) return found.name;\n      else {\n      }\n    } else {\n      return dataItem[item.tag];\n    }\n  };\n\n  return (\n    <ReactstrapTable size=\"md\" responsive striped>\n      <thead>\n        <tr>\n          {columns.map((item) => (\n            <th>{item.label}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {fetchedData.map((dataItem, idx) => {\n          return (\n            <tr>\n              {columns.map((item) => {\n                return displayValues[idx] && !item.noEdit ? (\n                  <td>\n                    {item.type === \"select\" ? (\n                      <Input\n                        type={item.type}\n                        name={item.tag}\n                        value={_.get(formData, item.tag)}\n                        onChange={handleChange}\n                      >\n                        <option></option>\n                        {item.optionsFrom === \"server\"\n                          ? item.options.map((_item) => (\n                              <option value={_item.id}>{_item.name}</option>\n                            ))\n                          : item.options.map((_item) => (\n                              <option value={_item}>{_item}</option>\n                            ))}\n                      </Input>\n                    ) : (\n                      <Input\n                        type={item.type}\n                        name={item.tag}\n                        value={_.get(formData, item.tag)}\n                        onChange={handleChange}\n                      />\n                    )}\n                  </td>\n                ) : (\n                  <td>{returnName(dataItem, item)}</td>\n                );\n              })}\n              {hasEdit ? (\n                <td>\n                  {displayValues[idx] ? (\n                    <div>\n                      <Button\n                        className=\"m-1\"\n                        size=\"sm\"\n                        outline\n                        color=\"info\"\n                        onClick={() => {\n                          saveCallback();\n                          setFormStatus(statusTypes.SAVED);\n                        }}\n                        disabled={!completed}\n                      >\n                        Save\n                      </Button>\n                      <Button\n                        className=\"m-1\"\n                        size=\"sm\"\n                        outline\n                        color=\"danger\"\n                        onClick={() => {\n                          cancelCallback();\n                        }}\n                      >\n                        Cancel\n                      </Button>\n                    </div>\n                  ) : (\n                    <Button\n                      className=\"m-1\"\n                      size=\"sm\"\n                      outline\n                      color=\"warning\"\n                      onClick={() => {\n                        setDisplay(\n                          displayValues.map((_, value) => value === idx)\n                        );\n                        populateData(dataItem);\n                        setFormStatus(statusTypes.EDIT);\n                      }}\n                      disabled={!completed}\n                    >\n                      <MdEdit />\n                    </Button>\n                  )}\n                </td>\n              ) : (\n                <></>\n              )}\n              {hasDelete ? (\n                <td>\n                  <Button\n                    className=\"m-1\"\n                    size=\"sm\"\n                    outline\n                    color=\"danger\"\n                    onClick={() => deleteCallback(dataItem._id)}\n                  >\n                    <MdDelete />\n                  </Button>\n                </td>\n              ) : (\n                <></>\n              )}\n            </tr>\n          );\n        })}\n      </tbody>\n    </ReactstrapTable>\n  );\n};\n","import React, { useReducer } from \"react\"\nimport { Button, Col } from \"reactstrap\"\nimport { initialState, reducer, addLine, DisplayTable } from \"./index\"\n\nexport const InlineTable = ({ data, columns, callback, schema }) => {\n    const [state, dispatch] = useReducer(reducer, initialState)\n  \n    const _callback = (data) => {\n        if (state._data.length >= data.length) {\n            callback(data)\n        }\n    }\n  \n    return (\n      <div>\n        <Col align=\"right\" className=\"mb-1 pl-3 pr-3\">\n          <Button\n            className=\"m-1 align-right\"\n            size=\"sm\"\n            outline\n            color=\"primary\"\n            onClick={() => addLine(dispatch)}\n          >\n            Add Line\n          </Button>\n        </Col>\n        <DisplayTable\n          {...state}\n          dispatch={dispatch}\n          data={data}\n          schema={schema}\n          columns={columns}\n          callback={_callback}\n        />\n      </div>\n    )\n}\n","import React, { useReducer, useEffect } from \"react\";\nimport Page from \"../../../../components/Page\";\nimport { Card, CardBody, CardHeader, Button, Col } from \"reactstrap\";\nimport CommonModals from \"../../../../components/CommonModal\";\nimport { _toggle } from \"../../../common/ModalOptions\";\nimport { columns, data as sampleData, schema } from \"./example\";\nimport { initialState, reducer, addLine } from \"./InLineEditableTable\";\nimport { InlineTable } from \"./InLineEditableTable/render\";\n\nconst GeneralProductPostingSetup = ({ doneAdd, doneEdit }) => {\n  const [, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    if (doneAdd || doneEdit) {\n      _toggle({ type: \"CLOSE\" }, dispatch);\n    }\n  }, [doneAdd, doneEdit]);\n\n  return (\n    <div>\n      <CommonModals toggle={_toggle} dispatch={dispatch} />\n\n      <Page>\n        <Col align=\"right\" className=\"mb-1 pl-3 pr-3\">\n          <Button onClick={() => addLine(dispatch)} outline size=\"sm\">\n            New General Product Posting Setup\n          </Button>\n          <Button\n            onClick={() => {\n              // console.log(getData(state))\n            }}\n            outline\n            size=\"sm\"\n          >\n            Get Data\n          </Button>\n        </Col>\n        <Card className=\"border-0\">\n         \n            <CardHeader className=\"border-0\">\n              General Product Posting Setup{\" \"}\n            </CardHeader>\n        \n          <CardBody>\n            <InlineTable\n              callback={() => null}\n              columns={columns}\n              schema={schema}\n              data={sampleData}\n            />\n          </CardBody>\n        </Card>\n      </Page>\n    </div>\n  );\n};\n\nexport default GeneralProductPostingSetup;\n","import React, { useState, useEffect } from \"react\";\nimport GeneralProductPostingSetup from \"./GeneralProductPostingGroup\";\nimport {\n  selectFetchStatus,\n  selectAddStatus,\n  selectGeneralBusinessPostingSetups,\n  Fetch,\n  Add,\n  selectEditStatus,\n  Edit,\n  selectDeleteStatus,\n  Remove,\n} from \"../../../../store/GeneralSetup/Posting/GeneralBusinessPostingSetup\";\nimport { selectGeneralBusinessPostingGroups } from \"../../../../store/GeneralSetup/Posting/GeneralBusinessPostingGroup\";\nimport { selectItemCategories } from \"../../../../store/Inventory/Setup/Item/Item_Categories\";\nimport { selectChartOfAccounts } from \"../../../../store/Finance/MasterData/ChartsOfAccounts/chartOfAccounts\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { reduxStatus } from \"../../../../constants/reduxStatus\";\n\nconst Loader = ({\n  fetchStatus,\n  addStatus,\n  postingSetups,\n  fetchGeneralBusinessPostingSetups,\n  addGeneralBusinessPostingSetup,\n  editStatus,\n  editGeneralBusinessPostingSetup,\n  deleteStatus,\n  deleteGeneralBusinessPostingSetup,\n  postingGroups,\n  itemCategories,\n  accounts,\n}) => {\n  const [fetchLock, setFetchLock] = useState(true);\n  const [addLock, setAddLock] = useState(true);\n  const [editLock, setEditLock] = useState(true);\n  const [deleteLock, setDeleteLock] = useState(true);\n\n  useEffect(() => {\n    setFetchLock(false);\n    fetchGeneralBusinessPostingSetups();\n  }, [fetchGeneralBusinessPostingSetups, setFetchLock]);\n\n  useEffect(() => {\n    const { status } = fetchStatus;\n    if (status === reduxStatus.failure && !fetchLock) {\n      toast.error(\"Failed Fetching General Posting Setups\");\n      setFetchLock(true);\n    }\n  }, [fetchStatus, setFetchLock]);\n\n  useEffect(() => {\n    const { status } = addStatus;\n    if (status === reduxStatus.failure && !addLock) {\n      setAddLock(true);\n    } else if (status === reduxStatus.success && !addLock) {\n      toast.success(\"Added General Posting Setup\");\n      setAddLock(true);\n    }\n  }, [addStatus, setAddLock]);\n\n  useEffect(() => {\n    const { status } = editStatus;\n    if (status === reduxStatus.failure && !editLock) {\n      setEditLock(true);\n    } else if (status === reduxStatus.success && !editLock) {\n      toast.success(\"Edited General Posting Setup\");\n      setEditLock(true);\n    }\n  }, [editStatus, setEditLock]);\n\n  useEffect(() => {\n    const { status } = deleteStatus;\n    if (status === reduxStatus.failure && !deleteLock) {\n      setDeleteLock(true);\n    } else if (status === reduxStatus.success && !deleteLock) {\n      toast.success(\"Deleted General Posting Setup\");\n      setDeleteLock(true);\n    }\n  }, [deleteStatus, setDeleteLock]);\n\n  const _addGeneralBusinessPostingSetup = (data) => {\n    setAddLock(false);\n    const requestBody = {\n      partner_group: data.partnerGroup ? data.partnerGroup : \"\",\n      item_group: data.itemGroup ? data.itemGroup : \"\",\n      purchase_account: data.itemGroup ? data.itemGroup : \"\",\n      sales_account: data.partnerGroup ? data.partnerGroup : \"\",\n      cost_of_goods_sold_account: data.costOfGoodsSoldAcc\n        ? data.costOfGoodsSoldAcc\n        : \"\",\n      cash_account: data.cashAccount ? data.cashAccount : \"\",\n    };\n\n    addGeneralBusinessPostingSetup(requestBody);\n  };\n\n  const _editGeneralBusinessPostingSetup = (data) => {\n    setEditLock(false);\n    const requestBody = {\n      id: data.id ? data.id : \"\",\n      partner_group: data.partnerGroup ? data.partnerGroup : \"\",\n      item_group: data.itemGroup ? data.itemGroup : \"\",\n      purchase_account: data.itemGroup ? data.itemGroup : \"\",\n      sales_account: data.partnerGroup ? data.partnerGroup : \"\",\n      cost_of_goods_sold_account: data.costOfGoodsSoldAcc\n        ? data.costOfGoodsSoldAcc\n        : \"\",\n      cash_account: data.cashAccount ? data.cashAccount : \"\",\n    };\n\n    editGeneralBusinessPostingSetup(requestBody);\n  };\n\n  const _deleteGeneralBusinessPostingSetup = (id) => {\n    setDeleteLock(false);\n    deleteGeneralBusinessPostingSetup(id);\n  };\n  return (\n    <GeneralProductPostingSetup\n      postingSetups={postingSetups}\n      doneAdd={addStatus.status === reduxStatus.success && !addLock}\n      addGeneralBusinessPostingSetup={_addGeneralBusinessPostingSetup}\n      doneEdit={editStatus.status === reduxStatus.success && !editLock}\n      editGeneralBusinessPostingSetup={_editGeneralBusinessPostingSetup}\n      doneDelete={deleteStatus.status === reduxStatus.success && !deleteLock}\n      deleteGeneralBusinessPostingSetup={_deleteGeneralBusinessPostingSetup}\n      postingGroups={postingGroups}\n      itemCategories={itemCategories}\n      accounts={accounts}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetchStatus: selectFetchStatus(state),\n  addStatus: selectAddStatus(state),\n  postingSetups: selectGeneralBusinessPostingSetups(state),\n  postingGroups: selectGeneralBusinessPostingGroups(state),\n  editStatus: selectEditStatus(state),\n  deleteStatus: selectDeleteStatus(state),\n  itemCategories: selectItemCategories(state),\n  accounts: selectChartOfAccounts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchGeneralBusinessPostingSetups: () => dispatch(Fetch()),\n  addGeneralBusinessPostingSetup: (data) => dispatch(Add(data)),\n  editGeneralBusinessPostingSetup: (data) => dispatch(Edit(data)),\n  deleteGeneralBusinessPostingSetup: (id) => dispatch(Remove(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loader);\n"],"sourceRoot":""}