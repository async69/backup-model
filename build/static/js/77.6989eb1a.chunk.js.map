{"version":3,"sources":["pages/common/tableHeader.jsx","helpers/number.js","pages/common/tableBody.jsx","pages/common/TableFooter.jsx","pages/common/table.jsx","context/Main/States/Pagination.jsx","helpers/Filter/index.js","pages/common/InLineEditableTable/reducer.jsx","pages/common/InLineEditableTable/main.jsx","pages/common/InLineEditableTable/render.jsx","pages/common/InLineEditableTable/index.jsx","pages/HumanResourceManagement/PayrollManagement/PayRollProcess/PayrollProcessPage/config.jsx","pages/HumanResourceManagement/PayrollManagement/PayRollProcess/PayrollProcessPage/PayrollProcessAdd.jsx","pages/HumanResourceManagement/PayrollManagement/PayRollProcess/PayrollProcessPage/PayrollProcess.jsx","pages/HumanResourceManagement/PayrollManagement/PayRollProcess/PayrollProcessPage/index.jsx","pages/HumanResourceManagement/PayrollManagement/PayRollProcess/SavedPayrollProcess/config.jsx","pages/HumanResourceManagement/PayrollManagement/PayRollProcess/SavedPayrollProcess/PayrollProcessAdd.jsx","pages/HumanResourceManagement/PayrollManagement/PayRollProcess/SavedPayrollProcess/PayrollProcess.jsx","pages/HumanResourceManagement/PayrollManagement/PayRollProcess/SavedPayrollProcess/index.jsx","pages/HumanResourceManagement/PayrollManagement/PayRollProcess/PayrollProcess.jsx","pages/HumanResourceManagement/PayrollManagement/PayRollProcess/index.jsx"],"names":["TableHeader","react_default","a","createElement","this","props","columns","map","column","key","path","label","Component","maskRegex","notMaskRegex","getIndex","mask","search","processValue","value","maskObj","options","isNegative","valObj","sign","Number","toFixed","fraction","length","toString","posTrailZero","lastIndexOf","_valObj$value$split","split","_valObj$value$split2","Object","slicedToArray","_valObj$value$split2$","valInteger","_valObj$value$split2$2","valFraction","replace","integer","result","szSep","separator","maskInteger","join","posLeadZero","indexOf","posSeparator","len","offset","indx","charAt","decimal","addSeparators","maskHasPositiveSign","enforceMaskSign","maskHasNegativeSign","number","arguments","undefined","isNaN","start","prefix","substring","end","reverse","substr","suffix","match","processMask","TableBody","renderCell","item","loading","console","log","content","_","get","numberIndex","numberTypes","findIndex","type","String","dateTypes","getFormattedDate","getFormattedNumber","createKey","_id","_this2","_this$props","data","id","TableFooter","_useContext","useContext","MainContext","rootState","dispatch","_useState","useState","_useState2","setOffset","_useState3","_useState4","pageLimit","setPageLimit","_useState5","_useState6","maxLimit","setMaxLimit","_useState7","_useState8","numberOfPages","setNumberOfPages","_useState9","_useState10","lock","setLock","_useState11","_useState12","clicked","setClicked","_useState13","count","results","_useState14","buffer","setBuffer","_useState15","_useState16","setCount","_useState17","_useState18","openTab","setOpenTab","useEffect","getPageLimit","Math","ceil","fetchedCount","_getState","getState","amount","activeTab","warn","e","handleChange","limit","setPageOptions","onClick","Pagination","className","size","color","PaginationItem","disabled","PaginationLink","first","href","previous","Array","fill","idx","active","floor","next","last","connect","state","ownProps","objectSpread","_ref","title","getLoading","isPatch","Card","CardHeader","es_Table","responsive","striped","tableHeader","tableBody","common_TableFooter","__webpack_require__","d","__webpack_exports__","setPageValues","_reducer__WEBPACK_IMPORTED_MODULE_0__","constants","UPDATE","stateName","payload","err","FilterByName","FilterByDate","FilterByProperty","tag","searchValue","fullScan","filteredData","filter","identifier","RegExp","error","concat","startDate","endDate","dateItem","Date","getTime","dateStart","dateEnd","arrayTag","index","prop","statusTypes","initialState","addCount","status","hasEdit","hasDelete","_data","reducer","action","addLine","uuid","random","populateLine","obj","returnObj","DisplayTable","schema","callback","fetchedData","setFetchedData","formStatus","setFormStatus","displayValues","setDisplay","defaultValues","setDefaultValues","found","find","_item","formData","setForm","validationData","setValidation","completed","setCompleted","generalOptions","setGeneralOptions","forEach","populateData","Joi","validate","abortEarly","values","_ref2","_ref2$currentTarget","currentTarget","name","defineProperty","setOptions","updatedOptions","keys","setValue","updates","_ref3","formUpdates","defaultValue","Table","Boolean","isView","dataItem","noEdit","Input","onChange","_ref4","_ref4$currentTarget","optionsFrom","_ref5","_ref5$currentTarget","returnName","Button","outline","cancelCallback","index_esm","Fragment","deleteCallback","InlineTable","lineTag","startForm","_useReducer","useReducer","_useReducer2","dataAllocated","setAllocated","Col","align","main_DisplayTable","assign","reducer_reducer","render_InlineTable","mainSchema","from_date","any","to_date","total_employee_pension","total_income_tax","total_loan","total_local_sales","total_overtime","total_pension_contribution","total_salary","total_transport_allowance","payroll_lines","array","items","object","min","errors","selectedLine","lineCounter","lineSchema","allow","optional","employee_name","employee_department","employee_position","basic_salary","employee_pension","employer_pension","income_tax","net_salary","non_taxable_income","taxable_income","total_deduction","PayrollProcessAdd","_this","classCallCheck","_super","call","doSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","submit","stop","JSON","parse","stringify","handleLineSave","bind","assertThisInitialized","populateState","updateLines","lineMapper","updateData","componentDidUpdate","isEdit","line","employee","first_name","father_name","department","position","lineContentMapper","payrollProcess","newData","setState","lockUpdate","lines","CardBody","Form","onSubmit","handleSubmit","Row","md","sm","xs","renderInput","Label","InLineEditableTable","isAdd","renderButton","ReusabelForm","PayrollProcessPage","payrollProcesss","doneAdd","doneEdit","savePayrollProcess","saveAddStatus","postPayrollProcess","_toggle","SAVED","submitButtonLabel","okSave","Page","CommonModal","openModal","component","toggle","isEmpty","deleteOptions","okCallback","message","PageSpinner","table","fetchStatus","selectFetchStatus","addStatus","selectAddStatus","editStatus","selectEditStatus","patchStatus","selectPatchStatus","deleteStatus","selectDeleteStatus","selectPayrollProcesss","selectSavePayrollProcesssAddStatus","fetchPayrollProcesss","Fetch","addPayrollProcess","Add","editPayrollProcess","Edit","deletePayrollProcess","Remove","SavePayrollProcess","patchPayrollProcess","Patch","setData","fetchLock","setFetchLock","addLock","setAddLock","editLock","setEditLock","deleteLock","setDeleteLock","patchLock","setPatchLock","filterType","SearchContext","startOfMonth","setStartDate","endOfMonth","setEndDate","FilterTypes","_useState19","_useState20","setStart","_useState21","_useState22","setEnd","setLockComponent","assignFilterComponent","reduxStatus","failure","success","toast","response","newPayrollProcess","POSTED","OPEN_SIV","REJECTED","doneDelete","requestBody","l","posting_date","PayrollProcess","donePatch","selectSavePayrollProcesss","PayrollProcess_PayrollProcess","setActiveTab","tab","Nav","tabs","NavItem","NavLink","TabContent","TabPane","tabId","PayRollProcess_PayrollProcessPage","SavedPayrollProcess","PayRollProcess_PayrollProcess"],"mappings":"mmBAmBeA,+JAZX,OACEC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACGC,KAAKC,MAAMC,QAAQC,IAAI,SAACC,GAAD,OACtBP,EAAAC,EAAAC,cAAA,MAAIM,IAAKD,EAAOE,MAAQF,EAAOC,KAAMD,EAAOG,kBAN9BC,gDCLpBC,EAAY,YACZC,EAAe,aAErB,SAASC,EAASC,GAChB,OAAOA,EAAKC,OAAOJ,GAoCrB,SAASK,EAAaC,EAAOC,EAASC,GACpC,IAAIC,GAAa,EACXC,EAAS,CACbJ,SAEEA,EAAQ,IACVG,GAAa,EAEbC,EAAOJ,OAASI,EAAOJ,OAGzBI,EAAOC,KAAOF,EAAa,IAAM,GAGjCC,EAAOJ,MAAQM,OAAOF,EAAOJ,OAAOO,QAClCN,EAAQO,UAAYP,EAAQO,SAASC,QAGvCL,EAAOJ,MAAQM,OAAOF,EAAOJ,OAAOU,WAIpC,IAAMC,EAAeV,EAAQO,UAAYP,EAAQO,SAASI,YAAY,KAtBzBC,EAuBFT,EAAOJ,MAAMc,MAAM,KAvBjBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAAK,EAAAH,EAAA,GAuBxCI,OAvBwC,IAAAD,EAuB3B,IAvB2BA,EAAAE,EAAAL,EAAA,GAuBtBM,OAvBsB,IAAAD,EAuBR,GAvBQA,EAuD7C,QA/BKC,GAAgBA,GAAeA,EAAYZ,QAAUE,KACxDU,EACEV,EAAe,EACX,GACAL,OAAO,KAAOe,GACXd,QAAQI,EAAe,GACvBW,QAAQ,KAAM,KAGzBlB,EAAOmB,QAAUJ,EACjBf,EAAOI,SAAWa,EAwBpB,SAAuBjB,EAAQH,GAC7BG,EAAOoB,OAAS,GAEhB,IAAMC,EAAQxB,EAAQsB,QAAQT,MAAMb,EAAQyB,WAEtCC,EAAcF,EAAMG,KAAK,IAEzBC,EAAcF,GAAeA,EAAYG,QAAQ,KACvD,GAAID,GAAe,EACjB,KAAOzB,EAAOmB,QAAQd,OAASkB,EAAYlB,OAASoB,GAClDzB,EAAOmB,QAAU,IAAMnB,EAAOmB,aAEI,IAA3BjB,OAAOF,EAAOmB,WACvBnB,EAAOmB,QAAU,IAKnB,IAAMQ,EAAeN,EAAM,IAAMA,EAAMA,EAAMhB,OAAS,GAAGA,OACzD,GAAIsB,EAGF,IAFA,IAAMC,EAAM5B,EAAOmB,QAAQd,OACrBwB,EAASD,EAAMD,EACZG,EAAO,EAAGA,EAAOF,EAAKE,IAC7B9B,EAAOoB,QAAUpB,EAAOmB,QAAQY,OAAOD,MAEhCA,EAAOD,EAAS,GAAKF,IAAiBG,EAAOF,EAAMD,IACxD3B,EAAOoB,QAAUvB,EAAQyB,gBAI7BtB,EAAOoB,OAASpB,EAAOmB,QAGzBnB,EAAOoB,QACLvB,EAAQO,UAAYJ,EAAOI,SACvBP,EAAQmC,QAAUhC,EAAOI,SACzB,GA3DN6B,CAAcjC,EAAQH,GAGA,MAAlBG,EAAOoB,QAAoC,KAAlBpB,EAAOoB,SAElCrB,GAAa,EACbC,EAAOC,KAAO,KAGXF,GAAcF,EAAQqC,oBACzBlC,EAAOC,KAAO,IACLF,GAAcF,EAAQqC,oBAC/BlC,EAAOC,KAAO,IACLF,IACTC,EAAOC,KACLH,GAAWA,EAAQqC,kBAAoBtC,EAAQuC,oBAC3C,GACA,KAGDpC,EA2CM,IAAAqC,EAAA,SAAC5C,EAAMG,GAAwB,IAAjBE,EAAiBwC,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAAP,GACrC,IAAK7C,GAAQ+C,MAAMtC,OAAON,IAExB,OAAOA,EAGT,IAAMC,EAzIR,WAAoC,IAAfJ,EAAe6C,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAAR,OACpBzC,EAAU,GACV+B,EAAMnC,EAAKY,OACXoC,EAAQjD,EAASC,GACvBI,EAAQ6C,OAASD,EAAQ,EAAIhD,EAAKkD,UAAU,EAAGF,GAAS,GAGxD,IAAMG,EAAMpD,EAASC,EAAKiB,MAAM,IAAImC,UAAUrB,KAAK,KAC7CK,EAASD,EAAMgB,EACfE,EAASrD,EAAKkD,UAAUd,EAAQA,EAAS,GAEzCC,EAAOD,GAAqB,MAAXiB,GAA6B,MAAXA,EAAiB,EAAI,GAC9DjD,EAAQkD,OAASH,EAAM,EAAInD,EAAKkD,UAAUb,EAAMF,GAAO,GAEvD/B,EAAQJ,KAAOA,EAAKkD,UAAUF,EAAOX,GACrCjC,EAAQuC,oBAAiD,MAA3BvC,EAAQJ,KAAKsC,OAAO,GAClDlC,EAAQqC,oBAAiD,MAA3BrC,EAAQJ,KAAKsC,OAAO,GAIlD,IAAIX,EAASvB,EAAQJ,KAAKuD,MAAMzD,GAUhC,OARAM,EAAQmC,QAAWZ,GAAUA,EAAOA,EAAOf,OAAS,IAAO,IAE3DR,EAAQyB,UAAaF,GAAUA,EAAO,IAAMA,EAAO,IAAO,IAG1DA,EAASvB,EAAQJ,KAAKiB,MAAMb,EAAQmC,SACpCnC,EAAQsB,QAAUC,EAAO,GACzBvB,EAAQO,SAAWgB,EAAO,GACnBvB,EA2GSoD,CAAYxD,GACtBO,EAASL,EAAaC,EAAOC,EAASC,GAC5C,OAAOD,EAAQ6C,OAAS1C,EAAOC,KAAOD,EAAOoB,OAASvB,EAAQkD,geChGjDG,oMAzCbC,WAAa,SAACC,EAAMnE,EAAQoE,GAE1B,GADAC,QAAQC,IAAI,SAAUF,GAClBpE,EAAOuE,QAAS,OAAOvE,EAAOuE,QAAQJ,EAAMC,GAChD,IAAMjC,EAASqC,IAAEC,IAAIN,EAAMnE,EAAOE,MAC5BwE,EAAcC,EAAYC,UAC9B,SAACC,GAAD,OAAUA,IAASC,OAAO9E,EAAOE,QAGnC,OADc6E,EAAUH,UAAU,SAACC,GAAD,OAAUA,IAASC,OAAO9E,EAAOE,SACtD,EACE8E,YAAiB7C,GAErBuC,GAAe,EACjBO,EAAmB,WAAY9C,EAAQ,CAAEe,iBAAiB,IAE1Df,EAAQ2C,OAAO3C,GAAU,MAKpC+C,UAAY,SAACf,EAAMnE,GACjB,OAAOmE,EAAKgB,KAAOnF,EAAOE,MAAQF,EAAOC,6DAElC,IAAAmF,EAAAxF,KAAAyF,EACmBzF,KAAKC,MAAvByF,EADDD,EACCC,KAAMxF,EADPuF,EACOvF,QAEd,OACEL,EAAAC,EAAAC,cAAA,aACG2F,EAAKvF,IAAI,SAACoE,GAAD,OACR1E,EAAAC,EAAAC,cAAA,MAAIM,IAAKkE,EAAKoB,IACXzF,EAAQC,IAAI,SAACC,GAAD,OACXP,EAAAC,EAAAC,cAAA,MAAIM,IAAKmF,EAAKF,UAAUf,EAAMnE,IAC3BoF,EAAKlB,WAAWC,EAAMnE,EAAQoF,EAAKvF,MAAMuE,uBAjClChE,8DC+HToF,EAjIK,WAAM,IAAAC,EACQC,qBAAWC,KAAnCC,EADgBH,EAChBG,UAAWC,EADKJ,EACLI,SADKC,EAEIC,mBAAS,GAFbC,EAAArE,OAAAC,EAAA,EAAAD,CAAAmE,EAAA,GAEjBlD,EAFiBoD,EAAA,GAETC,EAFSD,EAAA,GAAAE,EAGUH,mBAAS,GAHnBI,EAAAxE,OAAAC,EAAA,EAAAD,CAAAuE,EAAA,GAGjBE,EAHiBD,EAAA,GAGNE,EAHMF,EAAA,GAAAG,EAIQP,mBAAS,GAJjBQ,EAAA5E,OAAAC,EAAA,EAAAD,CAAA2E,EAAA,GAIjBE,EAJiBD,EAAA,GAIPE,EAJOF,EAAA,GAAAG,EAKkBX,mBAAS,GAL3BY,EAAAhF,OAAAC,EAAA,EAAAD,CAAA+E,EAAA,GAKjBE,EALiBD,EAAA,GAKFE,EALEF,EAAA,GAAAG,EAMAf,oBAAS,GANTgB,EAAApF,OAAAC,EAAA,EAAAD,CAAAmF,EAAA,GAMjBE,EANiBD,EAAA,GAMXE,EANWF,EAAA,GAAAG,EAOMnB,oBAAS,GAPfoB,EAAAxF,OAAAC,EAAA,EAAAD,CAAAuF,EAAA,GAOjBE,EAPiBD,EAAA,GAORE,EAPQF,EAAA,GAAAG,EAQIvB,mBAAS,CAAEwB,MAAO,EAAGC,QAAS,KARlCC,EAAA9F,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,GAQjBI,EARiBD,EAAA,GAQTE,EARSF,EAAA,GAAAG,EASE7B,mBAAS,GATX8B,EAAAlG,OAAAC,EAAA,EAAAD,CAAAiG,EAAA,GASjBL,EATiBM,EAAA,GASVC,EATUD,EAAA,GAAAE,EAUMhC,mBAAS,IAVfiC,EAAArG,OAAAC,EAAA,EAAAD,CAAAoG,EAAA,GAUjBE,EAViBD,EAAA,GAURE,EAVQF,EAAA,GAYxBG,oBAAU,WACMC,YAAaxC,IAM1B,CAACA,IAEJuC,oBAAU,WAAM,IACNZ,EAAmBG,EAAnBH,MAAOC,EAAYE,EAAZF,QACU,IAAnBA,EAAQpG,QAA0B,IAAVmG,IAC5BV,EAAiBwB,KAAKC,KAAKf,EAAQC,EAAQpG,SAC3CiF,EAAamB,EAAQpG,QACrBqF,EAAYc,GACZN,GAAQ,KAET,CAACgB,EAASpB,EAAkBR,EAAcI,EAAaQ,IAE1DkB,oBAAU,WACR,GAAIZ,EAAO,KACMgB,EAAgCb,EAAvCH,MAA8BjC,EAASoC,EAAlBF,QACzBpB,GAAad,EAAKlE,SACpByF,EAAiBwB,KAAKC,KAAKC,EAAejD,EAAKlE,SAC/CiF,EAAaf,EAAKlE,QAClBqF,EAAY8B,GACZtB,GAAQ,MAGX,CAACM,EAAOG,IAEXS,oBAAU,WACR,IAAI,IAAAK,EACqCC,YAAS7C,GAAxC4B,EADNgB,EACMhB,QAASkB,EADfF,EACeE,OAAQC,EADvBH,EACuBG,UAQzB,GAPc,KAAdA,EAAkBT,EAAWS,GAAatE,QAAQuE,KAAK,mCACnDF,IAAWnB,GACS,qBAAXmB,IACTZ,EAASY,GACTf,EAAUH,IAGU,cAApB1C,OAAO0C,KAA6BR,EAAM,KACpCO,EAAyBC,EAAzBD,MAAgBjC,EAASkC,EAAlBA,QACfX,EAAiBwB,KAAKC,KAAKf,EAAQjC,EAAKlE,SACxCiF,EAAaf,EAAKlE,QAClBqF,EAAYc,GACZN,GAAQ,IAEV,MAAO4B,MACR,CAACjD,EAAWkC,EAAUH,IAEzB,IAAMmB,EAAe,SAAClG,GAAyB,IAAjBmG,EAAiB1F,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAAT,KAC/B+D,GACHC,GAAW,GAEbpB,EAAUrD,GACNmG,GACF1C,EAAa0C,IAgBjB,OAZAZ,oBAAU,WACJvF,EAAS4D,GACPY,GACF4B,YAAe,GAAInD,EAAU,CAC3BjD,SACAmG,MAAO3C,EACP6C,QAAS7B,KAId,CAACxE,EAAQwD,IAGV3G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CAAYC,UAAU,kBAAkBC,KAAK,KAAKC,MAAM,WACtD5J,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAgBC,SAAqB,IAAX3G,GACxBnD,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CAAgBC,OAAK,EAACC,KAAK,IAAIT,QAAS,kBAAMH,EAAa,KAA3D,UAIFrJ,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,KACE7J,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CACEG,UAAQ,EACRJ,SAAqB,IAAX3G,EACVqG,QAAS,kBAAMH,EAAalG,EAASwD,OAGxCwD,MAAMhD,GACJiD,KAAK,IACL9J,IAAI,SAACyE,EAAGsF,GAAJ,OACHrK,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAgBS,OAAQD,IAAQzB,KAAK2B,MAAMpH,EAASwD,IAClD3G,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CAAgBP,QAAS,kBAAMH,EAAagB,EAAM1D,KAC/C0D,EAAM,MAIfrK,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,KACE7J,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CACES,MAAI,EACJhB,QAAS,kBAAMH,EAAalG,EAASwD,IACrCmD,SAAU3G,EAASwD,GAAaI,KAGpC/G,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAgBC,SAAU3G,EAASwD,GAAaI,GAC9C/G,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CACEU,MAAI,EACJjB,QAAS,kBAAMH,GAAclC,EAAgB,GAAKR,KAFpD,mDC1EK+D,gBAFS,SAACC,EAAOC,GAAR,OAAA1I,OAAA2I,EAAA,EAAA3I,CAAA,CAAwByI,SAAUC,IAE3CF,CAxCD,SAAAI,GAAiD,IAA9CzK,EAA8CyK,EAA9CzK,QAASwF,EAAqCiF,EAArCjF,KAAMkF,EAA+BD,EAA/BC,MAAOJ,EAAwBG,EAAxBH,MAAOK,EAAiBF,EAAjBE,WAE5CtC,oBAAU,WACkB,oBAAfsC,GAETpG,QAAQC,IAAI,SAAUmG,EAAWL,EAAO,CAAEM,SAAS,MAEpD,CAACN,EAAOK,IAPkD,IAQrD7E,EAAcF,qBAAWC,KAAzBC,UASR,OAPAuC,oBAAU,aAIP,CAACvC,IAEJvB,QAAQC,IAAImG,EAAWL,EAAO,CAAEM,SAAS,KAEvCjL,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAMxB,UAAU,OACd1J,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CAAYzB,UAAU,yBACpB1J,EAAAC,EAAAC,cAAA,WAAM,GAAK6K,EAAQA,EAAQ,KAE7B/K,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAiBzB,KAAK,KAAK0B,YAAU,EAACC,SAAO,GAC3CtL,EAAAC,EAAAC,cAACqL,EAAD,CAAalL,QAASA,IACtBL,EAAAC,EAAAC,cAACsL,EAAD,CACE3F,KAAMA,EACNxF,QAASA,EACTsE,QACwB,oBAAfqG,EACHA,EAAWL,EAAO,CAAEM,SAAS,IAC7B,KAGRjL,EAAAC,EAAAC,cAACuL,EAAD,6CCzCRC,EAAAC,EAAAC,EAAA,sBAAA5C,IAAA0C,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAjD,IAAA+C,EAAAC,EAAAC,EAAA,sBAAArC,IAAA,IAAAuC,EAAAJ,EAAA,IAIa1C,EAAW,SAAC7C,GACvB,OAAIA,EAAS,YACJA,EAAS,YAET,MAIE0F,EAAgB,SAC3BlB,EACAvE,EACA2B,GAGG,IAFH3G,EAEGwC,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAFO,GACVsF,EACGtF,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GADS,GAEZ,GAAuB,qBAAZmE,EAAyB,CAClC,GAAsB,IAAlBA,EAAQD,MAAa,OAAO,KAChC1B,EAAS,CACPhB,KAAM2G,IAAUC,OAChBC,UArBmB,cAsBnBC,QAAS,CACPnE,UACA3G,UACAuF,UAAWoB,EAAQpG,OAAyC,EAAhCiH,KAAKC,KAAKd,EAAQpG,OAAS,GAAS,EAChEsH,OAAQD,EAAS2B,GAAS3B,EAAS2B,GAAO1B,OAAS,EAAI,EACvDC,iBAwBKP,EAAe,SAACxC,GAC3B,IAAM4B,EAAU5B,EAAS,YACzB,IACE,IAAM+F,EAAUnE,EAAO,UAAgBA,EAAO,UAAgB,EAC9D,OAAOmE,GAAoB,EAC3B,MAAOC,MAIE5C,EAAiB,SAC5BxE,EACAqB,GAEG,IADHhF,EACGwC,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GADO,CAAET,OAAQ,EAAGmG,MAAO,GAE9BlD,EAAS,CACPhB,KAAM2G,IAAUC,OAChBC,UAnEqB,cAoErBC,QAAS,CACP9K,yRCvENsK,EAAAC,EAAAC,EAAA,sBAAAQ,IAAAV,EAAAC,EAAAC,EAAA,sBAAAS,IAAAX,EAAAC,EAAAC,EAAA,sBAAAU,IAAO,IAAMF,EAAe,WAKvB,IAJHvG,EAIGjC,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAJI,GACP2I,EAGG3I,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAHG,OACN4I,EAEG5I,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAFW,GACd6I,EACG7I,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,IAAAA,UAAA,GACC8I,OAAe7I,EAenB,OAdI2I,EAAY7K,OAAS,IACvB+K,EAAe7G,EAAK8G,OAAO,SAACjI,GAC1B,IAAMkI,EAAaH,EAAW,GAAK,IACnC,IACE,OACED,GACAnH,OAAOX,EAAK6H,IAAMjI,MAAM,IAAIuI,OAAOD,EAAaJ,EAAa,OAE/D,MAAOL,GACPvH,QAAQkI,MAAR,uBAAAC,OAAqC1H,OAAO8G,KAE9C,OAAO,QAGoB,qBAAjBO,EAA+B7G,EAAO6G,GAGzCL,EAAe,WAKvB,IAJHxG,EAIGjC,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAJI,GACP2I,EAGG3I,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAHG,eACNoJ,EAEGpJ,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAFS,GACZqJ,EACGrJ,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GADO,GAEN8I,OAAe7I,EAgBnB,OAfImJ,EAAUrL,OAAS,GAAKsL,EAAQtL,OAAS,IAC3C+K,EAAe7G,EAAK8G,OAAO,SAACjI,GAC1B,IACE,IAAMwI,EAAW,IAAIC,KAAKzI,EAAK6H,IAAMa,UAC/BC,EAAY,IAAIF,KAAKH,GAAWI,UAChCE,EAAU,IAAIH,KAAKF,GAASG,UAClC,OACEJ,GAAaC,GAAWC,GAAYI,GAAWJ,GAAYG,EAE7D,MAAOlB,GACPvH,QAAQkI,MAAR,uBAAAC,OAAqC1H,OAAO8G,KAE9C,OAAO,QAGoB,qBAAjBO,EAA+B7G,EAAO6G,GAGzCJ,EAAmB,WAM3B,IALHzG,EAKGjC,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GALI,GACP2I,EAIG3I,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAJG,UACN4I,EAGG5I,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAHW,GACd2J,EAEG3J,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAFQ,YACX6I,EACG7I,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,IAAAA,UAAA,GACC8I,OAAe7I,EAenB,OAdI2I,EAAY7K,OAAS,IACvB+K,EAAe7G,EAAK8G,OAAO,SAACjI,GAC1B,IAAMkI,EAAaH,EAAW,GAAK,IACnC,IACE,IAAMe,EAAQ9I,EAAK6I,GAAUpI,UAAU,SAACsI,GAAD,OACrCA,EAAKlB,GAAKjI,MAAM,IAAIuI,OAAOD,EAAaJ,EAAa,SAEvD,OAAOA,GAAegB,GAAS,EAC/B,MAAOrB,GACPvH,QAAQkI,MAAR,uBAAAC,OAAqC1H,OAAO8G,KAE9C,OAAO,QAGoB,qBAAjBO,EAA+B7G,EAAO6G,sHCvEzCgB,EACJ,cAOIC,EAAe,CACxBC,SAAU,EACVC,OARM,OASNC,SAAS,EACTC,WAAW,EACXC,MAAO,IAGEjC,EACJ,OADIA,EAED,SAGCkC,EAAU,WAAkC,IAAjCtD,EAAiC/G,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAAzB+J,EAAcO,EAAWtK,UAAAjC,OAAA,EAAAiC,UAAA,QAAAC,EACrD,OAAQqK,EAAO9I,MACX,KAAK2G,EACD,OAAO7J,OAAA2I,EAAA,EAAA3I,CAAA,GACAyI,EADP,CAEIiD,SAAUjD,EAAMiD,SAAW,EAC3BC,OAAQH,IAIhB,KAAK3B,EACD,OAAO7J,OAAA2I,EAAA,EAAA3I,CAAA,GACAyI,EADP,CAEIqD,MAAOE,EAAOhC,UAItB,QAAS,OAAOvB,IAIXwD,EAAU,SAAC/H,GAAD,OAAcA,EAAS,CAAEhB,KAAM2G,2CCnChDqC,EAAO,kBAAMxF,KAAKyF,SAASzM,SAAS,IAAIqC,UAAU,IAE3CqK,EAAe,SAACC,EAAK7I,GAChC,IAAI8I,EAAY,GAChB,IAAK,IAAIf,KAAQc,EACfC,EAAUf,GAAQ,GAEpB,OAAOvL,OAAA2I,EAAA,EAAA3I,CAAA,GACFsM,EADL,CAEE9I,SAISgI,EACN,cADMA,EAEL,OAFKA,EAGL,OAHKA,EAIJ,QAJIA,EAKD,WAGCe,EAAe,SAAA3D,GAUtB,IATJjF,EASIiF,EATJjF,KACAxF,EAQIyK,EARJzK,QACAyN,EAOIhD,EAPJgD,QACAC,EAMIjD,EANJiD,UACAF,EAKI/C,EALJ+C,OACAD,EAII9C,EAJJ8C,SACAc,EAGI5D,EAHJ4D,OACAtI,EAEI0E,EAFJ1E,SACAuI,EACI7D,EADJ6D,SACItI,EACkCC,mBAAS,IAD3CC,EAAArE,OAAAC,EAAA,EAAAD,CAAAmE,EAAA,GACGuI,EADHrI,EAAA,GACgBsI,EADhBtI,EAAA,GAAAE,EAEgCH,mBAASoH,GAFzChH,EAAAxE,OAAAC,EAAA,EAAAD,CAAAuE,EAAA,GAEGqI,EAFHpI,EAAA,GAEeqI,EAFfrI,EAAA,GAAAG,EAGgCP,mBAAST,EAAKvF,IAAI,kBAAM,KAHxDwG,EAAA5E,OAAAC,EAAA,EAAAD,CAAA2E,EAAA,GAGGmI,EAHHlI,EAAA,GAGkBmI,EAHlBnI,EAAA,GAAAG,EAIsCX,mBAAS,IAJ/CY,EAAAhF,OAAAC,EAAA,EAAAD,CAAA+E,EAAA,GAIGiI,EAJHhI,EAAA,GAIkBiI,EAJlBjI,EAAA,GAMJwB,oBAAU,WAENgF,IAAqBoB,GACrBpB,IAAsBoB,GACtBpB,IAAyBoB,GAEzBC,EAAclB,IAEf,CAACA,EAAQkB,EAAenB,IAE3BlF,oBAAU,WACR,GAAI7C,EAAKlE,OAAS,GAA4B,IAAvBiN,EAAYjN,OAAc,CAC/C,IAAM+K,EAAe7G,EAAKvF,IAAI,SAACoE,GAC7B,IAAI8J,EAAY,GAChB,IAAK,IAAIf,KAAQ/I,EAAM,CAErB,IAAM0K,EAAQ/O,EAAQgP,KAAK,SAACC,GAAD,OAAWA,EAAM/C,MAAQkB,IAChD2B,IACFZ,EAAUY,EAAM7C,KAAOxH,IAAEC,IAAIN,EAAM0K,EAAM7C,MAG7C,OAAOrK,OAAA2I,EAAA,EAAA3I,CAAA,GACFsM,EADL,CAEE9I,IAAK0I,QAGTa,EAAWvC,EAAapM,IAAI,kBAAM,KAClCuO,EAAenC,KAEhB,CAAC7G,EAAMgJ,IAEVnG,oBAAU,WD/Bc,IAAC7C,KCgCZ+I,EDhCqB,SAAAxI,GAChCA,EAAS,CAAEhB,KAAM2G,EAAkBG,QAASrG,MC+BpBO,GACxBuI,EAASC,IACR,CAACA,EAAaxI,IAxCb,IAAAiB,EA0CwBf,mBAAS,IA1CjCgB,EAAApF,OAAAC,EAAA,EAAAD,CAAAmF,EAAA,GA0CGkI,EA1CHjI,EAAA,GA0CakI,EA1CblI,EAAA,GAAAG,EA2CoCnB,mBAAS,IA3C7CoB,EAAAxF,OAAAC,EAAA,EAAAD,CAAAuF,EAAA,GA2CGgI,EA3CH/H,EAAA,GA2CmBgI,EA3CnBhI,EAAA,GAAAG,EA4C8BvB,oBAAS,GA5CvC0B,GAAA9F,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,GA4CG8H,GA5CH3H,GAAA,GA4Cc4H,GA5Cd5H,GAAA,GAAAG,GA6CwC7B,mBAAS,IA7CjD8B,GAAAlG,OAAAC,EAAA,EAAAD,CAAAiG,GAAA,GA6CG0H,GA7CHzH,GAAA,GA6CmB0H,GA7CnB1H,GAAA,GA+CJM,oBAAU,WACR,IAAMtH,EAAU,GAChBf,EAAQ0P,QAAQ,SAACrL,GACG,WAAdA,EAAKU,OACPhE,EAAQsD,EAAK6H,KAAO7H,EAAKtD,WAG7B0O,GAAkB1O,IACjB,CAAC0O,KAEJpH,oBAAU,WACR,GAAIoG,IAAepB,EAAiB,CAClC,IAAMhI,EAAM0I,IACZS,EAAeD,EAAY7B,OAAOuB,EAAaM,EAAY,GAAIlJ,KAC/DsK,GAAa1B,EAAaM,EAAY,GAAIlJ,IAC1CuJ,EAAWD,EAAcjC,QAAO,MAEjC,CAAC+B,IAEJ,IAAMkB,GAAe,SAACnK,GACpB6J,EAAchB,GACdc,EAAQtN,OAAA2I,EAAA,EAAA3I,CAAA,GACHgN,EACArJ,KAIP6C,oBAAU,WACR,IACQoE,EAAUmD,IAAIC,SAASX,EAAUE,EADzB,CAAEU,YAAY,IACtBrD,MAEHA,GAKHlI,QAAQuE,KAAK2D,GACb8C,IAAa,IALT1N,OAAOkO,OAAOb,GAAU5N,OAAS,GACnCiO,IAAa,IAMhB,CAACL,IAEJ,IAAMlG,GAAe,SAAAgH,GAAkD,IAAAC,EAAAD,EAA/CE,cAAiBC,EAA8BF,EAA9BE,KAAMtP,EAAwBoP,EAAxBpP,MAAOyN,EAAiB2B,EAAjB3B,SAYpDa,EAAQtN,OAAA2I,EAAA,EAAA3I,CAAA,GACHqN,EADErN,OAAAuO,EAAA,EAAAvO,CAAA,GAEJsO,EAAOtP,KAcVyN,EAAS,CACP6B,OACAtP,QACAwP,WA9BiB,SAACnE,EAAKnL,GACvB,IAAIuP,EAAiBd,GACP3N,OAAO0O,KAAKf,IAAgB1K,UACxC,SAACU,GAAD,OAAUA,IAAS0G,KAER,IACXoE,EAAepE,GAAOnL,EACtB0O,GAAkBa,KAwBpBvP,QAASyO,GACTgB,SAhBe,WAAiB,IAAhBT,EAAgBxM,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GAAP,GACrBkN,EAAU,GACdV,EAAO9P,IAAI,SAAAyQ,GAAqB,IAAlBP,EAAkBO,EAAlBP,KAAMtP,EAAY6P,EAAZ7P,MAElB,OADA4P,EAAQN,GAAQtP,EACT,OAETsO,EAAQtN,OAAA2I,EAAA,EAAA3I,CAAA,GACHqN,EACAuB,KASLvB,cA2EJ,OApBA7G,oBAAU,WACR,IAAIsI,EAAc,GAClB3Q,EAAQ0P,QAAQ,SAACrL,GACXA,EAAKuM,eACPD,EAAW9O,OAAA2I,EAAA,EAAA3I,CAAA,GACN8O,EADM9O,OAAAuO,EAAA,EAAAvO,CAAA,GAERwC,EAAK6H,IAAM7H,EAAKuM,kBAInB/O,OAAOkO,OAAOY,GAAarP,OAAS,IACtC6N,EAAQtN,OAAA2I,EAAA,EAAA3I,CAAA,GACHqN,EACAyB,IAEL7B,EAAiB6B,KAElB,CAAC3Q,EAASmP,IAIXxP,EAAAC,EAAAC,cAACgR,EAAA,EAAD,CAAiBvH,KAAK,KAAK0B,YAAU,EAACC,SAAO,GAC3CtL,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACGG,EACEsM,OAAO,SAACc,GAAD,OAAW0D,QAAQ1D,EAAK2D,UAC/B9Q,IAAI,SAACoE,GAAD,OACH1E,EAAAC,EAAAC,cAAA,UAAKwE,EAAKhE,WAIlBV,EAAAC,EAAAC,cAAA,aACG0O,EAAYtO,IAAI,SAAC+Q,EAAUhH,GAC1B,OACErK,EAAAC,EAAAC,cAAA,UACGG,EACEsM,OAAO,SAACc,GAAD,OAAW0D,QAAQ1D,EAAK2D,UAC/B9Q,IAAI,SAACoE,GACJ,OAAOsK,EAAc3E,KAAS3F,EAAK4M,OACjCtR,EAAAC,EAAAC,cAAA,UACiB,WAAdwE,EAAKU,KACJpF,EAAAC,EAAAC,cAACqR,EAAA,EAAD,CACEnM,KAAMV,EAAKU,KACXoL,KAAM9L,EAAK6H,IACXrL,MAAO6D,IAAEC,IAAIuK,EAAU7K,EAAK6H,KAC5BiF,SAAU,SAAAC,GAAwC,IAAAC,EAAAD,EAArClB,cAAiBC,EAAoBkB,EAApBlB,KAAMtP,EAAcwQ,EAAdxQ,MAC5ByN,EAAWjK,EAAKiK,SAClBjK,EAAKiK,SACL,kBAAM,MACVtF,GAAa,CACXkH,cAAe,CAAEC,OAAMtP,QAAOyN,eAGlC7E,SAAUpF,EAAKoF,UAEf9J,EAAAC,EAAAC,cAAA,eACsB,WAArBwE,EAAKiN,YACF9B,GAAenL,EAAK6H,KAAKjM,IAAI,SAACgP,GAAD,OAC3BtP,EAAAC,EAAAC,cAAA,UAAQgB,MAAOoO,EAAMxJ,IAAKwJ,EAAMkB,QAElCX,GAAenL,EAAK6H,KAAKjM,IAAI,SAACgP,GAAD,OAC3BtP,EAAAC,EAAAC,cAAA,UAAQgB,MAAOoO,GAAQA,MAI/BtP,EAAAC,EAAAC,cAACqR,EAAA,EAAD,CACEnM,KAAMV,EAAKU,KAAOV,EAAKU,KAAO,OAC9BoL,KAAM9L,EAAK6H,IACXzC,SAAUpF,EAAKoF,SACf5I,MAAO6D,IAAEC,IAAIuK,EAAU7K,EAAK6H,KAC5BiF,SAAU,SAAAI,GAAwC,IAAAC,EAAAD,EAArCrB,cAAiBC,EAAoBqB,EAApBrB,KAAMtP,EAAc2Q,EAAd3Q,MAC5ByN,EAAWjK,EAAKiK,SAClBjK,EAAKiK,SACL,kBAAM,MACVtF,GAAa,CACXkH,cAAe,CAAEC,OAAMtP,QAAOyN,kBAOxC3O,EAAAC,EAAAC,cAAA,UA7FC,SAACmR,EAAU3M,GAC5B,GAAyB,WAArBA,EAAKiN,YAMP,OAAON,EAAS3M,EAAK6H,KALrB,IAAM6C,EAAQ1K,EAAKtD,QAAQiO,KACzB,SAAC5B,GAAD,OAAUpI,OAAOoI,EAAK3H,MAAQT,OAAOgM,EAAS3M,EAAK6H,QAErD,OAAI6C,EAAcA,EAAMoB,UAAxB,EAwFmBsB,CAAWT,EAAU3M,MAG/BoJ,EACC9N,EAAAC,EAAAC,cAAA,UACG8O,EAAc3E,GACbrK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6R,EAAA,EAAD,CACErI,UAAU,MACVC,KAAK,KACLqI,SAAO,EACPpI,MAAM,OACNJ,QAAS,WAxH7BqF,EACED,EAAYtO,IAAI,SAACuF,GACf,OAAIA,EAAKH,MAAQ6J,EAAS7J,IACjBxD,OAAA2I,EAAA,EAAA3I,CAAA,CACLwD,IAAK0I,KACFmB,GAGE1J,KAIboJ,EAAWD,EAAc1O,IAAI,kBAAM,KA8GbyO,EAAcrB,IAEhB5D,UAAW6F,IATb,QAaA3P,EAAAC,EAAAC,cAAC6R,EAAA,EAAD,CACErI,UAAU,MACVC,KAAK,KACLqI,SAAO,EACPpI,MAAM,SACNJ,QAAS,YA9JR,WACrB,GAAIsF,IAAepB,EAAiB,CAClC,IAAMF,EAAQoB,EAAYzJ,UAAU,SAACU,GAAD,OAAUA,EAAKH,MAAQ6J,EAAS7J,MAChE8H,GAAS,IACXqB,EAAeD,EAAYjC,OAAO,SAAC5H,EAAGsF,GAAJ,OAAYmD,IAAUnD,KACxD4E,EAAWD,EAAcrC,OAAO,SAAC5H,EAAGsF,GAAJ,OAAYmD,IAAUnD,MAExDuF,IAAa,QAEbX,EAAWD,EAAc1O,IAAI,kBAAM,KAErCyO,EAAcrB,GACdgC,EAAc,IAmJQuC,KANJ,WAaFjS,EAAAC,EAAAC,cAAC6R,EAAA,EAAD,CACErI,UAAU,MACVC,KAAK,KACLqI,SAAO,EACPpI,MAAM,UACNJ,QAAS,WACPyF,EACED,EAAc1O,IAAI,SAACyE,EAAG7D,GAAJ,OAAcA,IAAUmJ,KAE5C2F,GAAaqB,GACbtC,EAAcrB,KAGhB1N,EAAAC,EAAAC,cAACgS,EAAA,EAAD,QAKNlS,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkS,SAAA,MAEDpE,EACC/N,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC6R,EAAA,EAAD,CACErI,UAAU,MACVC,KAAK,KACLqI,SAAO,EACPpI,MAAM,SACNJ,QAAS,kBAlLJ,SAAC9D,GACtB,IAAM8H,EAAQoB,EAAYzJ,UAAU,SAACU,GAAD,OAAUA,EAAKH,MAAQA,IACvD8H,GAAS,IACXqB,EAAeD,EAAYjC,OAAO,SAAC5H,EAAGsF,GAAJ,OAAYA,IAAQmD,KACtDyB,EAAWD,EAAcrC,OAAO,SAAC5H,EAAGsF,GAAJ,OAAYA,IAAQmD,KACpDuB,EAAcrB,IA6Ke0E,CAAef,EAAS3L,OAEvC1F,EAAAC,EAAAC,cAACgS,EAAA,EAAD,QAIJlS,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkS,SAAA,sBCvWHE,EAAc,SAAAvH,GAQrB,IAPJjF,EAOIiF,EAPJjF,KACAxF,EAMIyK,EANJzK,QACAsO,EAKI7D,EALJ6D,SACAD,EAII5D,EAJJ4D,OACA4D,EAGIxH,EAHJwH,QACAxI,EAEIgB,EAFJhB,SACAyI,EACIzH,EADJyH,UACIC,EACsBC,qBAAWxE,EAASN,GAD1C+E,EAAAxQ,OAAAC,EAAA,EAAAD,CAAAsQ,EAAA,GACG7H,EADH+H,EAAA,GACUtM,EADVsM,EAAA,GAAArM,EAEkCC,oBAAS,GAF3CC,EAAArE,OAAAC,EAAA,EAAAD,CAAAmE,EAAA,GAEGsM,EAFHpM,EAAA,GAEkBqM,EAFlBrM,EAAA,GAIJmC,oBAAU,WACJ6J,GACFpE,EAAQ/H,IAET,CAACmM,EAAWnM,IAWf,OACEpG,EAAAC,EAAAC,cAAA,WACG4J,EAAU9J,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkS,SAAA,MAAQnS,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKC,MAAM,QAAQpJ,UAAU,kBAC9C1J,EAAAC,EAAAC,cAAC6R,EAAA,EAAD,CACErI,UAAU,kBACVC,KAAK,KACLqI,SAAO,EACPpI,MAAM,OACNJ,QAAS,kBAAM2E,EAAQ/H,KAEtBkM,GAAmB,aAGxBtS,EAAAC,EAAAC,cAAC6S,EAAD7Q,OAAA8Q,OAAA,GACMrI,EADN,CAEEvE,SAAUA,EACVP,KAAMA,EACN6I,OAAQA,EACRrO,QAASA,EACTsO,SA5BY,SAAC9I,IACZ8M,GAAiB9M,EAAKlE,OAAS,GAAKO,OAAOkO,OAAOvK,EAAK,IAAIlE,OAAS,GACvEgN,EAAS9I,GACT+M,GAAa,IACJjI,EAAMqD,MAAMrM,QAAUkE,EAAKlE,QACpCgN,EAAS9I,IAwBPiI,SAAUhE,EACViE,WAAYjE,OCpDpB4B,EAAAC,EAAAC,EAAA,sBAAAmH,IAAArH,EAAAC,EAAAC,EAAA,sBAAAuC,IAAAzC,EAAAC,EAAAC,EAAA,sBAAA+B,IAAAjC,EAAAC,EAAAC,EAAA,sBAAAqH,IAAAvH,EAAAC,EAAAC,EAAA,sBAAAsH,sYCMaC,EAAa,CACxBC,UAAWnD,IAAIoD,MACfC,QAASrD,IAAIoD,MACbE,uBAAwBtD,IAAIoD,MAC5BG,iBAAkBvD,IAAIoD,MACtBI,WAAYxD,IAAIoD,MAChBK,kBAAmBzD,IAAIoD,MACvBM,eAAgB1D,IAAIoD,MACpBO,2BAA4B3D,IAAIoD,MAChCQ,aAAc5D,IAAIoD,MAClBS,0BAA2B7D,IAAIoD,MAC/BU,cAAe9D,IAAI+D,QAAQC,MAAMhE,IAAIiE,UAAUC,IAAI,IAGxCxG,EAAe,CAC1B9H,KAAM,CACJuN,UAAW,GACXE,QAAS,GACTC,uBAAwB,GACxBC,iBAAkB,GAClBC,WAAY,GACZC,kBAAmB,GACnBC,eAAgB,GAChBC,2BAA4B,GAC5BC,aAAc,GACdC,0BAA2B,GAC3BC,cAAe,IAEjBK,OAAQ,GACRC,aAAc,GACdC,YAAa,GAoCFC,EAAa,CACxB7O,IAAKuK,IAAIoD,MAAMmB,MAAM,IAAIC,WACzBC,cAAezE,IAAIoD,MACnBsB,oBAAqB1E,IAAIoD,MACzBuB,kBAAmB3E,IAAIoD,MACvBwB,aAAc5E,IAAIoD,MAClByB,iBAAkB7E,IAAIoD,MACtB0B,iBAAkB9E,IAAIoD,MACtB2B,WAAY/E,IAAIoD,MAChB4B,WAAYhF,IAAIoD,MAChB6B,mBAAoBjF,IAAIoD,MACxB8B,eAAgBlF,IAAIoD,MACpB+B,gBAAiBnF,IAAIoD,2cCoFRgC,0CAxJb,SAAAA,EAAYjV,GAAO,IAAAkV,EAAA,OAAApT,OAAAqT,EAAA,EAAArT,CAAA/B,KAAAkV,IACjBC,EAAAE,EAAAC,KAAAtV,KAAMC,IAWRsV,SAZmBxT,OAAAyT,EAAA,EAAAzT,CAAA0T,EAAA3V,EAAA4V,KAYR,SAAAC,IAAA,OAAAF,EAAA3V,EAAA8V,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAxL,MAAA,OACT8K,EAAKlV,MAAM8V,OAAOZ,EAAK3K,MAAM9E,MADpB,wBAAAmQ,EAAAG,SAAAL,MAVTR,EAAK3H,aAAeA,EACpB2H,EAAK3K,MAAQyL,KAAKC,MAAMD,KAAKE,UAAUhB,EAAK3H,eAC5C2H,EAAK5G,OAASyE,EACdmC,EAAKiB,eAAiBjB,EAAKiB,eAAeC,KAApBtU,OAAAuU,EAAA,EAAAvU,CAAAoT,IACtBA,EAAKoB,cAAgBpB,EAAKoB,cAAcF,KAAnBtU,OAAAuU,EAAA,EAAAvU,CAAAoT,IACrBA,EAAKqB,YAAcrB,EAAKqB,YAAYH,KAAjBtU,OAAAuU,EAAA,EAAAvU,CAAAoT,IACnBA,EAAKsB,WAAatB,EAAKsB,WAAWJ,KAAhBtU,OAAAuU,EAAA,EAAAvU,CAAAoT,IAClBA,EAAKuB,WAAavB,EAAKuB,WAAWL,KAAhBtU,OAAAuU,EAAA,EAAAvU,CAAAoT,IATDA,kEAiBjBnV,KAAK2W,0DAIL,OAAI3W,KAAKC,MAAM2W,QAAU5W,KAAKC,MAAMgR,ODkBP,SAACvL,GAChC,OAAOA,EADyDjC,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GArDvC,iBAsDJtD,IAAI,SAAC0W,GAAD,MAAW,CAClCtR,IAAKsR,EAAKC,SAASnR,GACnB4O,cAAesC,EAAKC,SAASC,WAAa,IAAMF,EAAKC,SAASE,YAC9DxC,oBAAqBqC,EAAKC,SAASG,WACnCxC,kBAAmBoC,EAAKC,SAASI,SACjCxC,aAAcmC,EAAKnC,aACnBC,iBAAkBkC,EAAKlC,iBACvBC,iBAAkBiC,EAAKjC,iBACvBC,WAAYgC,EAAKhC,WACjBC,WAAY+B,EAAK/B,WACjBC,mBAAoB8B,EAAK9B,mBACzBC,eAAgB6B,EAAK7B,eACrBC,gBAAiB4B,EAAK5B,mBC9BbkC,CAAkBnX,KAAKC,MAAMyF,KDlChB,iBCoCb,yCAIGA,GACZ,IDN0B0R,EAAgBX,ECMpCY,GDNoBD,ECMI1R,EDNY+Q,ECMNzW,KAAKyW,WDLpC1U,OAAAuO,EAAA,EAAAvO,CAAA,CACLkR,UAAWmE,EAAenE,UAC1BE,QAASiE,EAAejE,QACxBC,uBAAwBgE,EAAehE,uBACvCC,iBAAkB+D,EAAe/D,iBACjCC,WAAY8D,EAAe9D,WAC3BC,kBAAmB6D,EAAe7D,kBAClCC,eAAgB4D,EAAe5D,eAC/BC,2BAA4B2D,EAAe3D,2BAC3CC,aAAc0D,EAAe1D,aAC7BC,0BAA2ByD,EAAezD,2BAhDnB,gBAiDR8C,MCLfzW,KAAKsX,SAAS,CAAEC,YAAY,EAAM7R,KAAM2R,wCAG9BG,IACNA,EAAMhW,OAAS,GAAKxB,KAAKwK,MAAM9E,KAAX,cAA6BlE,OAAS,IAC5DxB,KAAKsX,SAAS,CACZ5R,KAAK3D,OAAA2I,EAAA,EAAA3I,CAAA,GACA/B,KAAKwK,MAAM9E,KADZ3D,OAAAuO,EAAA,EAAAvO,CAAA,GDlDe,gBCoDFyV,oDAOhBxX,KAAKC,MAAM2W,SAAU5W,KAAKC,MAAMgR,QAAYjR,KAAKwK,MAAM+M,YAC1DvX,KAAKuW,cAAcvW,KAAKC,MAAMyF,6CAInBA,GACb1F,KAAKsX,SAAS,CACZ5R,KAAK3D,OAAA2I,EAAA,EAAA3I,CAAA,GACA/B,KAAKwK,MAAM9E,KADZ3D,OAAAuO,EAAA,EAAAvO,CAAA,GDlEiB,gBCoEJ2D,yCAKVrF,EAAKU,GACdf,KAAKsX,SAAS,CACZ5R,KAAK3D,OAAA2I,EAAA,EAAA3I,CAAA,GACA/B,KAAKwK,MAAM9E,KADZ3D,OAAAuO,EAAA,EAAAvO,CAAA,GAED1B,EAAMU,uCAMX,OACElB,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAMxB,UAAU,YACd1J,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CAAYzB,UAAU,YAAtB,mBACA1J,EAAAC,EAAAC,cAAC0X,EAAA,EAAD,KACE5X,EAAAC,EAAAC,cAAC2X,EAAA,EAAD,CAAMC,SAAU3X,KAAK4X,cACnB/X,EAAAC,EAAAC,cAAC8X,EAAA,EAAD,KACEhY,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,YAAa,YAAa,SAE9CpY,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,UAAW,UAAW,SAE1CpY,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,CAChB5H,KAAM,yBACN9P,MAAO,4BAGXV,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,CAChB5H,KAAM,mBACN9P,MAAO,sBAGXV,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,CAChB5H,KAAM,aACN9P,MAAO,gBAGXV,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,CAChB5H,KAAM,oBACN9P,MAAO,uBAGXV,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,CAChB5H,KAAM,iBACN9P,MAAO,oBAGXV,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,CAChB5H,KAAM,6BACN9P,MAAO,gCAGXV,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,CAChB5H,KAAM,eACN9P,MAAO,kBAGXV,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,CAChB5H,KAAM,4BACN9P,MAAO,+BAGXV,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvBnY,EAAAC,EAAAC,cAACmY,EAAA,EAAD,eACArY,EAAAC,EAAAC,cAAC0X,EAAA,EAAD,KACE5X,EAAAC,EAAAC,cAACoY,EAAA,EAAD,CACEjY,SAAoBF,KAAKC,MD7DpC,CACL,CACEmM,IAAK,gBACL7L,MAAO,OACP0E,KAAM,QAER,CACEmH,IAAK,sBACL7L,MAAO,aACP0E,KAAM,QAER,CACEmH,IAAK,oBACL7L,MAAO,WACP0E,KAAM,QAER,CACEmH,IAAK,eACL7L,MAAO,eACP0E,KAAM,QAER,CACEmH,IAAK,mBACL7L,MAAO,mBACP0E,KAAM,QAER,CACEmH,IAAK,mBACL7L,MAAO,mBACP0E,KAAM,QAER,CACEmH,IAAK,aACL7L,MAAO,aACP0E,KAAM,QAER,CACEmH,IAAK,aACL7L,MAAO,aACP0E,KAAM,QAER,CACEmH,IAAK,qBACL7L,MAAO,qBACP0E,KAAM,QAER,CACEmH,IAAK,iBACL7L,MAAO,iBACP0E,KAAM,QAER,CACEmH,IAAK,kBACL7L,MAAO,kBACP0E,KAAM,UCQQ0E,SAAU3J,KAAKC,MAAM0J,SACrBjE,KAAM1F,KAAKwK,MAAM9E,KAAX,cACN8I,SAAUxO,KAAKwW,YACfjI,OAAQ6F,EACRhC,UAAWpS,KAAKC,MAAMmY,UAI5BvY,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKlJ,KAAK,KAAKmJ,MAAM,UAClB3S,KAAKqY,aAAa,oBAhJHC,iCCHjB,SAASC,EAAT5N,GAOZ,IAND6N,EAMC7N,EAND6N,gBACAC,EAKC9N,EALD8N,QACAC,EAIC/N,EAJD+N,SACAC,EAGChO,EAHDgO,mBACAC,EAECjO,EAFDiO,cACAC,EACClO,EADDkO,mBACCxG,EACyBC,qBAAWxE,IAASN,KAD7C+E,EAAAxQ,OAAAC,EAAA,EAAAD,CAAAsQ,EAAA,GACM7H,EADN+H,EAAA,GACatM,EADbsM,EAAA,GAEKrS,EAAU,CACd,CAAEI,KAAM,YAAaC,MAAO,aAC5B,CAAED,KAAM,UAAWC,MAAO,WAC1B,CAAED,KAAM,yBAA0BC,MAAO,0BACzC,CAAED,KAAM,aAAcC,MAAO,cAC7B,CAAED,KAAM,oBAAqBC,MAAO,qBACpC,CAAED,KAAM,iBAAkBC,MAAO,kBACjC,CAAED,KAAM,6BAA8BC,MAAO,8BAC7C,CAAED,KAAM,eAAgBC,MAAO,gBAC/B,CAAED,KAAM,4BAA6BC,MAAO,6BAC5C,CAAED,KAAM,SAAUC,MAAO,UAEzB,CACEF,IAAK,OACLsE,QAAS,SAACyS,GAAD,OACPvX,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkS,SAAA,KACEnS,EAAAC,EAAAC,cAAC6R,EAAA,EAAD,CACErI,UAAU,MACVC,KAAK,KACLqI,SAAO,EACPpI,MAAM,OACNJ,QAAS,WACPyP,YACE,CACE7T,KAAM,OACNzE,UAAW0U,EACXxP,KAAM0R,EACNxM,MAAO,gBAET3E,KAIJpG,EAAAC,EAAAC,cAACgS,EAAA,EAAD,OAEDqF,EAAe1J,SAAWH,IAAYwL,OACrClZ,EAAAC,EAAAC,cAAC6R,EAAA,EAAD,CACErI,UAAU,MACVC,KAAK,KACLqI,SAAO,EACPpI,MAAM,UACNJ,QAAS,WACPyP,YACE,CACE7T,KAAM,OACN8Q,OAAQ8C,EACRG,kBAAmB,OACnBtT,KAAM0R,EACNxM,MAAO,QAET3E,KAIJpG,EAAAC,EAAAC,cAACgS,EAAA,EAAD,MAlBF,aA0BVxJ,oBAAU,YACJkQ,GAAWC,IACbI,YAAQ,CAAE7T,KAAM,SAAWgB,IAE5B,CAACwS,EAASC,IAEb,IAAMO,EAAS,WACbN,EAAmBH,IAKrB,OAFA/T,QAAQC,IAAI,kBAAmB8T,GAG7B3Y,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmZ,EAAA,EAAD,KACErZ,EAAAC,EAAAC,cAACoZ,EAAA,EAAD,CACEzT,KAAM8E,EAAM9E,KACZ0T,UAAW5O,EAAM4O,UACjBC,UAAW7O,EAAMhK,UACjB8Y,OAAQR,IACR7S,SAAUA,EACV2E,MAAOJ,EAAMI,QAEf/K,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKC,MAAM,QAAQpJ,UAAU,mBACzB3E,IAAE2U,QAAQf,IACV3Y,EAAAC,EAAAC,cAAC6R,EAAA,EAAD,CACEvI,QAAS,WACPyP,YACE,CACE7T,KAAM,SACNuU,cAAe,CACbC,WAAYR,EACZrO,MAAO,gBACP8O,QAAS,KAGbzT,IAGJ4L,SAAO,EACPrI,KAAK,KACLG,SAA4B,YAAlBiP,GAES,YAAlBA,EAA8B/Y,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,MAAqB,SAK1D9Z,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAMxB,UAAU,YAEd1J,EAAAC,EAAAC,cAAC0X,EAAA,EAAD,MACI7S,IAAE2U,QAAQf,IACV3Y,EAAAC,EAAAC,cAAC6Z,EAAA,EAAD,CAAahP,MAAM,mBAAmB1K,QAASA,EAASwF,KAAM,CAAC8S,0GC4H9DjO,eApBS,SAACC,EAAOC,GAAR,OAAA1I,OAAA2I,EAAA,EAAA3I,CAAA,GACnB0I,EADmB,CAEtBoP,YAAaC,YAAkBtP,GAC/BuP,UAAWC,YAAgBxP,GAC3ByP,WAAYC,YAAiB1P,GAC7B2P,YAAaC,YAAkB5P,GAC/B6P,aAAcC,YAAmB9P,GACjCgO,gBAAiB+B,YAAsB/P,GACvCoO,cAAe4B,YAAmChQ,MAGzB,SAACvE,GAAD,MAAe,CACxCwU,qBAAsB,SAAC/U,GAAD,OAAUO,EAASyU,YAAMhV,KAC/CiV,kBAAmB,SAACjV,GAAD,OAAUO,EAAS2U,YAAIlV,KAC1CmV,mBAAoB,SAACnV,GAAD,OAAUO,EAAS6U,YAAKpV,KAC5CqV,qBAAsB,SAACpV,GAAD,OAAQM,EAAS+U,YAAOrV,KAC9CgT,mBAAoB,SAACjT,GAAD,OAAUO,EAASgV,YAAmBvV,KAC1DwV,oBAAqB,SAACxV,GAAD,OAAUO,EAASkV,YAAMzV,OAGjC6E,CAnOA,SAAAI,GAcT,IAbJkP,EAaIlP,EAbJkP,YACAE,EAYIpP,EAZJoP,UACAI,EAWIxP,EAXJwP,YACAM,EAUI9P,EAVJ8P,qBACAE,EASIhQ,EATJgQ,kBACAV,EAQItP,EARJsP,WACAY,EAOIlQ,EAPJkQ,mBACAR,EAMI1P,EANJ0P,aACAU,EAKIpQ,EALJoQ,qBACAvC,EAII7N,EAJJ6N,gBACAG,EAGIhO,EAHJgO,mBACAC,EAEIjO,EAFJiO,cACAsC,EACIvQ,EADJuQ,oBACIhV,EACoBC,mBAAS,IAD7BC,EAAArE,OAAAC,EAAA,EAAAD,CAAAmE,EAAA,GACGR,EADHU,EAAA,GACSgV,EADThV,EAAA,GAAAE,EAE8BH,oBAAS,GAFvCI,EAAAxE,OAAAC,EAAA,EAAAD,CAAAuE,EAAA,GAEG+U,EAFH9U,EAAA,GAEc+U,EAFd/U,EAAA,GAAAG,EAG0BP,oBAAS,GAHnCQ,EAAA5E,OAAAC,EAAA,EAAAD,CAAA2E,EAAA,GAGG6U,EAHH5U,EAAA,GAGY6U,EAHZ7U,EAAA,GAAAG,EAI4BX,oBAAS,GAJrCY,EAAAhF,OAAAC,EAAA,EAAAD,CAAA+E,EAAA,GAIG2U,EAJH1U,EAAA,GAIa2U,EAJb3U,EAAA,GAAAG,EAKgCf,oBAAS,GALzCgB,EAAApF,OAAAC,EAAA,EAAAD,CAAAmF,EAAA,GAKGyU,EALHxU,EAAA,GAKeyU,EALfzU,EAAA,GAAAG,EAM8BnB,oBAAS,GANvCoB,EAAAxF,OAAAC,EAAA,EAAAD,CAAAuF,EAAA,GAMGuU,EANHtU,EAAA,GAMcuU,EANdvU,EAAA,GAAAG,EAOiBvB,mBAAS,QAAvB4V,EAPHha,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,MASI2E,EAAgBvG,qBAAWkW,MAA3B3P,YACApG,EAAaH,qBAAWC,MAAxBE,SAVJ+B,EAY8B7B,mBAAS8V,MAZvChU,EAAAlG,OAAAC,EAAA,EAAAD,CAAAiG,EAAA,GAYG6E,EAZH5E,EAAA,GAYciU,EAZdjU,EAAA,GAAAE,GAa0BhC,mBAASgW,MAbnC/T,GAAArG,OAAAC,EAAA,EAAAD,CAAAoG,GAAA,GAaG2E,GAbH1E,GAAA,GAaYgU,GAbZhU,GAAA,GAeJG,oBAAU,WACR6S,EAAQ5C,IACP,CAACA,EAAiB4C,IAGrB,IAAMiB,GAAc,WAAM,IAAAC,EACEnW,mBAAS8V,MADXM,EAAAxa,OAAAC,EAAA,EAAAD,CAAAua,EAAA,GACjB1Y,EADiB2Y,EAAA,GACVC,EADUD,EAAA,GAAAE,EAEFtW,mBAASgW,MAFPO,EAAA3a,OAAAC,EAAA,EAAAD,CAAA0a,EAAA,GAEjB1Y,EAFiB2Y,EAAA,GAEZC,EAFYD,EAAA,GAOxB,OAHAnU,oBAAU,kBAAM2T,EAAatY,IAAQ,CAACA,EAAOsY,IAC7C3T,oBAAU,kBAAM6T,GAAWrY,IAAM,CAACA,EAAKqY,KAGrCvc,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkS,SAAA,kBACa,IACXnS,EAAAC,EAAAC,cAACqR,GAAA,EAAD,CACEnM,KAAK,OACLlE,MAAO6C,EACPyN,SAAU,SAAAnB,GAAA,IAAoBnP,EAApBmP,EAAGE,cAAiBrP,MAApB,OAAkCyb,EAASzb,MALzD,WAQElB,EAAAC,EAAAC,cAACqR,GAAA,EAAD,CACEnM,KAAK,OACLlE,MAAOgD,EACPsN,SAAU,SAAAT,GAAA,IAAoB7P,EAApB6P,EAAGR,cAAiBrP,MAApB,OAAkC4b,EAAO5b,QAM3DwH,oBAAU,WACRqU,aAAiB,GAAI3W,GAAU,GAC/B4W,aAAsB,GAAI5W,EAAUoW,KACnC,CAACpW,IAEJsC,oBAAU,WACR6S,EAAQnP,aAAauM,EAAiBuD,EAAY1P,KACjD,CAACA,EAAa+O,EAASW,IAE1BxT,oBAAU,WACR+S,GAAa,GACbb,EAAqB,CACnB,CAAEpa,IAAK,YAAaU,MAAO8L,GAC3B,CAAExM,IAAK,UAAWU,MAAO+L,OAE1B,CAAC2N,EAAsBa,EAAczO,EAAWC,KAEnDvE,oBAAU,WACWsR,EAAXnM,SACOoP,IAAYC,SAAY1B,GACrCC,GAAa,IAEd,CAACzB,EAAayB,IAEjB/S,oBAAU,WAAM,IACNmF,EAAWqM,EAAXrM,OACJA,IAAWoP,IAAYC,SAAYxB,EAE5B7N,IAAWoP,IAAYE,SAAYzB,IAC5C0B,QAAMD,QAAQ,wBACdxB,GAAW,IAHXA,GAAW,IAKZ,CAACzB,EAAWyB,IAEfjT,oBAAU,WAAM,IACNmF,EAAqBkL,EAArBlL,OAAQwP,EAAatE,EAAbsE,SAEhB,GADAzY,QAAQC,IAAIwY,EAAU,SAClBxP,IAAWoP,IAAYC,SAAYxB,GAEhC,GAAI7N,IAAWoP,IAAYE,UAAYzB,EAAS,CAErD,GADA0B,QAAMD,QAAQ,UACVE,EAAU,CACZ,IAAMC,EAAiBpb,OAAA2I,EAAA,EAAA3I,CAAA,GAClByW,EADkB,CAErB9K,OAAQwP,EAASxP,OACjB/H,GAAIuX,EAASvX,KAEfyV,EAAQ+B,GAEV3B,GAAW,SAXXA,GAAW,IAaZ,CAAC5C,EAAe4C,IAEnBjT,oBAAU,WAAM,IACNmF,EAAqByM,EAArBzM,OAAQwP,EAAa/C,EAAb+C,SACZxP,IAAWoP,IAAYC,SAAYlB,EAE5BnO,IAAWoP,IAAYE,SAAYnB,IACxCqB,EAASxP,SAAWH,IAAY6P,QAClCH,QAAMD,QAAN,WAAApQ,OAAyBsQ,EAASxP,SAClCoO,GAAa,IACJoB,EAASxP,SAAWH,IAAY8P,UACzCJ,QAAMD,QAAQ,oBACdlB,GAAa,IACJoB,EAASxP,SAAWH,IAAY+P,WACzCL,QAAMD,QAAQ,oBACdlB,GAAa,IAEfA,GAAa,IAZbA,GAAa,IAcd,CAAC3B,EAAa2B,IAEjBvT,oBAAU,WAAM,IACNmF,EAAWuM,EAAXvM,OACJA,IAAWoP,IAAYC,SAAYtB,EAE5B/N,IAAWoP,IAAYE,SAAYvB,IAC5CwB,QAAMD,QAAQ,yBACdtB,GAAY,IAHZA,GAAY,IAKb,CAACzB,EAAYyB,IAEhBnT,oBAAU,WAAM,IACNmF,EAAW2M,EAAX3M,OACJA,IAAWoP,IAAYC,SAAYpB,EAE5BjO,IAAWoP,IAAYE,SAAYrB,IAC5CsB,QAAMD,QAAQ,0BACdpB,GAAc,IAHdA,GAAc,IAKf,CAACvB,EAAcuB,IA0ClB,OACE/b,EAAAC,EAAAC,cAACwY,EAAD,CACEE,QAASsB,EAAUrM,SAAWoP,IAAYE,UAAYzB,EACtDZ,kBA3CuB,SAACjV,GAC1B8V,GAAW,GACXb,EAAkBjV,IA0ChBgT,SAAUuB,EAAWvM,SAAWoP,IAAYE,UAAYvB,EACxDZ,mBAxCwB,SAACnV,GAC3BgW,GAAY,GAEZb,EAAmBnV,IAsCjB6X,WAAYlD,EAAa3M,SAAWoP,IAAYE,UAAYrB,EAC5DZ,qBApC0B,SAACpV,GAC7BiW,GAAc,GACdb,EAAqBpV,IAmCnB6S,gBAAiB9S,EACjBiT,mBArBwB,SAACjT,GAC3B8V,GAAW,GAEX,IAAIgC,EAAWzb,OAAA2I,EAAA,EAAA3I,CAAA,GAAQ2D,GACvB8X,EAAY5J,cAAgB4J,EAAY5J,cAAczT,IAAI,SAACsd,GAAD,OAAA1b,OAAA2I,EAAA,EAAA3I,CAAA,GACrD0b,EADqD,CAExD3G,SAAU2G,EAAE3G,SAASnR,OAEvBlB,QAAQC,IAAI,eAAgB8Y,GAC5B7E,EAAmB6E,IAajB5E,cAAeA,EAAclL,OAC7BmL,mBAnCwB,SAACnT,GAC3BjB,QAAQC,IAAIgB,EAAM,gBAClBoW,GAAa,GACb,IAAM0B,EAAc,CAClB7X,GAAID,EAAKC,GACT+X,aAAchY,EAAKgY,aACnBhQ,OAAQH,IAAY6P,QAGtBlC,EAAoBsC,QC1MXxK,GAAa,CACxBC,UAAWnD,IAAIoD,MACfC,QAASrD,IAAIoD,MACbE,uBAAwBtD,IAAIoD,MAC5BG,iBAAkBvD,IAAIoD,MACtBI,WAAYxD,IAAIoD,MAChBK,kBAAmBzD,IAAIoD,MACvBM,eAAgB1D,IAAIoD,MACpBO,2BAA4B3D,IAAIoD,MAChCQ,aAAc5D,IAAIoD,MAClBS,0BAA2B7D,IAAIoD,MAC/BU,cAAe9D,IAAI+D,QAAQC,MAAMhE,IAAIiE,UAAUC,IAAI,IAGxCxG,GAAe,CAC1B9H,KAAM,CACJuN,UAAW,GACXE,QAAS,GACTC,uBAAwB,GACxBC,iBAAkB,GAClBC,WAAY,GACZC,kBAAmB,GACnBC,eAAgB,GAChBC,2BAA4B,GAC5BC,aAAc,GACdC,0BAA2B,GAC3BC,cAAe,IAEjBK,OAAQ,GACRC,aAAc,GACdC,YAAa,GAoCFC,GAAa,CACxB7O,IAAKuK,IAAIoD,MAAMmB,MAAM,IAAIC,WACzBC,cAAezE,IAAIoD,MACnBsB,oBAAqB1E,IAAIoD,MACzBuB,kBAAmB3E,IAAIoD,MACvBwB,aAAc5E,IAAIoD,MAClByB,iBAAkB7E,IAAIoD,MACtB0B,iBAAkB9E,IAAIoD,MACtB2B,WAAY/E,IAAIoD,MAChB4B,WAAYhF,IAAIoD,MAChB6B,mBAAoBjF,IAAIoD,MACxB8B,eAAgBlF,IAAIoD,MACpB+B,gBAAiBnF,IAAIoD,4cCyFRgC,4CA7Jb,SAAAA,EAAYjV,GAAO,IAAAkV,EAAA,OAAApT,OAAAqT,EAAA,EAAArT,CAAA/B,KAAAkV,IACjBC,EAAAE,EAAAC,KAAAtV,KAAMC,IAWRsV,SAZmBxT,OAAAyT,EAAA,EAAAzT,CAAA0T,EAAA3V,EAAA4V,KAYR,SAAAC,IAAA,OAAAF,EAAA3V,EAAA8V,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAxL,MAAA,OACT8K,EAAKlV,MAAM8V,OAAOZ,EAAK3K,MAAM9E,MADpB,wBAAAmQ,EAAAG,SAAAL,MAVTR,EAAK3H,aAAeA,GACpB2H,EAAK3K,MAAQyL,KAAKC,MAAMD,KAAKE,UAAUhB,EAAK3H,eAC5C2H,EAAK5G,OAASyE,GACdmC,EAAKiB,eAAiBjB,EAAKiB,eAAeC,KAApBtU,OAAAuU,EAAA,EAAAvU,CAAAoT,IACtBA,EAAKoB,cAAgBpB,EAAKoB,cAAcF,KAAnBtU,OAAAuU,EAAA,EAAAvU,CAAAoT,IACrBA,EAAKqB,YAAcrB,EAAKqB,YAAYH,KAAjBtU,OAAAuU,EAAA,EAAAvU,CAAAoT,IACnBA,EAAKsB,WAAatB,EAAKsB,WAAWJ,KAAhBtU,OAAAuU,EAAA,EAAAvU,CAAAoT,IAClBA,EAAKuB,WAAavB,EAAKuB,WAAWL,KAAhBtU,OAAAuU,EAAA,EAAAvU,CAAAoT,IATDA,kEAiBjBnV,KAAK2W,0DAIL,OAAI3W,KAAKC,MAAM2W,QAAU5W,KAAKC,MAAMgR,ODkBP,SAACvL,GAChC,OAAOA,EADyDjC,UAAAjC,OAAA,QAAAkC,IAAAD,UAAA,GAAAA,UAAA,GArDvC,iBAsDJtD,IAAI,SAAC0W,GAAD,MAAW,CAClCtR,IAAKsR,EAAKC,SAASnR,GACnB4O,cAAesC,EAAKC,SAASC,WAAa,IAAMF,EAAKC,SAASE,YAC9DxC,oBAAqBqC,EAAKC,SAASG,WACnCxC,kBAAmBoC,EAAKC,SAASI,SACjCxC,aAAcmC,EAAKnC,aACnBC,iBAAkBkC,EAAKlC,iBACvBC,iBAAkBiC,EAAKjC,iBACvBC,WAAYgC,EAAKhC,WACjBC,WAAY+B,EAAK/B,WACjBC,mBAAoB8B,EAAK9B,mBACzBC,eAAgB6B,EAAK7B,eACrBC,gBAAiB4B,EAAK5B,mBC9BbkC,CAAkBnX,KAAKC,MAAMyF,KDlChB,iBCoCb,yCAIGA,GACZ,IDN0B0R,EAAgBX,ECMpCY,GDNoBD,ECMI1R,EDNY+Q,ECMNzW,KAAKyW,WDLpC1U,OAAAuO,EAAA,EAAAvO,CAAA,CACLkR,UAAWmE,EAAenE,UAC1BE,QAASiE,EAAejE,QACxBC,uBAAwBgE,EAAehE,uBACvCC,iBAAkB+D,EAAe/D,iBACjCC,WAAY8D,EAAe9D,WAC3BC,kBAAmB6D,EAAe7D,kBAClCC,eAAgB4D,EAAe5D,eAC/BC,2BAA4B2D,EAAe3D,2BAC3CC,aAAc0D,EAAe1D,aAC7BC,0BAA2ByD,EAAezD,2BAhDnB,gBAiDR8C,MCLfzW,KAAKsX,SAAS,CAAEC,YAAY,EAAM7R,KAAM2R,wCAG9BG,IACNA,EAAMhW,OAAS,GAAKxB,KAAKwK,MAAM9E,KAAX,cAA6BlE,OAAS,IAC5DxB,KAAKsX,SAAS,CACZ5R,KAAK3D,OAAA2I,EAAA,EAAA3I,CAAA,GACA/B,KAAKwK,MAAM9E,KADZ3D,OAAAuO,EAAA,EAAAvO,CAAA,GDlDe,gBCoDFyV,oDAOhBxX,KAAKC,MAAM2W,SAAU5W,KAAKC,MAAMgR,QAAYjR,KAAKwK,MAAM+M,YAC1DvX,KAAKuW,cAAcvW,KAAKC,MAAMyF,6CAInBA,GACb1F,KAAKsX,SAAS,CACZ5R,KAAK3D,OAAA2I,EAAA,EAAA3I,CAAA,GACA/B,KAAKwK,MAAM9E,KADZ3D,OAAAuO,EAAA,EAAAvO,CAAA,GDlEiB,gBCoEJ2D,yCAKVrF,EAAKU,GACdf,KAAKsX,SAAS,CACZ5R,KAAK3D,OAAA2I,EAAA,EAAA3I,CAAA,GACA/B,KAAKwK,MAAM9E,KADZ3D,OAAAuO,EAAA,EAAAvO,CAAA,GAED1B,EAAMU,uCAMX,OACElB,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAMxB,UAAU,YACd1J,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CAAYzB,UAAU,YAAtB,mBACA1J,EAAAC,EAAAC,cAAC0X,EAAA,EAAD,KACE5X,EAAAC,EAAAC,cAAC2X,EAAA,EAAD,CAAMC,SAAU3X,KAAK4X,cACnB/X,EAAAC,EAAAC,cAAC8X,EAAA,EAAD,KACEhY,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,YAAa,YAAa,SAE9CpY,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,UAAW,UAAW,SAO1CpY,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,CAChB5H,KAAM,yBACN9P,MAAO,4BAGXV,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,CAChB5H,KAAM,mBACN9P,MAAO,sBAGXV,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,CAChB5H,KAAM,aACN9P,MAAO,gBAGXV,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,CAChB5H,KAAM,oBACN9P,MAAO,uBAGXV,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,CAChB5H,KAAM,iBACN9P,MAAO,oBAGXV,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,CAChB5H,KAAM,6BACN9P,MAAO,gCAGXV,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,CAChB5H,KAAM,eACN9P,MAAO,kBAGXV,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrBhY,KAAKiY,YAAY,CAChB5H,KAAM,4BACN9P,MAAO,+BAGXV,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKoF,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvBnY,EAAAC,EAAAC,cAACmY,EAAA,EAAD,eACArY,EAAAC,EAAAC,cAAC0X,EAAA,EAAD,KACE5X,EAAAC,EAAAC,cAACoY,EAAA,EAAD,CACEjY,SAAoBF,KAAKC,MDlEpC,CACL,CACEmM,IAAK,gBACL7L,MAAO,OACP0E,KAAM,QAER,CACEmH,IAAK,sBACL7L,MAAO,aACP0E,KAAM,QAER,CACEmH,IAAK,oBACL7L,MAAO,WACP0E,KAAM,QAER,CACEmH,IAAK,eACL7L,MAAO,eACP0E,KAAM,QAER,CACEmH,IAAK,mBACL7L,MAAO,mBACP0E,KAAM,QAER,CACEmH,IAAK,mBACL7L,MAAO,mBACP0E,KAAM,QAER,CACEmH,IAAK,aACL7L,MAAO,aACP0E,KAAM,QAER,CACEmH,IAAK,aACL7L,MAAO,aACP0E,KAAM,QAER,CACEmH,IAAK,qBACL7L,MAAO,qBACP0E,KAAM,QAER,CACEmH,IAAK,iBACL7L,MAAO,iBACP0E,KAAM,QAER,CACEmH,IAAK,kBACL7L,MAAO,kBACP0E,KAAM,UCaQ0E,SAAU3J,KAAKC,MAAM0J,SACrBjE,KAAM1F,KAAKwK,MAAM9E,KAAX,cACN8I,SAAUxO,KAAKwW,YACfjI,OAAQ6F,GACRhC,UAAWpS,KAAKC,MAAMmY,UAI5BvY,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKlJ,KAAK,KAAKmJ,MAAM,UAClB3S,KAAKqY,aAAa,oBArJHC,KCLjB,SAASqF,GAAThT,GAOZ,IAND6N,EAMC7N,EAND6N,gBACAC,EAKC9N,EALD8N,QACAC,EAIC/N,EAJD+N,SAEAG,GAEClO,EAHDgO,mBAGChO,EAFDkO,oBACA+E,EACCjT,EADDiT,UACCvL,EACyBC,qBAAWxE,IAASN,KAD7C+E,EAAAxQ,OAAAC,EAAA,EAAAD,CAAAsQ,EAAA,GACM7H,EADN+H,EAAA,GACatM,EADbsM,EAAA,GAEKrS,EAAU,CACd,CAAEI,KAAM,YAAaC,MAAO,aAC5B,CAAED,KAAM,UAAWC,MAAO,WAC1B,CAAED,KAAM,yBAA0BC,MAAO,0BACzC,CAAED,KAAM,aAAcC,MAAO,cAC7B,CAAED,KAAM,oBAAqBC,MAAO,qBACpC,CAAED,KAAM,iBAAkBC,MAAO,kBACjC,CAAED,KAAM,6BAA8BC,MAAO,8BAC7C,CAAED,KAAM,eAAgBC,MAAO,gBAC/B,CAAED,KAAM,4BAA6BC,MAAO,6BAC5C,CAAED,KAAM,SAAUC,MAAO,UAEzB,CACEF,IAAK,OACLsE,QAAS,SAACyS,GAAD,OACPvX,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkS,SAAA,KACEnS,EAAAC,EAAAC,cAAC6R,EAAA,EAAD,CACErI,UAAU,MACVC,KAAK,KACLqI,SAAO,EACPpI,MAAM,OACNJ,QAAS,WACPyP,YACE,CACE7T,KAAM,OACNzE,UAAW0U,GACXxP,KAAM0R,EACNxM,MAAO,gBAET3E,KAIJpG,EAAAC,EAAAC,cAACgS,EAAA,EAAD,OAEDqF,EAAe1J,SAAWH,IAAYwL,OACrClZ,EAAAC,EAAAC,cAAC6R,EAAA,EAAD,CACErI,UAAU,MACVC,KAAK,KACLqI,SAAO,EACPpI,MAAM,UACNJ,QAAS,WACPyP,YACE,CACE7T,KAAM,OACN8Q,OAAQ8C,EACRG,kBAAmB,OACnBtT,KAAM0R,EACNxM,MAAO,QAET3E,KAIJpG,EAAAC,EAAAC,cAACgS,EAAA,EAAD,MAlBF,aAkCV,OARAxJ,oBAAU,YACJkQ,GAAWC,GAAYkF,IACzB9E,YAAQ,CAAE7T,KAAM,SAAWgB,IAE5B,CAACwS,EAASC,EAAUkF,IAEvBnZ,QAAQC,IAAI,kBAAmB8T,GAG7B3Y,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmZ,EAAA,EAAD,KACErZ,EAAAC,EAAAC,cAACoZ,EAAA,EAAD,CACEzT,KAAM8E,EAAM9E,KACZ0T,UAAW5O,EAAM4O,UACjBC,UAAW7O,EAAMhK,UACjB8Y,OAAQR,IACR7S,SAAUA,EACV2E,MAAOJ,EAAMI,QAEf/K,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,CAAKC,MAAM,QAAQpJ,UAAU,mBAyB7B1J,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAMxB,UAAU,YACd1J,EAAAC,EAAAC,cAAC0X,EAAA,EAAD,KACE5X,EAAAC,EAAAC,cAAC6Z,EAAA,EAAD,CACEhP,MAAM,wBACN1K,QAASA,EACTwF,KAAM8S,QCrGpB,IA6MejO,eAlBS,SAACC,EAAOC,GAAR,OAAA1I,OAAA2I,EAAA,EAAA3I,CAAA,GACnB0I,EADmB,CAEtBoP,YAAaC,YAAkBtP,GAC/BuP,UAAWC,YAAgBxP,GAC3ByP,WAAYC,YAAiB1P,GAC7B2P,YAAaC,YAAkB5P,GAC/B6P,aAAcC,YAAmB9P,GACjCgO,gBAAiBqF,YAA0BrT,MAGlB,SAACvE,GAAD,MAAe,CACxCwU,qBAAsB,SAAC/U,GAAD,OAAUO,EAASyU,gBACzCC,kBAAmB,SAACjV,GAAD,OAAUO,EAAS2U,YAAIlV,KAC1CmV,mBAAoB,SAACnV,GAAD,OAAUO,EAAS6U,YAAKpV,KAC5CqV,qBAAsB,SAACpV,GAAD,OAAQM,EAAS+U,YAAOrV,KAC9CuV,oBAAqB,SAACxV,GAAD,OAAUO,EAASkV,YAAMzV,OAGjC6E,CA7MA,SAAAI,GAaT,IAZJkP,EAYIlP,EAZJkP,YACAE,EAWIpP,EAXJoP,UACAI,EAUIxP,EAVJwP,YACAM,EASI9P,EATJ8P,qBACAE,EAQIhQ,EARJgQ,kBACAV,EAOItP,EAPJsP,WACAY,EAMIlQ,EANJkQ,mBACAR,EAKI1P,EALJ0P,aACAU,EAIIpQ,EAJJoQ,qBACAvC,EAGI7N,EAHJ6N,gBAEA0C,GACIvQ,EAFJiO,cAEIjO,EADJuQ,qBACIhV,EACoBC,mBAAS,IAD7BC,EAAArE,OAAAC,EAAA,EAAAD,CAAAmE,EAAA,GACGR,EADHU,EAAA,GACSgV,EADThV,EAAA,GAAAE,EAE8BH,oBAAS,GAFvCI,EAAAxE,OAAAC,EAAA,EAAAD,CAAAuE,EAAA,GAEG+U,EAFH9U,EAAA,GAEc+U,EAFd/U,EAAA,GAAAG,EAG0BP,oBAAS,GAHnCQ,EAAA5E,OAAAC,EAAA,EAAAD,CAAA2E,EAAA,GAGG6U,EAHH5U,EAAA,GAGY6U,EAHZ7U,EAAA,GAAAG,EAI4BX,oBAAS,GAJrCY,EAAAhF,OAAAC,EAAA,EAAAD,CAAA+E,EAAA,GAIG2U,EAJH1U,EAAA,GAIa2U,EAJb3U,EAAA,GAAAG,EAKgCf,oBAAS,GALzCgB,EAAApF,OAAAC,EAAA,EAAAD,CAAAmF,EAAA,GAKGyU,EALHxU,EAAA,GAKeyU,EALfzU,EAAA,GAAAG,EAM8BnB,oBAAS,GANvCoB,EAAAxF,OAAAC,EAAA,EAAAD,CAAAuF,EAAA,GAMGuU,EANHtU,EAAA,GAMcuU,EANdvU,EAAA,GAAAG,EAOiBvB,mBAAS,QAAvB4V,EAPHha,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,MASI2E,EAAgBvG,qBAAWkW,MAA3B3P,YACApG,EAAaH,qBAAWC,MAAxBE,SAVJ+B,EAY8B7B,mBAAS8V,MAZvChU,EAAAlG,OAAAC,EAAA,EAAAD,CAAAiG,EAAA,GAYG6E,EAZH5E,EAAA,GAYciU,EAZdjU,EAAA,GAAAE,EAa0BhC,mBAASgW,MAbnC/T,EAAArG,OAAAC,EAAA,EAAAD,CAAAoG,EAAA,GAaG2E,EAbH1E,EAAA,GAaYgU,EAbZhU,EAAA,GAeJG,oBAAU,WACR6S,EAAQ5C,IACP,CAACA,EAAiB4C,IAGrB,IAAMiB,GAAc,WAAM,IAAAC,EACEnW,mBAAS8V,MADXM,EAAAxa,OAAAC,EAAA,EAAAD,CAAAua,EAAA,GACjB1Y,EADiB2Y,EAAA,GACVC,EADUD,EAAA,GAAAE,EAEFtW,mBAASgW,MAFPO,EAAA3a,OAAAC,EAAA,EAAAD,CAAA0a,EAAA,GAEjB1Y,EAFiB2Y,EAAA,GAEZC,EAFYD,EAAA,GAOxB,OAHAnU,oBAAU,kBAAM2T,EAAatY,IAAQ,CAACA,EAAOsY,IAC7C3T,oBAAU,kBAAM6T,EAAWrY,IAAM,CAACA,EAAKqY,IAGrCvc,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkS,SAAA,kBACa,IACXnS,EAAAC,EAAAC,cAACqR,GAAA,EAAD,CACEnM,KAAK,OACLlE,MAAO6C,EACPyN,SAAU,SAAAnB,GAAA,IAAoBnP,EAApBmP,EAAGE,cAAiBrP,MAApB,OAAkCyb,EAASzb,MALzD,WAQElB,EAAAC,EAAAC,cAACqR,GAAA,EAAD,CACEnM,KAAK,OACLlE,MAAOgD,EACPsN,SAAU,SAAAT,GAAA,IAAoB7P,EAApB6P,EAAGR,cAAiBrP,MAApB,OAAkC4b,EAAO5b,QAM3DwH,oBAAU,WACRqU,aAAiB,GAAI3W,GAAU,GAC/B4W,aAAsB,GAAI5W,EAAUoW,KACnC,CAACpW,IAEJsC,oBAAU,WACR6S,EAAQnP,aAAauM,EAAiBuD,EAAY1P,KACjD,CAACA,EAAa+O,EAASW,IAE1BxT,oBAAU,WACR+S,GAAa,GACbb,EAAqB,CACnB,CAAEpa,IAAK,YAAaU,MAAO8L,GAC3B,CAAExM,IAAK,UAAWU,MAAO+L,MAE1B,CAAC2N,EAAsBa,EAAczO,EAAWC,IAEnDvE,oBAAU,WACWsR,EAAXnM,SACOoP,IAAYC,SAAY1B,GACrCC,GAAa,IAEd,CAACzB,EAAayB,IAEjB/S,oBAAU,WAAM,IACNmF,EAAWqM,EAAXrM,OACJA,IAAWoP,IAAYC,SAAYxB,EAE5B7N,IAAWoP,IAAYE,SAAYzB,IAC5C0B,QAAMD,QAAQ,wBACdxB,GAAW,IAHXA,GAAW,IAKZ,CAACzB,EAAWyB,IAEfjT,oBAAU,WAAM,IACNmF,EAAqByM,EAArBzM,OAAQwP,EAAa/C,EAAb+C,SACZxP,IAAWoP,IAAYC,SAAYlB,EAE5BnO,IAAWoP,IAAYE,SAAYnB,IACxCqB,EAASxP,SAAWH,IAAY6P,QAClCH,QAAMD,QAAN,WAAApQ,OAAyBsQ,EAASxP,SAClCoO,GAAa,IACJoB,EAASxP,SAAWH,IAAY8P,UACzCJ,QAAMD,QAAQ,oBACdlB,GAAa,IACJoB,EAASxP,SAAWH,IAAY+P,WACzCL,QAAMD,QAAQ,oBACdlB,GAAa,IAEfA,GAAa,IAZbA,GAAa,IAcd,CAAC3B,EAAa2B,IAEjBvT,oBAAU,WAAM,IACNmF,EAAWuM,EAAXvM,OACJA,IAAWoP,IAAYC,SAAYtB,EAE5B/N,IAAWoP,IAAYE,SAAYvB,IAC5CwB,QAAMD,QAAQ,yBACdtB,GAAY,IAHZA,GAAY,IAKb,CAACzB,EAAYyB,IAEhBnT,oBAAU,WAAM,IACNmF,EAAW2M,EAAX3M,OACJA,IAAWoP,IAAYC,SAAYpB,EAE5BjO,IAAWoP,IAAYE,SAAYrB,IAC5CsB,QAAMD,QAAQ,0BACdpB,GAAc,IAHdA,GAAc,IAKf,CAACvB,EAAcuB,IA0ClB,OACE/b,EAAAC,EAAAC,cAAC+d,GAAD,CACErF,QAASsB,EAAUrM,SAAWoP,IAAYE,UAAYzB,EACtDZ,kBA3CuB,SAACjV,GAC1B8V,GAAW,GACXb,EAAkBjV,IA0ChBgT,SAAUuB,EAAWvM,SAAWoP,IAAYE,UAAYvB,EACxDZ,mBAxCwB,SAACnV,GAC3BgW,GAAY,GAEZb,EAAmBnV,IAsCjB6X,WAAYlD,EAAa3M,SAAWoP,IAAYE,UAAYrB,EAC5DiC,UAAWzD,EAAYzM,SAAWoP,IAAYE,UAAYnB,EAC1Dd,qBArC0B,SAACpV,GAC7BiW,GAAc,GACdb,EAAqBpV,IAoCnB6S,gBAAiB9S,EACjBiT,mBAtBwB,SAACjT,GAC3B8V,GAAW,IAsBT3C,mBAnCwB,SAACnT,GAC3BjB,QAAQC,IAAIgB,EAAM,gBAClBoW,GAAa,GACb,IAAM0B,EAAc,CAClB7X,GAAID,EAAKC,GACT+X,aAAchY,EAAKgY,aACnBhQ,OAAQH,IAAY6P,QAGtBlC,EAAoBsC,QCoCTG,GA7DQ,WAAM,IAAAzX,EACOC,mBAAS,KADhBC,EAAArE,OAAAC,EAAA,EAAAD,CAAAmE,EAAA,GACpB6C,EADoB3C,EAAA,GACT2X,EADS3X,EAAA,GAGrBkT,EAAS,SAAC0E,GACVjV,IAAciV,GAAKD,EAAaC,IAGtC,OACEne,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmZ,EAAA,EAAD,KACErZ,EAAAC,EAAAC,cAACke,EAAA,EAAD,CAAKC,MAAI,EAAC3U,UAAU,QAClB1J,EAAAC,EAAAC,cAACoe,EAAA,EAAD,KACEte,EAAAC,EAAAC,cAACqe,EAAA,EAAD,CACE7U,UACgB,MAAdR,EAAoB,oBAAsB,uBAE5CM,QAAS,WACPiQ,EAAO,OALX,oBAWFzZ,EAAAC,EAAAC,cAACoe,EAAA,EAAD,KACEte,EAAAC,EAAAC,cAACqe,EAAA,EAAD,CACE7U,UACgB,MAAdR,EAAoB,oBAAsB,uBAE5CM,QAAS,WACPiQ,EAAO,OALX,mBAYJzZ,EAAAC,EAAAC,cAACse,EAAA,EAAD,CAAYtV,UAAWA,GACrBlJ,EAAAC,EAAAC,cAACue,EAAA,EAAD,CAASC,MAAM,KACE,MAAdxV,EACClJ,EAAAC,EAAAC,cAAC8X,EAAA,EAAD,KACEhY,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,KACE7S,EAAAC,EAAAC,cAACye,GAAD,QAGF,MAEN3e,EAAAC,EAAAC,cAACue,EAAA,EAAD,CAASC,MAAM,KACE,MAAdxV,EACClJ,EAAAC,EAAAC,cAAC8X,EAAA,EAAD,KACEhY,EAAAC,EAAAC,cAAC2S,EAAA,EAAD,KACE7S,EAAAC,EAAAC,cAAC0e,GAAD,QAGF,UC8CDlU,sBApBS,SAACC,EAAOC,GAAR,OAAA1I,OAAA2I,EAAA,EAAA3I,CAAA,GACnB0I,EADmB,CAEtBoP,YAAaC,YAAkBtP,GAC/BuP,UAAWC,YAAgBxP,GAC3ByP,WAAYC,YAAiB1P,GAC7B2P,YAAaC,YAAkB5P,GAC/B6P,aAAcC,YAAmB9P,GACjCgO,gBAAiB+B,YAAsB/P,GACvCoO,cAAe4B,YAAmChQ,MAGzB,SAACvE,GAAD,MAAe,CACxCwU,qBAAsB,SAAC/U,GAAD,OAAUO,EAASyU,YAAMhV,KAC/CiV,kBAAmB,SAACjV,GAAD,OAAUO,EAAS2U,YAAIlV,KAC1CmV,mBAAoB,SAACnV,GAAD,OAAUO,EAAS6U,YAAKpV,KAC5CqV,qBAAsB,SAACpV,GAAD,OAAQM,EAAS+U,YAAOrV,KAC9CgT,mBAAoB,SAACjT,GAAD,OAAUO,EAASgV,YAAmBvV,KAC1DwV,oBAAqB,SAACxV,GAAD,OAAUO,EAASkV,YAAMzV,OAGjC6E,CAnOA,SAAAI,GAcT,IAbJkP,EAaIlP,EAbJkP,YACAE,EAYIpP,EAZJoP,UACAI,EAWIxP,EAXJwP,YACAM,EAUI9P,EAVJ8P,qBACAE,EASIhQ,EATJgQ,kBACAV,EAQItP,EARJsP,WACAY,EAOIlQ,EAPJkQ,mBACAR,EAMI1P,EANJ0P,aACAU,EAKIpQ,EALJoQ,qBACAvC,EAII7N,EAJJ6N,gBACAG,EAGIhO,EAHJgO,mBACAC,EAEIjO,EAFJiO,cACAsC,EACIvQ,EADJuQ,oBACIhV,EACoBC,mBAAS,IAD7BC,EAAArE,OAAAC,EAAA,EAAAD,CAAAmE,EAAA,GACGR,EADHU,EAAA,GACSgV,EADThV,EAAA,GAAAE,EAE8BH,oBAAS,GAFvCI,EAAAxE,OAAAC,EAAA,EAAAD,CAAAuE,EAAA,GAEG+U,EAFH9U,EAAA,GAEc+U,EAFd/U,EAAA,GAAAG,EAG0BP,oBAAS,GAHnCQ,EAAA5E,OAAAC,EAAA,EAAAD,CAAA2E,EAAA,GAGG6U,EAHH5U,EAAA,GAGY6U,EAHZ7U,EAAA,GAAAG,EAI4BX,oBAAS,GAJrCY,EAAAhF,OAAAC,EAAA,EAAAD,CAAA+E,EAAA,GAIG2U,EAJH1U,EAAA,GAIa2U,EAJb3U,EAAA,GAAAG,EAKgCf,oBAAS,GALzCgB,EAAApF,OAAAC,EAAA,EAAAD,CAAAmF,EAAA,GAKGyU,EALHxU,EAAA,GAKeyU,EALfzU,EAAA,GAAAG,EAM8BnB,oBAAS,GANvCoB,EAAAxF,OAAAC,EAAA,EAAAD,CAAAuF,EAAA,GAMGuU,EANHtU,EAAA,GAMcuU,EANdvU,EAAA,GAAAG,EAOiBvB,mBAAS,QAAvB4V,EAPHha,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,MASI2E,EAAgBvG,qBAAWkW,MAA3B3P,YACApG,EAAaH,qBAAWC,MAAxBE,SAVJ+B,EAY8B7B,mBAAS8V,MAZvChU,EAAAlG,OAAAC,EAAA,EAAAD,CAAAiG,EAAA,GAYG6E,EAZH5E,EAAA,GAYciU,EAZdjU,EAAA,GAAAE,EAa0BhC,mBAASgW,MAbnC/T,GAAArG,OAAAC,EAAA,EAAAD,CAAAoG,EAAA,GAaG2E,GAbH1E,GAAA,GAaYgU,GAbZhU,GAAA,GAeJG,oBAAU,WACR6S,EAAQ5C,IACP,CAACA,EAAiB4C,IAGrB,IAAMiB,GAAc,WAAM,IAAAC,EACEnW,mBAAS8V,MADXM,EAAAxa,OAAAC,EAAA,EAAAD,CAAAua,EAAA,GACjB1Y,EADiB2Y,EAAA,GACVC,EADUD,EAAA,GAAAE,EAEFtW,mBAASgW,MAFPO,EAAA3a,OAAAC,EAAA,EAAAD,CAAA0a,EAAA,GAEjB1Y,EAFiB2Y,EAAA,GAEZC,EAFYD,EAAA,GAOxB,OAHAnU,oBAAU,kBAAM2T,EAAatY,IAAQ,CAACA,EAAOsY,IAC7C3T,oBAAU,kBAAM6T,GAAWrY,IAAM,CAACA,EAAKqY,KAGrCvc,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkS,SAAA,kBACa,IACXnS,EAAAC,EAAAC,cAACqR,GAAA,EAAD,CACEnM,KAAK,OACLlE,MAAO6C,EACPyN,SAAU,SAAAnB,GAAA,IAAoBnP,EAApBmP,EAAGE,cAAiBrP,MAApB,OAAkCyb,EAASzb,MALzD,WAQElB,EAAAC,EAAAC,cAACqR,GAAA,EAAD,CACEnM,KAAK,OACLlE,MAAOgD,EACPsN,SAAU,SAAAT,GAAA,IAAoB7P,EAApB6P,EAAGR,cAAiBrP,MAApB,OAAkC4b,EAAO5b,QAM3DwH,oBAAU,WACRqU,aAAiB,GAAI3W,GAAU,GAC/B4W,aAAsB,GAAI5W,EAAUoW,KACnC,CAACpW,IAEJsC,oBAAU,WACR6S,EAAQnP,aAAauM,EAAiBuD,EAAY1P,KACjD,CAACA,EAAa+O,EAASW,IAE1BxT,oBAAU,WACR+S,GAAa,GACbb,EAAqB,CACnB,CAAEpa,IAAK,YAAaU,MAAO8L,GAC3B,CAAExM,IAAK,UAAWU,MAAO+L,OAE1B,CAAC2N,EAAsBa,EAAczO,EAAWC,KAEnDvE,oBAAU,WACWsR,EAAXnM,SACOoP,IAAYC,SAAY1B,GACrCC,GAAa,IAEd,CAACzB,EAAayB,IAEjB/S,oBAAU,WAAM,IACNmF,EAAWqM,EAAXrM,OACJA,IAAWoP,IAAYC,SAAYxB,EAE5B7N,IAAWoP,IAAYE,SAAYzB,IAC5C0B,QAAMD,QAAQ,wBACdxB,GAAW,IAHXA,GAAW,IAKZ,CAACzB,EAAWyB,IAEfjT,oBAAU,WAAM,IACNmF,EAAqBkL,EAArBlL,OAAQwP,EAAatE,EAAbsE,SAEhB,GADAzY,QAAQC,IAAIwY,EAAU,SAClBxP,IAAWoP,IAAYC,SAAYxB,GAEhC,GAAI7N,IAAWoP,IAAYE,UAAYzB,EAAS,CAErD,GADA0B,QAAMD,QAAQ,UACVE,EAAU,CACZ,IAAMC,EAAiBpb,OAAA2I,EAAA,EAAA3I,CAAA,GAClByW,EADkB,CAErB9K,OAAQwP,EAASxP,OACjB/H,GAAIuX,EAASvX,KAEfyV,EAAQ+B,GAEV3B,GAAW,SAXXA,GAAW,IAaZ,CAAC5C,EAAe4C,IAEnBjT,oBAAU,WAAM,IACNmF,EAAqByM,EAArBzM,OAAQwP,EAAa/C,EAAb+C,SACZxP,IAAWoP,IAAYC,SAAYlB,EAE5BnO,IAAWoP,IAAYE,SAAYnB,IACxCqB,EAASxP,SAAWH,IAAY6P,QAClCH,QAAMD,QAAN,uBAAApQ,OAAqCsQ,EAASxP,SAC9CoO,GAAa,IACJoB,EAASxP,SAAWH,IAAY8P,UACzCJ,QAAMD,QAAQ,gCACdlB,GAAa,IACJoB,EAASxP,SAAWH,IAAY+P,WACzCL,QAAMD,QAAQ,gCACdlB,GAAa,IAEfA,GAAa,IAZbA,GAAa,IAcd,CAAC3B,EAAa2B,IAEjBvT,oBAAU,WAAM,IACNmF,EAAWuM,EAAXvM,OACJA,IAAWoP,IAAYC,SAAYtB,EAE5B/N,IAAWoP,IAAYE,SAAYvB,IAC5CwB,QAAMD,QAAQ,yBACdtB,GAAY,IAHZA,GAAY,IAKb,CAACzB,EAAYyB,IAEhBnT,oBAAU,WAAM,IACNmF,EAAW2M,EAAX3M,OACJA,IAAWoP,IAAYC,SAAYpB,EAE5BjO,IAAWoP,IAAYE,SAAYrB,IAC5CsB,QAAMD,QAAQ,0BACdpB,GAAc,IAHdA,GAAc,IAKf,CAACvB,EAAcuB,IA0ClB,OACE/b,EAAAC,EAAAC,cAAC2e,GAAD,CACEjG,QAASsB,EAAUrM,SAAWoP,IAAYE,UAAYzB,EACtDZ,kBA3CuB,SAACjV,GAC1B8V,GAAW,GACXb,EAAkBjV,IA0ChBgT,SAAUuB,EAAWvM,SAAWoP,IAAYE,UAAYvB,EACxDZ,mBAxCwB,SAACnV,GAC3BgW,GAAY,GAEZb,EAAmBnV,IAsCjB6X,WAAYlD,EAAa3M,SAAWoP,IAAYE,UAAYrB,EAC5DZ,qBApC0B,SAACpV,GAC7BiW,GAAc,GACdb,EAAqBpV,IAmCnB6S,gBAAiB9S,EACjBiT,mBArBwB,SAACjT,GAC3B8V,GAAW,GAEX,IAAIgC,EAAWzb,OAAA2I,EAAA,EAAA3I,CAAA,GAAQ2D,GACvB8X,EAAY5J,cAAgB4J,EAAY5J,cAAczT,IAAI,SAACsd,GAAD,OAAA1b,OAAA2I,EAAA,EAAA3I,CAAA,GACrD0b,EADqD,CAExD3G,SAAU2G,EAAE3G,SAASnR,OAEvBlB,QAAQC,IAAI,eAAgB8Y,GAC5B7E,EAAmB6E,IAajB5E,cAAeA,EAAclL,OAC7BmL,mBAnCwB,SAACnT,GAC3BjB,QAAQC,IAAIgB,EAAM,gBAClBoW,GAAa,GACb,IAAM0B,EAAc,CAClB7X,GAAID,EAAKC,GACT+X,aAAchY,EAAKgY,aACnBhQ,OAAQH,IAAY6P,QAGtBlC,EAAoBsC","file":"static/js/77.6989eb1a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n// columns: array\n// sortColumn: object\n// onSort: function\nclass TableHeader extends Component {\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((column) => (\n            <th key={column.path || column.key}>{column.label}</th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","const maskRegex = /[0-9\\-+#]/;\nconst notMaskRegex = /[^\\d\\-+#]/g;\n\nfunction getIndex(mask) {\n  return mask.search(maskRegex);\n}\n\nfunction processMask(mask = \"#.##\") {\n  const maskObj = {};\n  const len = mask.length;\n  const start = getIndex(mask);\n  maskObj.prefix = start > 0 ? mask.substring(0, start) : \"\";\n\n  // Reverse string: not an ideal method if there are surrogate pairs\n  const end = getIndex(mask.split(\"\").reverse().join(\"\"));\n  const offset = len - end;\n  const substr = mask.substring(offset, offset + 1);\n  // Add 1 to offset if mask has a trailing decimal/comma\n  const indx = offset + (substr === \".\" || substr === \",\" ? 1 : 0);\n  maskObj.suffix = end > 0 ? mask.substring(indx, len) : \"\";\n\n  maskObj.mask = mask.substring(start, indx);\n  maskObj.maskHasNegativeSign = maskObj.mask.charAt(0) === \"-\";\n  maskObj.maskHasPositiveSign = maskObj.mask.charAt(0) === \"+\";\n\n  // Search for group separator & decimal; anything not digit,\n  // not +/- sign, and not #\n  let result = maskObj.mask.match(notMaskRegex);\n  // Treat the right most symbol as decimal\n  maskObj.decimal = (result && result[result.length - 1]) || \".\";\n  // Treat the left most symbol as group separator\n  maskObj.separator = (result && result[1] && result[0]) || \",\";\n\n  // Split the decimal for the format string if any\n  result = maskObj.mask.split(maskObj.decimal);\n  maskObj.integer = result[0];\n  maskObj.fraction = result[1];\n  return maskObj;\n}\n\nfunction processValue(value, maskObj, options) {\n  let isNegative = false;\n  const valObj = {\n    value,\n  };\n  if (value < 0) {\n    isNegative = true;\n    // Process only abs(), and turn on flag.\n    valObj.value = -valObj.value;\n  }\n\n  valObj.sign = isNegative ? \"-\" : \"\";\n\n  // Fix the decimal first, toFixed will auto fill trailing zero.\n  valObj.value = Number(valObj.value).toFixed(\n    maskObj.fraction && maskObj.fraction.length\n  );\n  // Convert number to string to trim off *all* trailing decimal zero(es)\n  valObj.value = Number(valObj.value).toString();\n\n  // Fill back any trailing zero according to format\n  // look for last zero in format\n  const posTrailZero = maskObj.fraction && maskObj.fraction.lastIndexOf(\"0\");\n  let [valInteger = \"0\", valFraction = \"\"] = valObj.value.split(\".\");\n  if (!valFraction || (valFraction && valFraction.length <= posTrailZero)) {\n    valFraction =\n      posTrailZero < 0\n        ? \"\"\n        : Number(\"0.\" + valFraction)\n            .toFixed(posTrailZero + 1)\n            .replace(\"0.\", \"\");\n  }\n\n  valObj.integer = valInteger;\n  valObj.fraction = valFraction;\n  addSeparators(valObj, maskObj);\n\n  // Remove negative sign if result is zero\n  if (valObj.result === \"0\" || valObj.result === \"\") {\n    // Remove negative sign if result is zero\n    isNegative = false;\n    valObj.sign = \"\";\n  }\n\n  if (!isNegative && maskObj.maskHasPositiveSign) {\n    valObj.sign = \"+\";\n  } else if (isNegative && maskObj.maskHasPositiveSign) {\n    valObj.sign = \"-\";\n  } else if (isNegative) {\n    valObj.sign =\n      options && options.enforceMaskSign && !maskObj.maskHasNegativeSign\n        ? \"\"\n        : \"-\";\n  }\n\n  return valObj;\n}\n\nfunction addSeparators(valObj, maskObj) {\n  valObj.result = \"\";\n  // Look for separator\n  const szSep = maskObj.integer.split(maskObj.separator);\n  // Join back without separator for counting the pos of any leading 0\n  const maskInteger = szSep.join(\"\");\n\n  const posLeadZero = maskInteger && maskInteger.indexOf(\"0\");\n  if (posLeadZero > -1) {\n    while (valObj.integer.length < maskInteger.length - posLeadZero) {\n      valObj.integer = \"0\" + valObj.integer;\n    }\n  } else if (Number(valObj.integer) === 0) {\n    valObj.integer = \"\";\n  }\n\n  // Process the first group separator from decimal (.) only, the rest ignore.\n  // get the length of the last slice of split result.\n  const posSeparator = szSep[1] && szSep[szSep.length - 1].length;\n  if (posSeparator) {\n    const len = valObj.integer.length;\n    const offset = len % posSeparator;\n    for (let indx = 0; indx < len; indx++) {\n      valObj.result += valObj.integer.charAt(indx);\n      // -posSeparator so that won't trail separator on full length\n      if (!((indx - offset + 1) % posSeparator) && indx < len - posSeparator) {\n        valObj.result += maskObj.separator;\n      }\n    }\n  } else {\n    valObj.result = valObj.integer;\n  }\n\n  valObj.result +=\n    maskObj.fraction && valObj.fraction\n      ? maskObj.decimal + valObj.fraction\n      : \"\";\n  return valObj;\n}\n\nexport default (mask, value, options = {}) => {\n  if (!mask || isNaN(Number(value))) {\n    // Invalid inputs\n    return value;\n  }\n\n  const maskObj = processMask(mask);\n  const valObj = processValue(value, maskObj, options);\n  return maskObj.prefix + valObj.sign + valObj.result + maskObj.suffix;\n};\n","import React, { Component } from \"react\";\nimport _ from \"lodash\"; // for nesting property\nimport { getFormattedDate } from \"helpers/date\";\nimport getFormattedNumber from \"helpers/number\";\nimport numberTypes from \"static/data/helpers/numberTypes.json\";\nimport dateTypes from \"static/data/helpers/dateTypes.json\";\n\nclass TableBody extends Component {\n  //for nested s\n  renderCell = (item, column, loading) => {\n    console.log(\"loaded\", loading)\n    if (column.content) return column.content(item, loading);\n    const result = _.get(item, column.path);\n    const numberIndex = numberTypes.findIndex(\n      (type) => type === String(column.path)\n    );\n    const index = dateTypes.findIndex((type) => type === String(column.path));\n    if (index >= 0) {\n      const date = getFormattedDate(result);\n      return date\n    } else if (numberIndex >= 0) {\n      return getFormattedNumber(\"#,###.00\", result, { enforceMaskSign: true });\n    } else {\n      return result? String(result) : \"\";\n    }\n  };\n\n  //for buttons\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item.id}>\n            {columns.map((column) => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column, this.props.loading)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;","import React, { useContext, useEffect, useState } from \"react\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport { MainContext } from \"../../context/Main/\";\nimport { getState, setPageOptions, getPageLimit } from \"../../context/Main/States/Pagination\";\n\nconst TableFooter = () => {\n  const { rootState, dispatch } = useContext(MainContext);\n  const [offset, setOffset] = useState(0);\n  const [pageLimit, setPageLimit] = useState(0);\n  const [maxLimit, setMaxLimit] = useState(0);\n  const [numberOfPages, setNumberOfPages] = useState(0);\n  const [lock, setLock] = useState(false);\n  const [clicked, setClicked] = useState(false);\n  const [buffer, setBuffer] = useState({ count: 0, results: [] });\n  const [count, setCount] = useState(0);\n  const [openTab, setOpenTab] = useState(\"\")\n\n  useEffect(() => {\n    const limit = getPageLimit(rootState)\n    if (typeof limit !== \"undefined\") {\n      if (pageLimit !== limit) {\n        // handleChange(offset, limit)\n      }\n    }\n  }, [rootState])\n\n  useEffect(() => {\n    const { count, results } = buffer\n    if (!(results.length === 0 && count === 0)) {\n      setNumberOfPages(Math.ceil(count / results.length));\n      setPageLimit(results.length);\n      setMaxLimit(count);\n      setLock(true);\n    }\n  }, [openTab, setNumberOfPages, setPageLimit, setMaxLimit, setLock])\n\n  useEffect(() => {\n    if (count) {\n      const { count: fetchedCount, results: data } = buffer;\n      if (pageLimit <= data.length) {\n        setNumberOfPages(Math.ceil(fetchedCount / data.length));\n        setPageLimit(data.length);\n        setMaxLimit(fetchedCount);\n        setLock(true);\n      }\n    }\n  }, [count, buffer]);\n\n  useEffect(() => {\n    try {\n      const { results, amount, activeTab } = getState(rootState);\n      activeTab !== \"\"? setOpenTab(activeTab) : console.warn(\"Pass active tab for paginations\")\n      if (amount !== count) {\n        if (typeof amount !== \"undefined\") {\n          setCount(amount);\n          setBuffer(results);\n        }\n      }\n      if (String(results) !== \"undefined\" && !lock) {\n        const { count, results: data } = results;\n        setNumberOfPages(Math.ceil(count / data.length));\n        setPageLimit(data.length);\n        setMaxLimit(count);\n        setLock(true);\n      }\n    } catch (e) {}\n  }, [rootState, setCount, setBuffer]);\n\n  const handleChange = (offset, limit = null) => {\n    if (!clicked) {\n      setClicked(true);\n    }\n    setOffset(offset);\n    if (limit) {\n      setPageLimit(limit)\n    }\n  };\n\n  useEffect(() => {\n    if (offset < maxLimit) {\n      if (clicked) {\n        setPageOptions({}, dispatch, {\n          offset,\n          limit: pageLimit,\n          onClick: clicked,\n        });\n      }  \n    }\n  }, [offset, pageLimit]);\n\n  return (\n    <div>\n      <Pagination className=\"pagination left\" size=\"md\" color=\"primary\">\n        <PaginationItem disabled={offset === 0}>\n          <PaginationLink first href=\"#\" onClick={() => handleChange(0)}>\n            First\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink\n            previous\n            disabled={offset === 0}\n            onClick={() => handleChange(offset - pageLimit)}\n          />\n        </PaginationItem>\n        {Array(numberOfPages)\n          .fill(\"\")\n          .map((_, idx) => (\n            <PaginationItem active={idx === Math.floor(offset / pageLimit)}>\n              <PaginationLink onClick={() => handleChange(idx * pageLimit)}>\n                {idx + 1}\n              </PaginationLink>\n            </PaginationItem>\n          ))}\n        <PaginationItem>\n          <PaginationLink\n            next\n            onClick={() => handleChange(offset + pageLimit)}\n            disabled={offset + pageLimit >= maxLimit}\n          />\n        </PaginationItem>\n        <PaginationItem disabled={offset + pageLimit >= maxLimit}>\n          <PaginationLink\n            last\n            onClick={() => handleChange((numberOfPages - 1) * pageLimit)}\n          >\n            Last\n          </PaginationLink>\n        </PaginationItem>\n      </Pagination>\n    </div>\n  );\n};\n\nexport default TableFooter;","import React, { useContext, useEffect } from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\nimport TableFooter from \"./TableFooter\";\nimport { Table as ReactstrapTable, CardHeader, Card } from \"reactstrap\";\nimport { MainContext } from \"../../context/Main/\";\nimport { connect } from \"react-redux\";\n\nconst Table = ({ columns, data, title, state, getLoading }) => {\n  let objectSet = {};\n  useEffect(() => {\n    if (typeof getLoading === \"function\") {\n      // const result = status(state)\n      console.log(\"result\", getLoading(state, { isPatch: true }));\n    }\n  }, [state, getLoading]);\n  const { rootState } = useContext(MainContext);\n\n  useEffect(() => {\n    try {\n      // setCurrenctTab(activeTab)\n    } catch (err) {}\n  }, [rootState]);\n\n  console.log(getLoading(state, { isPatch: true }))\n  return (\n    <Card className=\"p-2\">\n      <CardHeader className=\"tableHeaders border-0\">\n        <div>{\"\" + title ? title : \"\"}</div>\n      </CardHeader>\n      <ReactstrapTable size=\"md\" responsive striped>\n        <TableHeader columns={columns} />\n        <TableBody\n          data={data}\n          columns={columns}\n          loading={\n            typeof getLoading === \"fucntion\"\n              ? getLoading(state, { isPatch: true })\n              : {}\n          }\n        />\n        <TableFooter />\n      </ReactstrapTable>\n    </Card>\n  );\n};\nconst mapStateToProps = (state, ownProps) => ({ state, ...ownProps });\n\nexport default connect(mapStateToProps)(Table);\n","import { constants } from \"../reducer\";\n\nexport const stateName = \"page_values\";\n\nexport const getState = (rootState) => {\n  if (rootState[stateName]) {\n    return rootState[stateName];\n  } else {\n    return null;\n  }\n};\n\nexport const setPageValues = (\n  state,\n  dispatch,\n  results,\n  options = {},\n  activeTab = \"\"\n) => {\n  if (typeof results !== \"undefined\") {\n    if (results.count === 0) return null;\n    dispatch({\n      type: constants.UPDATE,\n      stateName,\n      payload: {\n        results,\n        options,\n        pageLimit: results.length ? Math.ceil(results.length / 5) * 5 : 5,\n        amount: getState(state) ? getState(state).amount + 1 : 0,\n        activeTab,\n      },\n    });\n  }\n};\n\nexport const setPageLimit = (state = {}, dispatch, pageLimit) => {\n  let currentTab = \"\";\n  if (state) {\n    const response = getState(state);\n    if (typeof response.activeTab !== \"undefined\")\n      currentTab = response.activeTab;\n  }\n\n  dispatch({\n    type: constants.UPDATE,\n    stateName,\n    payload: {\n      pageLimit,\n      activeTab: currentTab,\n    },\n  });\n};\n\nexport const getPageLimit = (rootState) => {\n  const results = rootState[stateName];\n  try {\n    const payload = results[\"pageLimit\"] ? results[\"pageLimit\"] : 0;\n    return payload ? payload : 0;\n  } catch (err) {}\n};\n\n// Needs to be deleted\nexport const setPageOptions = (\n  _,\n  dispatch,\n  options = { offset: 0, limit: 0 }\n) => {\n  dispatch({\n    type: constants.UPDATE,\n    stateName,\n    payload: {\n      options,\n    },\n  });\n};\n","export const FilterByName = (\n  data = [],\n  tag = \"name\",\n  searchValue = \"\",\n  fullScan = false\n) => {\n  var filteredData = undefined;\n  if (searchValue.length > 0) {\n    filteredData = data.filter((item) => {\n      const identifier = fullScan ? \"\" : \"^\";\n      try {\n        return (\n          searchValue &&\n          String(item[tag]).match(new RegExp(identifier + searchValue, \"gi\"))\n        );\n      } catch (err) {\n        console.error(`Tag does not exist: ${String(err)}`);\n      }\n      return null;\n    });\n  }\n  return typeof filteredData === \"undefined\" ? data : filteredData;\n};\n\nexport const FilterByDate = (\n  data = [],\n  tag = \"posting_date\",\n  startDate = \"\",\n  endDate = \"\"\n) => {\n  var filteredData = undefined;\n  if (startDate.length > 0 && endDate.length > 0) {\n    filteredData = data.filter((item) => {\n      try {\n        const dateItem = new Date(item[tag]).getTime();\n        const dateStart = new Date(startDate).getTime();\n        const dateEnd = new Date(endDate).getTime();\n        return (\n          startDate && endDate && dateItem <= dateEnd && dateItem >= dateStart\n        );\n      } catch (err) {\n        console.error(`Tag does not exist: ${String(err)}`);\n      }\n      return null;\n    });\n  }\n  return typeof filteredData === \"undefined\" ? data : filteredData;\n};\n\nexport const FilterByProperty = (\n  data = [],\n  tag = \"country\",\n  searchValue = \"\",\n  arrayTag = \"addresses\",\n  fullScan = false\n) => {\n  var filteredData = undefined;\n  if (searchValue.length > 0) {\n    filteredData = data.filter((item) => {\n      const identifier = fullScan ? \"\" : \"^\";\n      try {\n        const index = item[arrayTag].findIndex((prop) =>\n          prop[tag].match(new RegExp(identifier + searchValue, \"gi\"))\n        );\n        return searchValue && index >= 0;\n      } catch (err) {\n        console.error(`Tag does not exist: ${String(err)}`);\n      }\n      return null;\n    });\n  }\n  return typeof filteredData === \"undefined\" ? data : filteredData;\n};\n","export const statusTypes = {\n    ADD: \"ADDING_LINE\",\n    IDLE: \"IDLE\",\n    EDIT: \"EDIT\",\n    SAVED: \"SAVED\",\n    CANCELED: \"CANCELED\",\n};\n\nexport const initialState = {\n    addCount: 0,\n    status: statusTypes.IDLE,\n    hasEdit: true,\n    hasDelete: true,\n    _data: []\n}\n\nexport const constants = {\n    ADD: \"_ADD\",\n    UPDATE: \"UPDATE\"\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case constants.ADD: {\n            return {\n                ...state,\n                addCount: state.addCount + 1,\n                status: statusTypes.ADD\n            }\n        }\n\n        case constants.UPDATE: {\n            return {\n                ...state,\n                _data: action.payload\n            }\n        }\n\n        default: return state\n    }\n}\n\nexport const addLine = (dispatch) => dispatch({ type: constants.ADD })\n\nexport const updateData = (data) => dispatch => {\n    dispatch({ type: constants.UPDATE, payload: data })\n}\n\nexport const getData = (state) => state._data","import React, { useState, useEffect } from \"react\";\nimport { Table as ReactstrapTable, Button, Input } from \"reactstrap\";\nimport { MdEdit, MdDelete } from \"react-icons/md\";\nimport { updateData } from \"./reducer\";\nimport Joi from \"joi-browser\";\nimport _ from \"lodash\";\n\nconst uuid = () => Math.random().toString(36).substring(7);\n\nexport const populateLine = (obj, _id) => {\n  let returnObj = {};\n  for (let prop in obj) {\n    returnObj[prop] = \"\";\n  }\n  return {\n    ...returnObj,\n    _id,\n  };\n};\n\nexport const statusTypes = {\n  ADD: \"ADDING_LINE\",\n  IDLE: \"IDLE\",\n  EDIT: \"EDIT\",\n  SAVED: \"SAVED\",\n  CANCELED: \"CANCELED\",\n};\n\nexport const DisplayTable = ({\n  data,\n  columns,\n  hasEdit,\n  hasDelete,\n  status,\n  addCount,\n  schema,\n  dispatch,\n  callback,\n}) => {\n  const [fetchedData, setFetchedData] = useState([]);\n  const [formStatus, setFormStatus] = useState(statusTypes.IDLE);\n  const [displayValues, setDisplay] = useState(data.map(() => false));\n  const [defaultValues, setDefaultValues] = useState({});\n\n  useEffect(() => {\n    if (\n      statusTypes.IDLE === formStatus ||\n      statusTypes.SAVED === formStatus ||\n      statusTypes.CANCELED === formStatus\n    ) {\n      setFormStatus(status);\n    }\n  }, [status, setFormStatus, addCount]);\n\n  useEffect(() => {\n    if (data.length > 0 && fetchedData.length === 0) {\n      const filteredData = data.map((item) => {\n        var returnObj = {};\n        for (var prop in item) {\n          // eslint-disable-next-line no-loop-func\n          const found = columns.find((_item) => _item.tag === prop);\n          if (found) {\n            returnObj[found.tag] = _.get(item, found.tag);\n          }\n        }\n        return {\n          ...returnObj,\n          _id: uuid(),\n        };\n      });\n      setDisplay(filteredData.map(() => false));\n      setFetchedData(filteredData);\n    }\n  }, [data, setFetchedData]);\n\n  useEffect(() => {\n    updateData(fetchedData)(dispatch);\n    callback(fetchedData);\n  }, [fetchedData, dispatch]);\n\n  const [formData, setForm] = useState({});\n  const [validationData, setValidation] = useState({});\n  const [completed, setCompleted] = useState(false);\n  const [generalOptions, setGeneralOptions] = useState({});\n\n  useEffect(() => {\n    const options = {};\n    columns.forEach((item) => {\n      if (item.type === \"select\") {\n        options[item.tag] = item.options;\n      }\n    });\n    setGeneralOptions(options);\n  }, [setGeneralOptions]);\n\n  useEffect(() => {\n    if (formStatus === statusTypes.ADD) {\n      const _id = uuid();\n      setFetchedData(fetchedData.concat(populateLine(fetchedData[0], _id)));\n      populateData(populateLine(fetchedData[0], _id));\n      setDisplay(displayValues.concat(true));\n    }\n  }, [formStatus]);\n\n  const populateData = (data) => {\n    setValidation(schema);\n    setForm({\n      ...defaultValues,\n      ...data,\n    });\n  };\n\n  useEffect(() => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(formData, validationData, options);\n\n    if (!error) {\n      if (Object.values(formData).length > 1) {\n        setCompleted(true);\n      }\n    } else {\n      console.warn(error);\n      setCompleted(false);\n    }\n  }, [formData]);\n\n  const handleChange = ({ currentTarget: { name, value, callback } }) => {\n    const setOptions = (tag, options) => {\n      let updatedOptions = generalOptions;\n      const index = Object.keys(generalOptions).findIndex(\n        (data) => data === tag\n      );\n      if (index >= 0) {\n        updatedOptions[tag] = options;\n        setGeneralOptions(updatedOptions);\n      }\n    };\n\n    setForm({\n      ...formData,\n      [name]: value,\n    });\n\n    const setValue = (values = []) => {\n      var updates = {};\n      values.map(({ name, value }) => {\n        updates[name] = value;\n        return null;\n      });\n      setForm({\n        ...formData,\n        ...updates,\n      });\n    };\n    callback({\n      name,\n      value,\n      setOptions,\n      options: generalOptions,\n      setValue,\n      formData,\n    });\n  };\n\n  const cancelCallback = () => {\n    if (formStatus === statusTypes.ADD) {\n      const index = fetchedData.findIndex((data) => data._id === formData._id);\n      if (index >= 0) {\n        setFetchedData(fetchedData.filter((_, idx) => index !== idx));\n        setDisplay(displayValues.filter((_, idx) => index !== idx));\n      }\n      setCompleted(true);\n    } else {\n      setDisplay(displayValues.map(() => false));\n    }\n    setFormStatus(statusTypes.CANCELED);\n    setValidation({});\n  };\n\n  const deleteCallback = (_id) => {\n    const index = fetchedData.findIndex((data) => data._id === _id);\n    if (index >= 0) {\n      setFetchedData(fetchedData.filter((_, idx) => idx !== index));\n      setDisplay(displayValues.filter((_, idx) => idx !== index));\n      setFormStatus(statusTypes.CANCELED);\n    }\n  };\n\n  const saveCallback = () => {\n    setFetchedData(\n      fetchedData.map((data) => {\n        if (data._id === formData._id) {\n          return {\n            _id: uuid(),\n            ...formData,\n          };\n        } else {\n          return data;\n        }\n      })\n    );\n    setDisplay(displayValues.map(() => false));\n  };\n\n  const returnName = (dataItem, item) => {\n    if (item.optionsFrom === \"server\") {\n      const found = item.options.find(\n        (prop) => String(prop.id) === String(dataItem[item.tag])\n      );\n      if (found) return found.name;\n    } else {\n      return dataItem[item.tag];\n    }\n  };\n\n  useEffect(() => {\n    var formUpdates = {};\n    columns.forEach((item) => {\n      if (item.defaultValue) {\n        formUpdates = {\n          ...formUpdates,\n          [item.tag]: item.defaultValue,\n        };\n      }\n    });\n    if (Object.values(formUpdates).length > 0) {\n      setForm({\n        ...formData,\n        ...formUpdates,\n      });\n      setDefaultValues(formUpdates);\n    }\n  }, [columns, setForm]);\n\n\n  return (\n    <ReactstrapTable size=\"md\" responsive striped>\n      <thead>\n        <tr>\n          {columns\n            .filter((prop) => !Boolean(prop.isView))\n            .map((item) => (\n              <th>{item.label}</th>\n            ))}\n        </tr>\n      </thead>\n      <tbody>\n        {fetchedData.map((dataItem, idx) => {\n          return (\n            <tr>\n              {columns\n                .filter((prop) => !Boolean(prop.isView))\n                .map((item) => {\n                  return displayValues[idx] && !item.noEdit ? (\n                    <td>\n                      {item.type === \"select\" ? (\n                        <Input\n                          type={item.type}\n                          name={item.tag}\n                          value={_.get(formData, item.tag)}\n                          onChange={({ currentTarget: { name, value } }) => {\n                            const callback = item.callback\n                              ? item.callback\n                              : () => null;\n                            handleChange({\n                              currentTarget: { name, value, callback },\n                            });\n                          }}\n                          disabled={item.disabled}\n                        >\n                          <option></option>\n                          {item.optionsFrom === \"server\"\n                            ? generalOptions[item.tag].map((_item) => (\n                                <option value={_item.id}>{_item.name}</option>\n                              ))\n                            : generalOptions[item.tag].map((_item) => (\n                                <option value={_item}>{_item}</option>\n                              ))}\n                        </Input>\n                      ) : (\n                        <Input\n                          type={item.type ? item.type : \"text\"}\n                          name={item.tag}\n                          disabled={item.disabled}\n                          value={_.get(formData, item.tag)}\n                          onChange={({ currentTarget: { name, value } }) => {\n                            const callback = item.callback\n                              ? item.callback\n                              : () => null;\n                            handleChange({\n                              currentTarget: { name, value, callback },\n                            });\n                          }}\n                        />\n                      )}\n                    </td>\n                  ) : (\n                    <td>{returnName(dataItem, item)}</td>\n                  );\n                })}\n              {hasEdit ? (\n                <td>\n                  {displayValues[idx] ? (\n                    <div>\n                      <Button\n                        className=\"m-1\"\n                        size=\"sm\"\n                        outline\n                        color=\"info\"\n                        onClick={() => {\n                          saveCallback();\n                          setFormStatus(statusTypes.SAVED);\n                        }}\n                        disabled={!completed}\n                      >\n                        Save\n                      </Button>\n                      <Button\n                        className=\"m-1\"\n                        size=\"sm\"\n                        outline\n                        color=\"danger\"\n                        onClick={() => {\n                          cancelCallback();\n                        }}\n                      >\n                        Cancel\n                      </Button>\n                    </div>\n                  ) : (\n                    <Button\n                      className=\"m-1\"\n                      size=\"sm\"\n                      outline\n                      color=\"warning\"\n                      onClick={() => {\n                        setDisplay(\n                          displayValues.map((_, value) => value === idx)\n                        );\n                        populateData(dataItem);\n                        setFormStatus(statusTypes.EDIT);\n                      }}\n                    >\n                      <MdEdit />\n                    </Button>\n                  )}\n                </td>\n              ) : (\n                <></>\n              )}\n              {hasDelete ? (\n                <td>\n                  <Button\n                    className=\"m-1\"\n                    size=\"sm\"\n                    outline\n                    color=\"danger\"\n                    onClick={() => deleteCallback(dataItem._id)}\n                  >\n                    <MdDelete />\n                  </Button>\n                </td>\n              ) : (\n                <></>\n              )}\n            </tr>\n          );\n        })}\n      </tbody>\n    </ReactstrapTable>\n  );\n};\n","import React, { useState, useReducer, useEffect } from \"react\";\nimport { Button, Col } from \"reactstrap\";\nimport { initialState, reducer, addLine, DisplayTable } from \"./index\";\n\nexport const InlineTable = ({\n  data,\n  columns,\n  callback,\n  schema,\n  lineTag,\n  disabled,\n  startForm\n}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [dataAllocated, setAllocated] = useState(false)\n\n  useEffect(() => {\n    if (startForm) {\n      addLine(dispatch)\n    }\n  }, [startForm, dispatch])\n\n  const _callback = (data) => {\n    if (!dataAllocated && data.length > 0 && Object.values(data[0]).length > 1) {\n      callback(data)\n      setAllocated(true)\n    } else if (state._data.length >= data.length) {\n      callback(data);\n    }\n  };\n\n  return (\n    <div>\n      {disabled? <></> : <Col align=\"right\" className=\"mb-1 pl-3 pr-3\">\n        <Button\n          className=\"m-1 align-right\"\n          size=\"sm\"\n          outline\n          color=\"info\"\n          onClick={() => addLine(dispatch)}\n        >\n          {lineTag? lineTag : \"Add Line\"}\n        </Button>\n      </Col>}\n      <DisplayTable\n        {...state}\n        dispatch={dispatch}\n        data={data}\n        schema={schema}\n        columns={columns}\n        callback={_callback}\n        hasEdit={!disabled}\n        hasDelete={!disabled}\n      />\n    </div>\n  );\n};\n","export { DisplayTable } from \"./main\"\nexport { addLine, getData, initialState, reducer } from \"./reducer\"\nexport { InlineTable } from \"./render\"","import Joi from \"joi-browser\";\n\nexport const saveLineTag = \"payroll_lines\";\n\nexport const apiLineTag = \"payroll_lines\";\n\nexport const mainSchema = {\n  from_date: Joi.any(),\n  to_date: Joi.any(),\n  total_employee_pension: Joi.any(),\n  total_income_tax: Joi.any(),\n  total_loan: Joi.any(),\n  total_local_sales: Joi.any(),\n  total_overtime: Joi.any(),\n  total_pension_contribution: Joi.any(),\n  total_salary: Joi.any(),\n  total_transport_allowance: Joi.any(),\n  payroll_lines: Joi.array().items(Joi.object()).min(1),\n};\n\nexport const initialState = {\n  data: {\n    from_date: \"\",\n    to_date: \"\",\n    total_employee_pension: \"\",\n    total_income_tax: \"\",\n    total_loan: \"\",\n    total_local_sales: \"\",\n    total_overtime: \"\",\n    total_pension_contribution: \"\",\n    total_salary: \"\",\n    total_transport_allowance: \"\",\n    payroll_lines: [],\n  },\n  errors: {},\n  selectedLine: \"\",\n  lineCounter: 1,\n};\n\nexport const populateState = (payrollProcess, lineMapper) => {\n  return {\n    from_date: payrollProcess.from_date,\n    to_date: payrollProcess.to_date,\n    total_employee_pension: payrollProcess.total_employee_pension,\n    total_income_tax: payrollProcess.total_income_tax,\n    total_loan: payrollProcess.total_loan,\n    total_local_sales: payrollProcess.total_local_sales,\n    total_overtime: payrollProcess.total_overtime,\n    total_pension_contribution: payrollProcess.total_pension_contribution,\n    total_salary: payrollProcess.total_salary,\n    total_transport_allowance: payrollProcess.total_transport_allowance,\n    [saveLineTag]: lineMapper(),\n  };\n};\n\nexport const lineContentMapper = (data, lineTag = saveLineTag) => {\n  return data[lineTag].map((line) => ({\n    _id: line.employee.id,\n    employee_name: line.employee.first_name + \" \" + line.employee.father_name,\n    employee_department: line.employee.department,\n    employee_position: line.employee.position,\n    basic_salary: line.basic_salary,\n    employee_pension: line.employee_pension,\n    employer_pension: line.employer_pension,\n    income_tax: line.income_tax,\n    net_salary: line.net_salary,\n    non_taxable_income: line.non_taxable_income,\n    taxable_income: line.taxable_income,\n    total_deduction: line.total_deduction,\n  }));\n};\n\nexport const lineSchema = {\n  _id: Joi.any().allow(\"\").optional(),\n  employee_name: Joi.any(),\n  employee_department: Joi.any(),\n  employee_position: Joi.any(),\n  basic_salary: Joi.any(),\n  employee_pension: Joi.any(),\n  employer_pension: Joi.any(),\n  income_tax: Joi.any(),\n  net_salary: Joi.any(),\n  non_taxable_income: Joi.any(),\n  taxable_income: Joi.any(),\n  total_deduction: Joi.any(),\n};\n\nexport const getColumns = (props) => {\n  return [\n    {\n      tag: \"employee_name\",\n      label: \"Name\",\n      type: \"text\",\n    },\n    {\n      tag: \"employee_department\",\n      label: \"Department\",\n      type: \"text\",\n    },\n    {\n      tag: \"employee_position\",\n      label: \"Position\",\n      type: \"text\",\n    },\n    {\n      tag: \"basic_salary\",\n      label: \"Basic Salary\",\n      type: \"text\",\n    },\n    {\n      tag: \"employee_pension\",\n      label: \"Employee Pension\",\n      type: \"text\",\n    },\n    {\n      tag: \"employer_pension\",\n      label: \"Employer Pension\",\n      type: \"text\",\n    },\n    {\n      tag: \"income_tax\",\n      label: \"Income Tax\",\n      type: \"text\",\n    },\n    {\n      tag: \"net_salary\",\n      label: \"Net Salary\",\n      type: \"text\",\n    },\n    {\n      tag: \"non_taxable_income\",\n      label: \"Non Taxable Income\",\n      type: \"text\",\n    },\n    {\n      tag: \"taxable_income\",\n      label: \"Taxable Income\",\n      type: \"text\",\n    },\n    {\n      tag: \"total_deduction\",\n      label: \"Total Deduction\",\n      type: \"text\",\n    },\n  ];\n};\n","import React from \"react\";\nimport { Card, CardBody, CardHeader, Form, Row, Col, Label } from \"reactstrap\";\nimport ReusabelForm from \"pages/common/form\";\nimport { InlineTable } from \"pages/common/InLineEditableTable\";\nimport {\n  initialState,\n  mainSchema,\n  getColumns,\n  lineSchema,\n  lineContentMapper,\n  populateState,\n  saveLineTag,\n  apiLineTag,\n} from \"./config\";\n\nclass PayrollProcessAdd extends ReusabelForm {\n  constructor(props) {\n    super(props);\n    this.initialState = initialState;\n    this.state = JSON.parse(JSON.stringify(this.initialState));\n    this.schema = mainSchema;\n    this.handleLineSave = this.handleLineSave.bind(this);\n    this.populateState = this.populateState.bind(this);\n    this.updateLines = this.updateLines.bind(this);\n    this.lineMapper = this.lineMapper.bind(this);\n    this.updateData = this.updateData.bind(this);\n  }\n\n  doSubmit = async () => {\n    this.props.submit(this.state.data);\n  };\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  lineMapper() {\n    if (this.props.isEdit || this.props.isView) {\n      return lineContentMapper(this.props.data, apiLineTag);\n    } else {\n      return [];\n    }\n  }\n\n  populateState(data) {\n    const newData = populateState(data, this.lineMapper);\n    this.setState({ lockUpdate: true, data: newData });\n  }\n\n  updateLines(lines) {\n    if (lines.length > 0 || this.state.data[saveLineTag].length > 0) {\n      this.setState({\n        data: {\n          ...this.state.data,\n          [saveLineTag]: lines,\n        },\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if ((this.props.isEdit || this.props.isView) && !this.state.lockUpdate) {\n      this.populateState(this.props.data);\n    }\n  }\n\n  handleLineSave(data) {\n    this.setState({\n      data: {\n        ...this.state.data,\n        [saveLineTag]: data,\n      },\n    });\n  }\n\n  updateData(key, value) {\n    this.setState({\n      data: {\n        ...this.state.data,\n        [key]: value,\n      },\n    });\n  }\n\n  render() {\n    return (\n      <Card className=\"border-0\">\n        <CardHeader className=\"border-0\">Payroll Process</CardHeader>\n        <CardBody>\n          <Form onSubmit={this.handleSubmit}>\n            <Row>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput(\"from_date\", \"From Date\", \"date\")}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput(\"to_date\", \"To Date\", \"date\")}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"total_employee_pension\",\n                  label: \"Total Employee Pension\",\n                })}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"total_income_tax\",\n                  label: \"Total Income Tax\",\n                })}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"total_loan\",\n                  label: \"Total Loan\",\n                })}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"total_local_sales\",\n                  label: \"Total Local Sales\",\n                })}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"total_overtime\",\n                  label: \"Total Overtime\",\n                })}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"total_pension_contribution\",\n                  label: \"Total Pension Contribution\",\n                })}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"total_salary\",\n                  label: \"Total Salary\",\n                })}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"total_transport_allowance\",\n                  label: \"Total Transport Allowance\",\n                })}\n              </Col>\n              <Col md={12} sm={12} xs={12}>\n                <Label>Lines </Label>\n                <CardBody>\n                  <InlineTable\n                    columns={getColumns(this.props)}\n                    disabled={this.props.disabled}\n                    data={this.state.data[saveLineTag]}\n                    callback={this.updateLines}\n                    schema={lineSchema}\n                    startForm={this.props.isAdd}\n                  />\n                </CardBody>\n              </Col>\n              <Col size=\"xl\" align=\"center\">\n                {this.renderButton(\"Save\")}\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n    );\n  }\n}\nexport default PayrollProcessAdd;\n","import React, { useEffect, useReducer } from \"react\";\nimport Page from \"components/Page\";\nimport { Card, CardBody,  Button, Col } from \"reactstrap\";\nimport CommonModals from \"components/CommonModal\";\nimport { _toggle, initialState, reducer } from \"pages/common/ModalOptions\";\nimport { MdRemoveRedEye, MdLocalPostOffice } from \"react-icons/md\";\nimport CustomTable from \"pages/common/table\";\nimport LoadingSpinner from \"components/PageSpinner\";\nimport PayrollProcessAdd from \"./PayrollProcessAdd\";\nimport _ from \"lodash\";\nimport statusTypes from \"config/statusTypes\";\n\nexport default function PayrollProcessPage({\n  payrollProcesss,\n  doneAdd,\n  doneEdit,\n  savePayrollProcess,\n  saveAddStatus,\n  postPayrollProcess,\n}) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const columns = [\n    { path: \"from_date\", label: \"From Date\" },\n    { path: \"to_date\", label: \"To Date\" },\n    { path: \"total_employee_pension\", label: \"Total Employee Pension\" },\n    { path: \"total_loan\", label: \"Total Loan\" },\n    { path: \"total_local_sales\", label: \"Total Local Sales\" },\n    { path: \"total_overtime\", label: \"Total Overtime\" },\n    { path: \"total_pension_contribution\", label: \"Total Pension Contribution\" },\n    { path: \"total_salary\", label: \"Total Salary\" },\n    { path: \"total_transport_allowance\", label: \"Total Transport Allowance\" },\n    { path: \"status\", label: \"Status\" },\n\n    {\n      key: \"view\",\n      content: (payrollProcess) => (\n        <>\n          <Button\n            className=\"m-1\"\n            size=\"sm\"\n            outline\n            color=\"info\"\n            onClick={() => {\n              _toggle(\n                {\n                  type: \"VIEW\",\n                  Component: PayrollProcessAdd,\n                  data: payrollProcess,\n                  title: \"View Payroll\",\n                },\n                dispatch\n              );\n            }}\n          >\n            <MdRemoveRedEye />\n          </Button>\n          {payrollProcess.status === statusTypes.SAVED && (\n            <Button\n              className=\"m-1\"\n              size=\"sm\"\n              outline\n              color=\"success\"\n              onClick={() => {\n                _toggle(\n                  {\n                    type: \"POST\",\n                    submit: postPayrollProcess,\n                    submitButtonLabel: \"Post\",\n                    data: payrollProcess,\n                    title: \"Post\",\n                  },\n                  dispatch\n                );\n              }}\n            >\n              <MdLocalPostOffice /> Post\n            </Button>\n          )}\n        </>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    if (doneAdd || doneEdit) {\n      _toggle({ type: \"CLOSE\" }, dispatch);\n    }\n  }, [doneAdd, doneEdit]);\n\n  const okSave = () => {\n    savePayrollProcess(payrollProcesss);\n  };\n\n  console.log(\"payrollProcesss\", payrollProcesss);\n\n  return (\n    <div>\n      <Page>\n        <CommonModals\n          data={state.data}\n          openModal={state.openModal}\n          component={state.Component}\n          toggle={_toggle}\n          dispatch={dispatch}\n          title={state.title}\n        />\n        <Col align=\"right\" className=\"mb-1 pl-3 pr-3\">\n          {!_.isEmpty(payrollProcesss) && (\n            <Button\n              onClick={() => {\n                _toggle(\n                  {\n                    type: \"DELETE\",\n                    deleteOptions: {\n                      okCallback: okSave,\n                      title: \"Are you sure?\",\n                      message: \"\",\n                    },\n                  },\n                  dispatch\n                );\n              }}\n              outline\n              size=\"sm\"\n              disabled={saveAddStatus === \"pending\"}\n            >\n              {saveAddStatus === \"pending\" ? <LoadingSpinner /> : \"Save\"}\n            </Button>\n          )}\n        </Col>\n\n        <Card className=\"border-0\">\n        \n          <CardBody>\n            {!_.isEmpty(payrollProcesss) && (\n              <CustomTable title=\" Payroll Process\" columns={columns} data={[payrollProcesss]} />\n            )}\n          </CardBody>\n        </Card>\n      </Page>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport PayrollProcess from \"./PayrollProcess\";\nimport {\n  selectFetchStatus,\n  selectAddStatus,\n  selectPayrollProcesss,\n  Fetch,\n  Add,\n  selectEditStatus,\n  Edit,\n  selectDeleteStatus,\n  Remove,\n} from \"store/HR/PayrollManagement/PayrollProcess\";\nimport {\n  Add as SavePayrollProcess,\n  selectPatchStatus,\n  Patch,\n  selectAddStatus as selectSavePayrollProcesssAddStatus,\n} from \"store/HR/PayrollManagement/SavePayrollProcess\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { reduxStatus } from \"constants/reduxStatus\";\nimport { SearchContext, MainContext } from \"context/\";\nimport {\n  assignFilterComponent,\n  setLockComponent,\n} from \"context/Main/States/search\";\nimport { FilterByName } from \"helpers/Filter\";\nimport { Input } from \"reactstrap\";\nimport { startOfMonth, endOfMonth } from \"helpers/date\";\nimport statusTypes from \"config/statusTypes\";\n\nconst Loader = ({\n  fetchStatus,\n  addStatus,\n  patchStatus,\n  fetchPayrollProcesss,\n  addPayrollProcess,\n  editStatus,\n  editPayrollProcess,\n  deleteStatus,\n  deletePayrollProcess,\n  payrollProcesss,\n  savePayrollProcess,\n  saveAddStatus,\n  patchPayrollProcess,\n}) => {\n  const [data, setData] = useState([]);\n  const [fetchLock, setFetchLock] = useState(true);\n  const [addLock, setAddLock] = useState(true);\n  const [editLock, setEditLock] = useState(true);\n  const [deleteLock, setDeleteLock] = useState(true);\n  const [patchLock, setPatchLock] = useState(true);\n  const [filterType] = useState(\"name\");\n\n  const { searchValue } = useContext(SearchContext);\n  const { dispatch } = useContext(MainContext);\n\n  const [startDate, setStartDate] = useState(startOfMonth);\n  const [endDate, setEndDate] = useState(endOfMonth);\n\n  useEffect(() => {\n    setData(payrollProcesss);\n  }, [payrollProcesss, setData]);\n\n  // Filtering component by document_number and posting date\n  const FilterTypes = () => {\n    const [start, setStart] = useState(startOfMonth);\n    const [end, setEnd] = useState(endOfMonth);\n\n    useEffect(() => setStartDate(start), [start, setStartDate]);\n    useEffect(() => setEndDate(end), [end, setEndDate]);\n\n    return (\n      <>\n        Start Date{\" \"}\n        <Input\n          type=\"date\"\n          value={start}\n          onChange={({ currentTarget: { value } }) => setStart(value)}\n        />\n        End Date\n        <Input\n          type=\"date\"\n          value={end}\n          onChange={({ currentTarget: { value } }) => setEnd(value)}\n        />\n      </>\n    );\n  };\n\n  useEffect(() => {\n    setLockComponent({}, dispatch, false);\n    assignFilterComponent({}, dispatch, FilterTypes);\n  }, [dispatch]);\n\n  useEffect(() => {\n    setData(FilterByName(payrollProcesss, filterType, searchValue));\n  }, [searchValue, setData, filterType]);\n\n  useEffect(() => {\n    setFetchLock(false);\n    fetchPayrollProcesss([\n      { key: \"from_date\", value: startDate },\n      { key: \"to_date\", value: endDate },\n    ]);\n  }, [fetchPayrollProcesss, setFetchLock, startDate, endDate]);\n\n  useEffect(() => {\n    const { status } = fetchStatus;\n    if (status === reduxStatus.failure && !fetchLock) {\n      setFetchLock(true);\n    }\n  }, [fetchStatus, setFetchLock]);\n\n  useEffect(() => {\n    const { status } = addStatus;\n    if (status === reduxStatus.failure && !addLock) {\n      setAddLock(true);\n    } else if (status === reduxStatus.success && !addLock) {\n      toast.success(\"Added PayrollProcess\");\n      setAddLock(true);\n    }\n  }, [addStatus, setAddLock]);\n\n  useEffect(() => {\n    const { status, response } = saveAddStatus;\n    console.log(response, \"saved\");\n    if (status === reduxStatus.failure && !addLock) {\n      setAddLock(true);\n    } else if (status === reduxStatus.success && !addLock) {\n      toast.success(\"Saved!\");\n      if (response) {\n        const newPayrollProcess = {\n          ...payrollProcesss,\n          status: response.status,\n          id: response.id,\n        };\n        setData(newPayrollProcess);\n      }\n      setAddLock(true);\n    }\n  }, [saveAddStatus, setAddLock]);\n\n  useEffect(() => {\n    const { status, response } = patchStatus;\n    if (status === reduxStatus.failure && !patchLock) {\n      setPatchLock(true);\n    } else if (status === reduxStatus.success && !patchLock) {\n      if (response.status === statusTypes.POSTED) {\n        toast.success(`Payroll ${response.status}`);\n        setPatchLock(true);\n      } else if (response.status === statusTypes.OPEN_SIV) {\n        toast.success(\"Payroll Approved\");\n        setPatchLock(true);\n      } else if (response.status === statusTypes.REJECTED) {\n        toast.success(\"Payroll Rejected\");\n        setPatchLock(true);\n      }\n      setPatchLock(true);\n    }\n  }, [patchStatus, setPatchLock]);\n\n  useEffect(() => {\n    const { status } = editStatus;\n    if (status === reduxStatus.failure && !editLock) {\n      setEditLock(true);\n    } else if (status === reduxStatus.success && !editLock) {\n      toast.success(\"Edited PayrollProcess\");\n      setEditLock(true);\n    }\n  }, [editStatus, setEditLock]);\n\n  useEffect(() => {\n    const { status } = deleteStatus;\n    if (status === reduxStatus.failure && !deleteLock) {\n      setDeleteLock(true);\n    } else if (status === reduxStatus.success && !deleteLock) {\n      toast.success(\"Deleted PayrollProcess\");\n      setDeleteLock(true);\n    }\n  }, [deleteStatus, setDeleteLock]);\n\n  const _addPayrollProcess = (data) => {\n    setAddLock(false);\n    addPayrollProcess(data);\n  };\n\n  const _editPayrollProcess = (data) => {\n    setEditLock(false);\n\n    editPayrollProcess(data);\n  };\n\n  const _deletePayrollProcess = (id) => {\n    setDeleteLock(false);\n    deletePayrollProcess(id);\n  };\n\n  const _postPayrollProcess = (data) => {\n    console.log(data, \"payroll_data\");\n    setPatchLock(false);\n    const requestBody = {\n      id: data.id,\n      posting_date: data.posting_date,\n      status: statusTypes.POSTED,\n    };\n\n    patchPayrollProcess(requestBody);\n  };\n\n  const _savePayrollProcess = (data) => {\n    setAddLock(false);\n    // const requestBody = data.map((d) => ({ ...d, employee: d.employee.id }));\n    let requestBody = { ...data };\n    requestBody.payroll_lines = requestBody.payroll_lines.map((l) => ({\n      ...l,\n      employee: l.employee.id,\n    }));\n    console.log(\"request body\", requestBody);\n    savePayrollProcess(requestBody);\n  };\n\n  return (\n    <PayrollProcess\n      doneAdd={addStatus.status === reduxStatus.success && !addLock}\n      addPayrollProcess={_addPayrollProcess}\n      doneEdit={editStatus.status === reduxStatus.success && !editLock}\n      editPayrollProcess={_editPayrollProcess}\n      doneDelete={deleteStatus.status === reduxStatus.success && !deleteLock}\n      deletePayrollProcess={_deletePayrollProcess}\n      payrollProcesss={data}\n      savePayrollProcess={_savePayrollProcess}\n      saveAddStatus={saveAddStatus.status}\n      postPayrollProcess={_postPayrollProcess}\n    />\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  fetchStatus: selectFetchStatus(state),\n  addStatus: selectAddStatus(state),\n  editStatus: selectEditStatus(state),\n  patchStatus: selectPatchStatus(state),\n  deleteStatus: selectDeleteStatus(state),\n  payrollProcesss: selectPayrollProcesss(state),\n  saveAddStatus: selectSavePayrollProcesssAddStatus(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchPayrollProcesss: (data) => dispatch(Fetch(data)),\n  addPayrollProcess: (data) => dispatch(Add(data)),\n  editPayrollProcess: (data) => dispatch(Edit(data)),\n  deletePayrollProcess: (id) => dispatch(Remove(id)),\n  savePayrollProcess: (data) => dispatch(SavePayrollProcess(data)),\n  patchPayrollProcess: (data) => dispatch(Patch(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loader);\n","import Joi from \"joi-browser\";\n\nexport const saveLineTag = \"payroll_lines\";\n\nexport const apiLineTag = \"payroll_lines\";\n\nexport const mainSchema = {\n  from_date: Joi.any(),\n  to_date: Joi.any(),\n  total_employee_pension: Joi.any(),\n  total_income_tax: Joi.any(),\n  total_loan: Joi.any(),\n  total_local_sales: Joi.any(),\n  total_overtime: Joi.any(),\n  total_pension_contribution: Joi.any(),\n  total_salary: Joi.any(),\n  total_transport_allowance: Joi.any(),\n  payroll_lines: Joi.array().items(Joi.object()).min(1),\n};\n\nexport const initialState = {\n  data: {\n    from_date: \"\",\n    to_date: \"\",\n    total_employee_pension: \"\",\n    total_income_tax: \"\",\n    total_loan: \"\",\n    total_local_sales: \"\",\n    total_overtime: \"\",\n    total_pension_contribution: \"\",\n    total_salary: \"\",\n    total_transport_allowance: \"\",\n    payroll_lines: [],\n  },\n  errors: {},\n  selectedLine: \"\",\n  lineCounter: 1,\n};\n\nexport const populateState = (payrollProcess, lineMapper) => {\n  return {\n    from_date: payrollProcess.from_date,\n    to_date: payrollProcess.to_date,\n    total_employee_pension: payrollProcess.total_employee_pension,\n    total_income_tax: payrollProcess.total_income_tax,\n    total_loan: payrollProcess.total_loan,\n    total_local_sales: payrollProcess.total_local_sales,\n    total_overtime: payrollProcess.total_overtime,\n    total_pension_contribution: payrollProcess.total_pension_contribution,\n    total_salary: payrollProcess.total_salary,\n    total_transport_allowance: payrollProcess.total_transport_allowance,\n    [saveLineTag]: lineMapper(),\n  };\n};\n\nexport const lineContentMapper = (data, lineTag = saveLineTag) => {\n  return data[lineTag].map((line) => ({\n    _id: line.employee.id,\n    employee_name: line.employee.first_name + \" \" + line.employee.father_name,\n    employee_department: line.employee.department,\n    employee_position: line.employee.position,\n    basic_salary: line.basic_salary,\n    employee_pension: line.employee_pension,\n    employer_pension: line.employer_pension,\n    income_tax: line.income_tax,\n    net_salary: line.net_salary,\n    non_taxable_income: line.non_taxable_income,\n    taxable_income: line.taxable_income,\n    total_deduction: line.total_deduction,\n  }));\n};\n\nexport const lineSchema = {\n  _id: Joi.any().allow(\"\").optional(),\n  employee_name: Joi.any(),\n  employee_department: Joi.any(),\n  employee_position: Joi.any(),\n  basic_salary: Joi.any(),\n  employee_pension: Joi.any(),\n  employer_pension: Joi.any(),\n  income_tax: Joi.any(),\n  net_salary: Joi.any(),\n  non_taxable_income: Joi.any(),\n  taxable_income: Joi.any(),\n  total_deduction: Joi.any(),\n};\n\nexport const getColumns = (props) => {\n  return [\n    {\n      tag: \"employee_name\",\n      label: \"Name\",\n      type: \"text\",\n    },\n    {\n      tag: \"employee_department\",\n      label: \"Department\",\n      type: \"text\",\n    },\n    {\n      tag: \"employee_position\",\n      label: \"Position\",\n      type: \"text\",\n    },\n    {\n      tag: \"basic_salary\",\n      label: \"Basic Salary\",\n      type: \"text\",\n    },\n    {\n      tag: \"employee_pension\",\n      label: \"Employee Pension\",\n      type: \"text\",\n    },\n    {\n      tag: \"employer_pension\",\n      label: \"Employer Pension\",\n      type: \"text\",\n    },\n    {\n      tag: \"income_tax\",\n      label: \"Income Tax\",\n      type: \"text\",\n    },\n    {\n      tag: \"net_salary\",\n      label: \"Net Salary\",\n      type: \"text\",\n    },\n    {\n      tag: \"non_taxable_income\",\n      label: \"Non Taxable Income\",\n      type: \"text\",\n    },\n    {\n      tag: \"taxable_income\",\n      label: \"Taxable Income\",\n      type: \"text\",\n    },\n    {\n      tag: \"total_deduction\",\n      label: \"Total Deduction\",\n      type: \"text\",\n    },\n  ];\n};\n","import React from \"react\";\nimport { Card, CardBody, CardHeader, Form, Row, Col, Label } from \"reactstrap\";\nimport ReusabelForm from \"pages/common/form\";\nimport { InlineTable } from \"pages/common/InLineEditableTable\";\nimport {\n  initialState,\n  mainSchema,\n  getColumns,\n  lineSchema,\n  lineContentMapper,\n  populateState,\n  saveLineTag,\n  apiLineTag,\n} from \"./config\";\n\nclass PayrollProcessAdd extends ReusabelForm {\n  constructor(props) {\n    super(props);\n    this.initialState = initialState;\n    this.state = JSON.parse(JSON.stringify(this.initialState));\n    this.schema = mainSchema;\n    this.handleLineSave = this.handleLineSave.bind(this);\n    this.populateState = this.populateState.bind(this);\n    this.updateLines = this.updateLines.bind(this);\n    this.lineMapper = this.lineMapper.bind(this);\n    this.updateData = this.updateData.bind(this);\n  }\n\n  doSubmit = async () => {\n    this.props.submit(this.state.data);\n  };\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  lineMapper() {\n    if (this.props.isEdit || this.props.isView) {\n      return lineContentMapper(this.props.data, apiLineTag);\n    } else {\n      return [];\n    }\n  }\n\n  populateState(data) {\n    const newData = populateState(data, this.lineMapper);\n    this.setState({ lockUpdate: true, data: newData });\n  }\n\n  updateLines(lines) {\n    if (lines.length > 0 || this.state.data[saveLineTag].length > 0) {\n      this.setState({\n        data: {\n          ...this.state.data,\n          [saveLineTag]: lines,\n        },\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if ((this.props.isEdit || this.props.isView) && !this.state.lockUpdate) {\n      this.populateState(this.props.data);\n    }\n  }\n\n  handleLineSave(data) {\n    this.setState({\n      data: {\n        ...this.state.data,\n        [saveLineTag]: data,\n      },\n    });\n  }\n\n  updateData(key, value) {\n    this.setState({\n      data: {\n        ...this.state.data,\n        [key]: value,\n      },\n    });\n  }\n\n  render() {\n    return (\n      <Card className=\"border-0\">\n        <CardHeader className=\"border-0\">Saved Processes</CardHeader>\n        <CardBody>\n          <Form onSubmit={this.handleSubmit}>\n            <Row>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput(\"from_date\", \"From Date\", \"date\")}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput(\"to_date\", \"To Date\", \"date\")}\n              </Col>\n              {/* {isView && (\n                <Col md={3} sm={12} xs={12}>\n                  {this.renderInput(\"status\", \"Status\")}\n                </Col>\n              )} */}\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"total_employee_pension\",\n                  label: \"Total Employee Pension\",\n                })}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"total_income_tax\",\n                  label: \"Total Income Tax\",\n                })}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"total_loan\",\n                  label: \"Total Loan\",\n                })}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"total_local_sales\",\n                  label: \"Total Local Sales\",\n                })}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"total_overtime\",\n                  label: \"Total Overtime\",\n                })}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"total_pension_contribution\",\n                  label: \"Total Pension Contribution\",\n                })}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"total_salary\",\n                  label: \"Total Salary\",\n                })}\n              </Col>\n              <Col md={3} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"total_transport_allowance\",\n                  label: \"Total Transport Allowance\",\n                })}\n              </Col>\n              <Col md={12} sm={12} xs={12}>\n                <Label>Lines </Label>\n                <CardBody>\n                  <InlineTable\n                    columns={getColumns(this.props)}\n                    disabled={this.props.disabled}\n                    data={this.state.data[saveLineTag]}\n                    callback={this.updateLines}\n                    schema={lineSchema}\n                    startForm={this.props.isAdd}\n                  />\n                </CardBody>\n              </Col>\n              <Col size=\"xl\" align=\"center\">\n                {this.renderButton(\"Save\")}\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n    );\n  }\n}\nexport default PayrollProcessAdd;\n","import React, { useEffect, useReducer } from \"react\";\nimport Page from \"components/Page\";\nimport { Card, CardBody, Button, Col } from \"reactstrap\";\nimport CommonModals from \"components/CommonModal\";\nimport { _toggle, initialState, reducer } from \"pages/common/ModalOptions\";\nimport { MdRemoveRedEye, MdLocalPostOffice } from \"react-icons/md\";\nimport CustomTable from \"pages/common/table\";\nimport PayrollProcessAdd from \"./PayrollProcessAdd\";\nimport statusTypes from \"config/statusTypes\";\n\nexport default function PayrollProcess({\n  payrollProcesss,\n  doneAdd,\n  doneEdit,\n  savePayrollProcess,\n  postPayrollProcess,\n  donePatch,\n}) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const columns = [\n    { path: \"from_date\", label: \"From Date\" },\n    { path: \"to_date\", label: \"To Date\" },\n    { path: \"total_employee_pension\", label: \"Total Employee Pension\" },\n    { path: \"total_loan\", label: \"Total Loan\" },\n    { path: \"total_local_sales\", label: \"Total Local Sales\" },\n    { path: \"total_overtime\", label: \"Total Overtime\" },\n    { path: \"total_pension_contribution\", label: \"Total Pension Contribution\" },\n    { path: \"total_salary\", label: \"Total Salary\" },\n    { path: \"total_transport_allowance\", label: \"Total Transport Allowance\" },\n    { path: \"status\", label: \"Status\" },\n\n    {\n      key: \"view\",\n      content: (payrollProcess) => (\n        <>\n          <Button\n            className=\"m-1\"\n            size=\"sm\"\n            outline\n            color=\"info\"\n            onClick={() => {\n              _toggle(\n                {\n                  type: \"VIEW\",\n                  Component: PayrollProcessAdd,\n                  data: payrollProcess,\n                  title: \"View Payroll\",\n                },\n                dispatch\n              );\n            }}\n          >\n            <MdRemoveRedEye />\n          </Button>\n          {payrollProcess.status === statusTypes.SAVED && (\n            <Button\n              className=\"m-1\"\n              size=\"sm\"\n              outline\n              color=\"success\"\n              onClick={() => {\n                _toggle(\n                  {\n                    type: \"POST\",\n                    submit: postPayrollProcess,\n                    submitButtonLabel: \"Post\",\n                    data: payrollProcess,\n                    title: \"Post\",\n                  },\n                  dispatch\n                );\n              }}\n            >\n              <MdLocalPostOffice /> Post\n            </Button>\n          )}\n        </>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    if (doneAdd || doneEdit || donePatch) {\n      _toggle({ type: \"CLOSE\" }, dispatch);\n    }\n  }, [doneAdd, doneEdit, donePatch]);\n\n  console.log(\"payrollProcesss\", payrollProcesss);\n\n  return (\n    <div>\n      <Page>\n        <CommonModals\n          data={state.data}\n          openModal={state.openModal}\n          component={state.Component}\n          toggle={_toggle}\n          dispatch={dispatch}\n          title={state.title}\n        />\n        <Col align=\"right\" className=\"mb-1 pl-3 pr-3\">\n          {/* {!_.isEmpty(payrollProcesss) && (\n            <Button\n              onClick={() => {\n                _toggle(\n                  {\n                    type: \"DELETE\",\n                    deleteOptions: {\n                      okCallback: okSave,\n                      title: \"Are you sure?\",\n                      message: \"\",\n                    },\n                  },\n                  dispatch\n                );\n              }}\n              outline\n              size=\"sm\"\n              disabled={saveAddStatus === \"pending\"}\n            >\n              {saveAddStatus === \"pending\" ? <LoadingSpinner /> : \"Save\"}\n            </Button>\n          )} */}\n        </Col>\n\n        <Card className=\"border-0\">\n          <CardBody>\n            <CustomTable\n              title=\"Saved Payroll Process\"\n              columns={columns}\n              data={payrollProcesss}\n            />\n          </CardBody>\n        </Card>\n      </Page>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport PayrollProcess from \"./PayrollProcess\";\nimport {\n  selectFetchStatus,\n  selectAddStatus,\n  selectSavePayrollProcesss,\n  Fetch,\n  Add,\n  selectEditStatus,\n  Edit,\n  selectDeleteStatus,\n  Remove,\n  selectPatchStatus,\n  Patch,\n} from \"store/HR/PayrollManagement/SavePayrollProcess\";\nimport {} from \"store/HR/PayrollManagement/SavePayrollProcess\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { reduxStatus } from \"constants/reduxStatus\";\nimport { SearchContext, MainContext } from \"context/\";\nimport {\n  assignFilterComponent,\n  setLockComponent,\n} from \"context/Main/States/search\";\nimport { FilterByName } from \"helpers/Filter\";\nimport { Input } from \"reactstrap\";\nimport { startOfMonth, endOfMonth } from \"helpers/date\";\nimport statusTypes from \"config/statusTypes\";\n\nconst Loader = ({\n  fetchStatus,\n  addStatus,\n  patchStatus,\n  fetchPayrollProcesss,\n  addPayrollProcess,\n  editStatus,\n  editPayrollProcess,\n  deleteStatus,\n  deletePayrollProcess,\n  payrollProcesss,\n  saveAddStatus,\n  patchPayrollProcess,\n}) => {\n  const [data, setData] = useState([]);\n  const [fetchLock, setFetchLock] = useState(true);\n  const [addLock, setAddLock] = useState(true);\n  const [editLock, setEditLock] = useState(true);\n  const [deleteLock, setDeleteLock] = useState(true);\n  const [patchLock, setPatchLock] = useState(true);\n  const [filterType] = useState(\"name\");\n\n  const { searchValue } = useContext(SearchContext);\n  const { dispatch } = useContext(MainContext);\n\n  const [startDate, setStartDate] = useState(startOfMonth);\n  const [endDate, setEndDate] = useState(endOfMonth);\n\n  useEffect(() => {\n    setData(payrollProcesss);\n  }, [payrollProcesss, setData]);\n\n  // Filtering component by document_number and posting date\n  const FilterTypes = () => {\n    const [start, setStart] = useState(startOfMonth);\n    const [end, setEnd] = useState(endOfMonth);\n\n    useEffect(() => setStartDate(start), [start, setStartDate]);\n    useEffect(() => setEndDate(end), [end, setEndDate]);\n\n    return (\n      <>\n        Start Date{\" \"}\n        <Input\n          type=\"date\"\n          value={start}\n          onChange={({ currentTarget: { value } }) => setStart(value)}\n        />\n        End Date\n        <Input\n          type=\"date\"\n          value={end}\n          onChange={({ currentTarget: { value } }) => setEnd(value)}\n        />\n      </>\n    );\n  };\n\n  useEffect(() => {\n    setLockComponent({}, dispatch, false);\n    assignFilterComponent({}, dispatch, FilterTypes);\n  }, [dispatch]);\n\n  useEffect(() => {\n    setData(FilterByName(payrollProcesss, filterType, searchValue));\n  }, [searchValue, setData, filterType]);\n\n  useEffect(() => {\n    setFetchLock(false);\n    fetchPayrollProcesss([\n      { key: \"from_date\", value: startDate },\n      { key: \"to_date\", value: endDate },\n    ]);\n  }, [fetchPayrollProcesss, setFetchLock, startDate, endDate]);\n\n  useEffect(() => {\n    const { status } = fetchStatus;\n    if (status === reduxStatus.failure && !fetchLock) {\n      setFetchLock(true);\n    }\n  }, [fetchStatus, setFetchLock]);\n\n  useEffect(() => {\n    const { status } = addStatus;\n    if (status === reduxStatus.failure && !addLock) {\n      setAddLock(true);\n    } else if (status === reduxStatus.success && !addLock) {\n      toast.success(\"Added PayrollProcess\");\n      setAddLock(true);\n    }\n  }, [addStatus, setAddLock]);\n\n  useEffect(() => {\n    const { status, response } = patchStatus;\n    if (status === reduxStatus.failure && !patchLock) {\n      setPatchLock(true);\n    } else if (status === reduxStatus.success && !patchLock) {\n      if (response.status === statusTypes.POSTED) {\n        toast.success(`Payroll ${response.status}`);\n        setPatchLock(true);\n      } else if (response.status === statusTypes.OPEN_SIV) {\n        toast.success(\"Payroll Approved\");\n        setPatchLock(true);\n      } else if (response.status === statusTypes.REJECTED) {\n        toast.success(\"Payroll Rejected\");\n        setPatchLock(true);\n      }\n      setPatchLock(true);\n    }\n  }, [patchStatus, setPatchLock]);\n\n  useEffect(() => {\n    const { status } = editStatus;\n    if (status === reduxStatus.failure && !editLock) {\n      setEditLock(true);\n    } else if (status === reduxStatus.success && !editLock) {\n      toast.success(\"Edited PayrollProcess\");\n      setEditLock(true);\n    }\n  }, [editStatus, setEditLock]);\n\n  useEffect(() => {\n    const { status } = deleteStatus;\n    if (status === reduxStatus.failure && !deleteLock) {\n      setDeleteLock(true);\n    } else if (status === reduxStatus.success && !deleteLock) {\n      toast.success(\"Deleted PayrollProcess\");\n      setDeleteLock(true);\n    }\n  }, [deleteStatus, setDeleteLock]);\n\n  const _addPayrollProcess = (data) => {\n    setAddLock(false);\n    addPayrollProcess(data);\n  };\n\n  const _editPayrollProcess = (data) => {\n    setEditLock(false);\n\n    editPayrollProcess(data);\n  };\n\n  const _deletePayrollProcess = (id) => {\n    setDeleteLock(false);\n    deletePayrollProcess(id);\n  };\n\n  const _postPayrollProcess = (data) => {\n    console.log(data, \"payroll_data\");\n    setPatchLock(false);\n    const requestBody = {\n      id: data.id,\n      posting_date: data.posting_date,\n      status: statusTypes.POSTED,\n    };\n\n    patchPayrollProcess(requestBody);\n  };\n\n  const _savePayrollProcess = (data) => {\n    setAddLock(false);\n    // // const requestBody = data.map((d) => ({ ...d, employee: d.employee.id }));\n    // let requestBody = { ...data };\n    // requestBody.payroll_lines = requestBody.payroll_lines.map((l) => ({\n    //   ...l,\n    //   employee: l.employee.id,\n    // }));\n    // console.log(\"request body\", requestBody);\n    // savePayrollProcess(requestBody);\n  };\n\n  return (\n    <PayrollProcess\n      doneAdd={addStatus.status === reduxStatus.success && !addLock}\n      addPayrollProcess={_addPayrollProcess}\n      doneEdit={editStatus.status === reduxStatus.success && !editLock}\n      editPayrollProcess={_editPayrollProcess}\n      doneDelete={deleteStatus.status === reduxStatus.success && !deleteLock}\n      donePatch={patchStatus.status === reduxStatus.success && !patchLock}\n      deletePayrollProcess={_deletePayrollProcess}\n      payrollProcesss={data}\n      savePayrollProcess={_savePayrollProcess}\n      postPayrollProcess={_postPayrollProcess}\n    />\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  fetchStatus: selectFetchStatus(state),\n  addStatus: selectAddStatus(state),\n  editStatus: selectEditStatus(state),\n  patchStatus: selectPatchStatus(state),\n  deleteStatus: selectDeleteStatus(state),\n  payrollProcesss: selectSavePayrollProcesss(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchPayrollProcesss: (data) => dispatch(Fetch()),\n  addPayrollProcess: (data) => dispatch(Add(data)),\n  editPayrollProcess: (data) => dispatch(Edit(data)),\n  deletePayrollProcess: (id) => dispatch(Remove(id)),\n  patchPayrollProcess: (data) => dispatch(Patch(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loader);\n","// import React, { useEffect, useReducer } from \"react\";\n// import Page from \"../../../../components/Page\";\n// import { Card, CardBody, CardHeader, Button, Col } from \"reactstrap\";\n// import CommonModals from \"../../../../components/CommonModal\";\n// import { _toggle, initialState, reducer } from \"pages/common/ModalOptions\";\n// import { MdRemoveRedEye, MdLocalPostOffice } from \"react-icons/md\";\n// import CustomTable from \"pages/common/table\";\n// import LoadingSpinner from \"components/PageSpinner\";\n// import PayrollProcessAdd from \"./PayrollProcessAdd\";\n// import _ from \"lodash\";\n// import statusTypes from \"../../../../config/statusTypes\";\n\n// export default function PayrollProcess({\n//   payrollProcesss,\n//   doneAdd,\n//   doneEdit,\n//   savePayrollProcess,\n//   saveAddStatus,\n//   postPayrollProcess,\n// }) {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n//   const columns = [\n//     { path: \"from_date\", label: \"From Date\" },\n//     { path: \"to_date\", label: \"To Date\" },\n//     { path: \"total_employee_pension\", label: \"Total Employee Pension\" },\n//     { path: \"total_loan\", label: \"Total Loan\" },\n//     { path: \"total_local_sales\", label: \"Total Local Sales\" },\n//     { path: \"total_overtime\", label: \"Total Overtime\" },\n//     { path: \"total_pension_contribution\", label: \"Total Pension Contribution\" },\n//     { path: \"total_salary\", label: \"Total Salary\" },\n//     { path: \"total_transport_allowance\", label: \"Total Transport Allowance\" },\n//     { path: \"status\", label: \"Status\" },\n\n//     {\n//       key: \"view\",\n//       content: (payrollProcess) => (\n//         <>\n//           <Button\n//             className=\"m-1\"\n//             size=\"sm\"\n//             outline\n//             color=\"info\"\n//             onClick={() => {\n//               _toggle(\n//                 {\n//                   type: \"VIEW\",\n//                   Component: PayrollProcessAdd,\n//                   data: payrollProcess,\n//                   title: \"View Payroll\",\n//                 },\n//                 dispatch\n//               );\n//             }}\n//           >\n//             <MdRemoveRedEye />\n//           </Button>\n//           {payrollProcess.status === statusTypes.SAVED && (\n//             <Button\n//               className=\"m-1\"\n//               size=\"sm\"\n//               outline\n//               color=\"success\"\n//               onClick={() => {\n//                 _toggle(\n//                   {\n//                     type: \"POST\",\n//                     submit: postPayrollProcess,\n//                     submitButtonLabel: \"Post\",\n//                     data: payrollProcess,\n//                     title: \"Post\",\n//                   },\n//                   dispatch\n//                 );\n//               }}\n//             >\n//               <MdLocalPostOffice /> Post\n//             </Button>\n//           )}\n//         </>\n//       ),\n//     },\n//   ];\n\n//   useEffect(() => {\n//     if (doneAdd || doneEdit) {\n//       _toggle({ type: \"CLOSE\" }, dispatch);\n//     }\n//   }, [doneAdd, doneEdit]);\n\n//   const okSave = () => {\n//     savePayrollProcess(payrollProcesss);\n//   };\n\n//   console.log(\"payrollProcesss\", payrollProcesss);\n\n//   return (\n//     <div>\n//       <Page>\n//         <CommonModals\n//           data={state.data}\n//           openModal={state.openModal}\n//           component={state.Component}\n//           toggle={_toggle}\n//           dispatch={dispatch}\n//           title={state.title}\n//         />\n//         <Col align=\"right\" className=\"mb-1 pl-3 pr-3\">\n//           {!_.isEmpty(payrollProcesss) && (\n//             <Button\n//               onClick={() => {\n//                 _toggle(\n//                   {\n//                     type: \"DELETE\",\n//                     deleteOptions: {\n//                       okCallback: okSave,\n//                       title: \"Are you sure?\",\n//                       message: \"\",\n//                     },\n//                   },\n//                   dispatch\n//                 );\n//               }}\n//               outline\n//               size=\"sm\"\n//               disabled={saveAddStatus === \"pending\"}\n//             >\n//               {saveAddStatus === \"pending\" ? <LoadingSpinner /> : \"Save\"}\n//             </Button>\n//           )}\n//         </Col>\n\n//         <Card className=\"border-0\">\n//           <Col md={12} sm={12} xs={12}>\n//             <CardHeader className=\"border-0\"> Payroll Process</CardHeader>\n//           </Col>\n//           <CardBody>\n//             {!_.isEmpty(payrollProcesss) && (\n//               <CustomTable columns={columns} data={[payrollProcesss]} />\n//             )}\n//           </CardBody>\n//         </Card>\n//       </Page>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport PayrollProcessPage from \"./PayrollProcessPage/index\";\nimport SavedPayrollProcess from \"./SavedPayrollProcess/index\";\nimport Page from \"../../../../components/Page\";\n\nconst PayrollProcess = () => {\n  const [activeTab, setActiveTab] = useState(\"1\");\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  return (\n    <div>\n      <Page>\n        <Nav tabs className=\"mb-2\">\n          <NavItem>\n            <NavLink\n              className={\n                activeTab === \"1\" ? \"activepageTabBlue\" : \"notactivePageTabBlue\"\n              }\n              onClick={() => {\n                toggle(\"1\");\n              }}\n            >\n              Payroll Process\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={\n                activeTab === \"2\" ? \"activepageTabBlue\" : \"notactivePageTabBlue\"\n              }\n              onClick={() => {\n                toggle(\"2\");\n              }}\n            >\n              Saved Process\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId=\"1\">\n            {activeTab === \"1\" ? (\n              <Row>\n                <Col>\n                  <PayrollProcessPage />\n                </Col>\n              </Row>\n            ) : null}\n          </TabPane>\n          <TabPane tabId=\"2\">\n            {activeTab === \"2\" ? (\n              <Row>\n                <Col>\n                  <SavedPayrollProcess />\n                </Col>\n              </Row>\n            ) : null}\n          </TabPane>\n        </TabContent>\n      </Page>\n    </div>\n  );\n};\n\nexport default PayrollProcess;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport PayrollProcess from \"./PayrollProcess\";\nimport {\n  selectFetchStatus,\n  selectAddStatus,\n  selectPayrollProcesss,\n  Fetch,\n  Add,\n  selectEditStatus,\n  Edit,\n  selectDeleteStatus,\n  Remove,\n} from \"store/HR/PayrollManagement/PayrollProcess\";\nimport {\n  Add as SavePayrollProcess,\n  selectPatchStatus,\n  Patch,\n  selectAddStatus as selectSavePayrollProcesssAddStatus,\n} from \"store/HR/PayrollManagement/SavePayrollProcess\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { reduxStatus } from \"constants/reduxStatus\";\nimport { SearchContext, MainContext } from \"context/\";\nimport {\n  assignFilterComponent,\n  setLockComponent,\n} from \"context/Main/States/search\";\nimport { FilterByName } from \"helpers/Filter\";\nimport { Input } from \"reactstrap\";\nimport { startOfMonth, endOfMonth } from \"helpers/date\";\nimport statusTypes from \"../../../../config/statusTypes\";\n\nconst Loader = ({\n  fetchStatus,\n  addStatus,\n  patchStatus,\n  fetchPayrollProcesss,\n  addPayrollProcess,\n  editStatus,\n  editPayrollProcess,\n  deleteStatus,\n  deletePayrollProcess,\n  payrollProcesss,\n  savePayrollProcess,\n  saveAddStatus,\n  patchPayrollProcess,\n}) => {\n  const [data, setData] = useState([]);\n  const [fetchLock, setFetchLock] = useState(true);\n  const [addLock, setAddLock] = useState(true);\n  const [editLock, setEditLock] = useState(true);\n  const [deleteLock, setDeleteLock] = useState(true);\n  const [patchLock, setPatchLock] = useState(true);\n  const [filterType] = useState(\"name\");\n\n  const { searchValue } = useContext(SearchContext);\n  const { dispatch } = useContext(MainContext);\n\n  const [startDate, setStartDate] = useState(startOfMonth);\n  const [endDate, setEndDate] = useState(endOfMonth);\n\n  useEffect(() => {\n    setData(payrollProcesss);\n  }, [payrollProcesss, setData]);\n\n  // Filtering component by document_number and posting date\n  const FilterTypes = () => {\n    const [start, setStart] = useState(startOfMonth);\n    const [end, setEnd] = useState(endOfMonth);\n\n    useEffect(() => setStartDate(start), [start, setStartDate]);\n    useEffect(() => setEndDate(end), [end, setEndDate]);\n\n    return (\n      <>\n        Start Date{\" \"}\n        <Input\n          type=\"date\"\n          value={start}\n          onChange={({ currentTarget: { value } }) => setStart(value)}\n        />\n        End Date\n        <Input\n          type=\"date\"\n          value={end}\n          onChange={({ currentTarget: { value } }) => setEnd(value)}\n        />\n      </>\n    );\n  };\n\n  useEffect(() => {\n    setLockComponent({}, dispatch, false);\n    assignFilterComponent({}, dispatch, FilterTypes);\n  }, [dispatch]);\n\n  useEffect(() => {\n    setData(FilterByName(payrollProcesss, filterType, searchValue));\n  }, [searchValue, setData, filterType]);\n\n  useEffect(() => {\n    setFetchLock(false);\n    fetchPayrollProcesss([\n      { key: \"from_date\", value: startDate },\n      { key: \"to_date\", value: endDate },\n    ]);\n  }, [fetchPayrollProcesss, setFetchLock, startDate, endDate]);\n\n  useEffect(() => {\n    const { status } = fetchStatus;\n    if (status === reduxStatus.failure && !fetchLock) {\n      setFetchLock(true);\n    }\n  }, [fetchStatus, setFetchLock]);\n\n  useEffect(() => {\n    const { status } = addStatus;\n    if (status === reduxStatus.failure && !addLock) {\n      setAddLock(true);\n    } else if (status === reduxStatus.success && !addLock) {\n      toast.success(\"Added PayrollProcess\");\n      setAddLock(true);\n    }\n  }, [addStatus, setAddLock]);\n\n  useEffect(() => {\n    const { status, response } = saveAddStatus;\n    console.log(response, \"saved\");\n    if (status === reduxStatus.failure && !addLock) {\n      setAddLock(true);\n    } else if (status === reduxStatus.success && !addLock) {\n      toast.success(\"Saved!\");\n      if (response) {\n        const newPayrollProcess = {\n          ...payrollProcesss,\n          status: response.status,\n          id: response.id,\n        };\n        setData(newPayrollProcess);\n      }\n      setAddLock(true);\n    }\n  }, [saveAddStatus, setAddLock]);\n\n  useEffect(() => {\n    const { status, response } = patchStatus;\n    if (status === reduxStatus.failure && !patchLock) {\n      setPatchLock(true);\n    } else if (status === reduxStatus.success && !patchLock) {\n      if (response.status === statusTypes.POSTED) {\n        toast.success(`Good Receiving Note ${response.status}`);\n        setPatchLock(true);\n      } else if (response.status === statusTypes.OPEN_SIV) {\n        toast.success(\"Good Receiving Note Approved\");\n        setPatchLock(true);\n      } else if (response.status === statusTypes.REJECTED) {\n        toast.success(\"Good Receiving Note Rejected\");\n        setPatchLock(true);\n      }\n      setPatchLock(true);\n    }\n  }, [patchStatus, setPatchLock]);\n\n  useEffect(() => {\n    const { status } = editStatus;\n    if (status === reduxStatus.failure && !editLock) {\n      setEditLock(true);\n    } else if (status === reduxStatus.success && !editLock) {\n      toast.success(\"Edited PayrollProcess\");\n      setEditLock(true);\n    }\n  }, [editStatus, setEditLock]);\n\n  useEffect(() => {\n    const { status } = deleteStatus;\n    if (status === reduxStatus.failure && !deleteLock) {\n      setDeleteLock(true);\n    } else if (status === reduxStatus.success && !deleteLock) {\n      toast.success(\"Deleted PayrollProcess\");\n      setDeleteLock(true);\n    }\n  }, [deleteStatus, setDeleteLock]);\n\n  const _addPayrollProcess = (data) => {\n    setAddLock(false);\n    addPayrollProcess(data);\n  };\n\n  const _editPayrollProcess = (data) => {\n    setEditLock(false);\n\n    editPayrollProcess(data);\n  };\n\n  const _deletePayrollProcess = (id) => {\n    setDeleteLock(false);\n    deletePayrollProcess(id);\n  };\n\n  const _postPayrollProcess = (data) => {\n    console.log(data, \"payroll_data\");\n    setPatchLock(false);\n    const requestBody = {\n      id: data.id,\n      posting_date: data.posting_date,\n      status: statusTypes.POSTED,\n    };\n\n    patchPayrollProcess(requestBody);\n  };\n\n  const _savePayrollProcess = (data) => {\n    setAddLock(false);\n    // const requestBody = data.map((d) => ({ ...d, employee: d.employee.id }));\n    let requestBody = { ...data };\n    requestBody.payroll_lines = requestBody.payroll_lines.map((l) => ({\n      ...l,\n      employee: l.employee.id,\n    }));\n    console.log(\"request body\", requestBody);\n    savePayrollProcess(requestBody);\n  };\n\n  return (\n    <PayrollProcess\n      doneAdd={addStatus.status === reduxStatus.success && !addLock}\n      addPayrollProcess={_addPayrollProcess}\n      doneEdit={editStatus.status === reduxStatus.success && !editLock}\n      editPayrollProcess={_editPayrollProcess}\n      doneDelete={deleteStatus.status === reduxStatus.success && !deleteLock}\n      deletePayrollProcess={_deletePayrollProcess}\n      payrollProcesss={data}\n      savePayrollProcess={_savePayrollProcess}\n      saveAddStatus={saveAddStatus.status}\n      postPayrollProcess={_postPayrollProcess}\n    />\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  fetchStatus: selectFetchStatus(state),\n  addStatus: selectAddStatus(state),\n  editStatus: selectEditStatus(state),\n  patchStatus: selectPatchStatus(state),\n  deleteStatus: selectDeleteStatus(state),\n  payrollProcesss: selectPayrollProcesss(state),\n  saveAddStatus: selectSavePayrollProcesssAddStatus(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchPayrollProcesss: (data) => dispatch(Fetch(data)),\n  addPayrollProcess: (data) => dispatch(Add(data)),\n  editPayrollProcess: (data) => dispatch(Edit(data)),\n  deletePayrollProcess: (id) => dispatch(Remove(id)),\n  savePayrollProcess: (data) => dispatch(SavePayrollProcess(data)),\n  patchPayrollProcess: (data) => dispatch(Patch(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loader);\n"],"sourceRoot":""}