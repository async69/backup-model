{"version":3,"sources":["pages/common/tableHeader.jsx","helpers/number.js","pages/common/tableBody.jsx","pages/common/TableFooter.jsx","pages/common/table.jsx","context/Main/States/Pagination.jsx","helpers/Filter/index.js","helpers/reverse.js","pages/common/InLineEditableTable/reducer.jsx","pages/common/InLineEditableTable/main.jsx","pages/common/InLineEditableTable/render.jsx","pages/common/InLineEditableTable/index.jsx","context/Main/States/Department.jsx","pages/SalesManagement/MasterData/Customers/config.jsx","pages/SalesManagement/MasterData/Customers/CustomerForm.jsx","pages/SalesManagement/MasterData/Customers/Customer.jsx","pages/SalesManagement/MasterData/Customers/index.jsx"],"names":["TableHeader","react_default","a","createElement","this","props","columns","map","column","key","path","label","Component","maskRegex","notMaskRegex","getIndex","mask","search","processValue","value","maskObj","options","isNegative","valObj","sign","Number","toFixed","fraction","length","toString","posTrailZero","lastIndexOf","_valObj$value$split","split","_valObj$value$split2","Object","slicedToArray","_valObj$value$split2$","valInteger","_valObj$value$split2$2","valFraction","replace","integer","result","szSep","separator","maskInteger","join","posLeadZero","indexOf","posSeparator","len","offset","indx","charAt","decimal","addSeparators","maskHasPositiveSign","enforceMaskSign","maskHasNegativeSign","number","arguments","undefined","isNaN","start","prefix","substring","end","reverse","substr","suffix","match","processMask","TableBody","renderCell","item","loading","console","log","content","_","get","numberIndex","numberTypes","findIndex","type","String","dateTypes","getFormattedDate","getFormattedNumber","createKey","_id","_this2","_this$props","data","id","TableFooter","_useContext","useContext","MainContext","rootState","dispatch","_useState","useState","_useState2","setOffset","_useState3","_useState4","pageLimit","setPageLimit","_useState5","_useState6","maxLimit","setMaxLimit","_useState7","_useState8","numberOfPages","setNumberOfPages","_useState9","_useState10","lock","setLock","_useState11","_useState12","clicked","setClicked","_useState13","count","results","_useState14","buffer","setBuffer","_useState15","_useState16","setCount","_useState17","_useState18","openTab","setOpenTab","useEffect","getPageLimit","Math","ceil","fetchedCount","_getState","getState","amount","activeTab","warn","e","handleChange","limit","setPageOptions","onClick","Pagination","className","size","color","PaginationItem","disabled","PaginationLink","first","href","previous","Array","fill","idx","active","floor","next","last","connect","state","ownProps","objectSpread","_ref","title","getLoading","isPatch","Card","CardHeader","es_Table","responsive","striped","tableHeader","tableBody","common_TableFooter","__webpack_require__","d","__webpack_exports__","setPageValues","_reducer__WEBPACK_IMPORTED_MODULE_0__","constants","UPDATE","stateName","payload","err","FilterByName","FilterByDate","FilterByProperty","tag","searchValue","fullScan","filteredData","filter","identifier","RegExp","error","concat","startDate","endDate","dateItem","Date","getTime","dateStart","dateEnd","arrayTag","index","prop","statusTypes","initialState","addCount","status","hasEdit","hasDelete","_data","reducer","action","addLine","uuid","random","populateLine","obj","returnObj","DisplayTable","schema","callback","fetchedData","setFetchedData","formStatus","setFormStatus","displayValues","setDisplay","defaultValues","setDefaultValues","found","find","_item","formData","setForm","validationData","setValidation","completed","setCompleted","generalOptions","setGeneralOptions","forEach","populateData","Joi","validate","abortEarly","values","_ref2","_ref2$currentTarget","currentTarget","name","defineProperty","setOptions","updatedOptions","keys","setValue","updates","_ref3","formUpdates","defaultValue","Table","Boolean","isView","dataItem","noEdit","Input","onChange","_ref4","_ref4$currentTarget","optionsFrom","_ref5","_ref5$currentTarget","returnName","Button","outline","cancelCallback","index_esm","Fragment","deleteCallback","InlineTable","lineTag","startForm","_useReducer","useReducer","_useReducer2","dataAllocated","setAllocated","Col","align","main_DisplayTable","assign","reducer_reducer","render_InlineTable","setDepartment","setPermissions","defaultPermissions","department","permissions","create","read","update","delete","addressSaveLineTag","contactSaveLineTag","mainSchema","_mainSchema","string","allow","optional","tin_number","currency","required","customer_posting_group","vat_posting_group","credit_limit","remarks","array","items","object","min","lineCounter","errors","addressLineMapper","line","country","country_id","region","region_id","city","p_o_box","is_head_office","office_telephone_number","contactLineMapper","mobile_phone_number","email","addressLineSchema","any","contactLineSchema","CustomerForm","_this","classCallCheck","_super","call","doSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","submit","stop","JSON","parse","stringify","populateState","bind","assertThisInitialized","updateAddressLines","updateContactLines","lineMapper","componentDidUpdate","isEdit","newData","document_number","setState","lockUpdate","lines","_this$props$options","postingGroups","currencies","vatPostingGroups","CardBody","Form","onSubmit","handleSubmit","Row","md","sm","xs","renderInput","renderSelect","InLineEditableTable","countries","regions","cities","isAdd","renderButton","ReusabelForm","Customer","customers","addCustomer","editCustomer","deleteCustomer","doneAdd","doneEdit","customer","_toggle","deleteOptions","okCallback","okDelete","message","Page","CommonModal","openModal","component","toggle","table","cic","fetchStatus","selectFetchStatus","addStatus","selectAddStatus","selectCustomers","editStatus","selectEditStatus","deleteStatus","selectDeleteStatus","selectCustomerPostingGroups","selectVATPostingGroups","selectCurrencies","selectCountries","selectRegions","selectCities","companyID","selectCompany","fetchCustomers","Fetch","Add","Edit","Remove","setData","fetchLock","setFetchLock","addLock","setAddLock","editLock","setEditLock","deleteLock","setDeleteLock","filterType","setFilterType","_getState$options","FilterTypes","selectedFilter","setFilter","setLockComponent","assignFilterComponent","SearchContext","country_name","region_name","response","reduxStatus","failure","toast","success","Customers_Customer","_requestBody","requestBody","company","_requestBody2","doneDelete"],"mappings":"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","file":"static/js/59.8b32a58d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n// columns: array\n// sortColumn: object\n// onSort: function\nclass TableHeader extends Component {\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((column) => (\n            <th key={column.path || column.key}>{column.label}</th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","const maskRegex = /[0-9\\-+#]/;\nconst notMaskRegex = /[^\\d\\-+#]/g;\n\nfunction getIndex(mask) {\n  return mask.search(maskRegex);\n}\n\nfunction processMask(mask = \"#.##\") {\n  const maskObj = {};\n  const len = mask.length;\n  const start = getIndex(mask);\n  maskObj.prefix = start > 0 ? mask.substring(0, start) : \"\";\n\n  // Reverse string: not an ideal method if there are surrogate pairs\n  const end = getIndex(mask.split(\"\").reverse().join(\"\"));\n  const offset = len - end;\n  const substr = mask.substring(offset, offset + 1);\n  // Add 1 to offset if mask has a trailing decimal/comma\n  const indx = offset + (substr === \".\" || substr === \",\" ? 1 : 0);\n  maskObj.suffix = end > 0 ? mask.substring(indx, len) : \"\";\n\n  maskObj.mask = mask.substring(start, indx);\n  maskObj.maskHasNegativeSign = maskObj.mask.charAt(0) === \"-\";\n  maskObj.maskHasPositiveSign = maskObj.mask.charAt(0) === \"+\";\n\n  // Search for group separator & decimal; anything not digit,\n  // not +/- sign, and not #\n  let result = maskObj.mask.match(notMaskRegex);\n  // Treat the right most symbol as decimal\n  maskObj.decimal = (result && result[result.length - 1]) || \".\";\n  // Treat the left most symbol as group separator\n  maskObj.separator = (result && result[1] && result[0]) || \",\";\n\n  // Split the decimal for the format string if any\n  result = maskObj.mask.split(maskObj.decimal);\n  maskObj.integer = result[0];\n  maskObj.fraction = result[1];\n  return maskObj;\n}\n\nfunction processValue(value, maskObj, options) {\n  let isNegative = false;\n  const valObj = {\n    value,\n  };\n  if (value < 0) {\n    isNegative = true;\n    // Process only abs(), and turn on flag.\n    valObj.value = -valObj.value;\n  }\n\n  valObj.sign = isNegative ? \"-\" : \"\";\n\n  // Fix the decimal first, toFixed will auto fill trailing zero.\n  valObj.value = Number(valObj.value).toFixed(\n    maskObj.fraction && maskObj.fraction.length\n  );\n  // Convert number to string to trim off *all* trailing decimal zero(es)\n  valObj.value = Number(valObj.value).toString();\n\n  // Fill back any trailing zero according to format\n  // look for last zero in format\n  const posTrailZero = maskObj.fraction && maskObj.fraction.lastIndexOf(\"0\");\n  let [valInteger = \"0\", valFraction = \"\"] = valObj.value.split(\".\");\n  if (!valFraction || (valFraction && valFraction.length <= posTrailZero)) {\n    valFraction =\n      posTrailZero < 0\n        ? \"\"\n        : Number(\"0.\" + valFraction)\n            .toFixed(posTrailZero + 1)\n            .replace(\"0.\", \"\");\n  }\n\n  valObj.integer = valInteger;\n  valObj.fraction = valFraction;\n  addSeparators(valObj, maskObj);\n\n  // Remove negative sign if result is zero\n  if (valObj.result === \"0\" || valObj.result === \"\") {\n    // Remove negative sign if result is zero\n    isNegative = false;\n    valObj.sign = \"\";\n  }\n\n  if (!isNegative && maskObj.maskHasPositiveSign) {\n    valObj.sign = \"+\";\n  } else if (isNegative && maskObj.maskHasPositiveSign) {\n    valObj.sign = \"-\";\n  } else if (isNegative) {\n    valObj.sign =\n      options && options.enforceMaskSign && !maskObj.maskHasNegativeSign\n        ? \"\"\n        : \"-\";\n  }\n\n  return valObj;\n}\n\nfunction addSeparators(valObj, maskObj) {\n  valObj.result = \"\";\n  // Look for separator\n  const szSep = maskObj.integer.split(maskObj.separator);\n  // Join back without separator for counting the pos of any leading 0\n  const maskInteger = szSep.join(\"\");\n\n  const posLeadZero = maskInteger && maskInteger.indexOf(\"0\");\n  if (posLeadZero > -1) {\n    while (valObj.integer.length < maskInteger.length - posLeadZero) {\n      valObj.integer = \"0\" + valObj.integer;\n    }\n  } else if (Number(valObj.integer) === 0) {\n    valObj.integer = \"\";\n  }\n\n  // Process the first group separator from decimal (.) only, the rest ignore.\n  // get the length of the last slice of split result.\n  const posSeparator = szSep[1] && szSep[szSep.length - 1].length;\n  if (posSeparator) {\n    const len = valObj.integer.length;\n    const offset = len % posSeparator;\n    for (let indx = 0; indx < len; indx++) {\n      valObj.result += valObj.integer.charAt(indx);\n      // -posSeparator so that won't trail separator on full length\n      if (!((indx - offset + 1) % posSeparator) && indx < len - posSeparator) {\n        valObj.result += maskObj.separator;\n      }\n    }\n  } else {\n    valObj.result = valObj.integer;\n  }\n\n  valObj.result +=\n    maskObj.fraction && valObj.fraction\n      ? maskObj.decimal + valObj.fraction\n      : \"\";\n  return valObj;\n}\n\nexport default (mask, value, options = {}) => {\n  if (!mask || isNaN(Number(value))) {\n    // Invalid inputs\n    return value;\n  }\n\n  const maskObj = processMask(mask);\n  const valObj = processValue(value, maskObj, options);\n  return maskObj.prefix + valObj.sign + valObj.result + maskObj.suffix;\n};\n","import React, { Component } from \"react\";\nimport _ from \"lodash\"; // for nesting property\nimport { getFormattedDate } from \"helpers/date\";\nimport getFormattedNumber from \"helpers/number\";\nimport numberTypes from \"static/data/helpers/numberTypes.json\";\nimport dateTypes from \"static/data/helpers/dateTypes.json\";\n\nclass TableBody extends Component {\n  //for nested s\n  renderCell = (item, column, loading) => {\n    console.log(\"loaded\", loading)\n    if (column.content) return column.content(item, loading);\n    const result = _.get(item, column.path);\n    const numberIndex = numberTypes.findIndex(\n      (type) => type === String(column.path)\n    );\n    const index = dateTypes.findIndex((type) => type === String(column.path));\n    if (index >= 0) {\n      const date = getFormattedDate(result);\n      return date\n    } else if (numberIndex >= 0) {\n      return getFormattedNumber(\"#,###.00\", result, { enforceMaskSign: true });\n    } else {\n      return result? String(result) : \"\";\n    }\n  };\n\n  //for buttons\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item.id}>\n            {columns.map((column) => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column, this.props.loading)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;","import React, { useContext, useEffect, useState } from \"react\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport { MainContext } from \"../../context/Main/\";\nimport { getState, setPageOptions, getPageLimit } from \"../../context/Main/States/Pagination\";\n\nconst TableFooter = () => {\n  const { rootState, dispatch } = useContext(MainContext);\n  const [offset, setOffset] = useState(0);\n  const [pageLimit, setPageLimit] = useState(0);\n  const [maxLimit, setMaxLimit] = useState(0);\n  const [numberOfPages, setNumberOfPages] = useState(0);\n  const [lock, setLock] = useState(false);\n  const [clicked, setClicked] = useState(false);\n  const [buffer, setBuffer] = useState({ count: 0, results: [] });\n  const [count, setCount] = useState(0);\n  const [openTab, setOpenTab] = useState(\"\")\n\n  useEffect(() => {\n    const limit = getPageLimit(rootState)\n    if (typeof limit !== \"undefined\") {\n      if (pageLimit !== limit) {\n        // handleChange(offset, limit)\n      }\n    }\n  }, [rootState])\n\n  useEffect(() => {\n    const { count, results } = buffer\n    if (!(results.length === 0 && count === 0)) {\n      setNumberOfPages(Math.ceil(count / results.length));\n      setPageLimit(results.length);\n      setMaxLimit(count);\n      setLock(true);\n    }\n  }, [openTab, setNumberOfPages, setPageLimit, setMaxLimit, setLock])\n\n  useEffect(() => {\n    if (count) {\n      const { count: fetchedCount, results: data } = buffer;\n      if (pageLimit <= data.length) {\n        setNumberOfPages(Math.ceil(fetchedCount / data.length));\n        setPageLimit(data.length);\n        setMaxLimit(fetchedCount);\n        setLock(true);\n      }\n    }\n  }, [count, buffer]);\n\n  useEffect(() => {\n    try {\n      const { results, amount, activeTab } = getState(rootState);\n      activeTab !== \"\"? setOpenTab(activeTab) : console.warn(\"Pass active tab for paginations\")\n      if (amount !== count) {\n        if (typeof amount !== \"undefined\") {\n          setCount(amount);\n          setBuffer(results);\n        }\n      }\n      if (String(results) !== \"undefined\" && !lock) {\n        const { count, results: data } = results;\n        setNumberOfPages(Math.ceil(count / data.length));\n        setPageLimit(data.length);\n        setMaxLimit(count);\n        setLock(true);\n      }\n    } catch (e) {}\n  }, [rootState, setCount, setBuffer]);\n\n  const handleChange = (offset, limit = null) => {\n    if (!clicked) {\n      setClicked(true);\n    }\n    setOffset(offset);\n    if (limit) {\n      setPageLimit(limit)\n    }\n  };\n\n  useEffect(() => {\n    if (offset < maxLimit) {\n      if (clicked) {\n        setPageOptions({}, dispatch, {\n          offset,\n          limit: pageLimit,\n          onClick: clicked,\n        });\n      }  \n    }\n  }, [offset, pageLimit]);\n\n  return (\n    <div>\n      <Pagination className=\"pagination left\" size=\"md\" color=\"primary\">\n        <PaginationItem disabled={offset === 0}>\n          <PaginationLink first href=\"#\" onClick={() => handleChange(0)}>\n            First\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink\n            previous\n            disabled={offset === 0}\n            onClick={() => handleChange(offset - pageLimit)}\n          />\n        </PaginationItem>\n        {Array(numberOfPages)\n          .fill(\"\")\n          .map((_, idx) => (\n            <PaginationItem active={idx === Math.floor(offset / pageLimit)}>\n              <PaginationLink onClick={() => handleChange(idx * pageLimit)}>\n                {idx + 1}\n              </PaginationLink>\n            </PaginationItem>\n          ))}\n        <PaginationItem>\n          <PaginationLink\n            next\n            onClick={() => handleChange(offset + pageLimit)}\n            disabled={offset + pageLimit >= maxLimit}\n          />\n        </PaginationItem>\n        <PaginationItem disabled={offset + pageLimit >= maxLimit}>\n          <PaginationLink\n            last\n            onClick={() => handleChange((numberOfPages - 1) * pageLimit)}\n          >\n            Last\n          </PaginationLink>\n        </PaginationItem>\n      </Pagination>\n    </div>\n  );\n};\n\nexport default TableFooter;","import React, { useContext, useEffect } from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\nimport TableFooter from \"./TableFooter\";\nimport { Table as ReactstrapTable, CardHeader, Card } from \"reactstrap\";\nimport { MainContext } from \"../../context/Main/\";\nimport { connect } from \"react-redux\";\n\nconst Table = ({ columns, data, title, state, getLoading }) => {\n  let objectSet = {};\n  useEffect(() => {\n    if (typeof getLoading === \"function\") {\n      // const result = status(state)\n      console.log(\"result\", getLoading(state, { isPatch: true }));\n    }\n  }, [state, getLoading]);\n  const { rootState } = useContext(MainContext);\n\n  useEffect(() => {\n    try {\n      // setCurrenctTab(activeTab)\n    } catch (err) {}\n  }, [rootState]);\n\n  console.log(getLoading(state, { isPatch: true }))\n  return (\n    <Card className=\"p-2\">\n      <CardHeader className=\"tableHeaders border-0\">\n        <div>{\"\" + title ? title : \"\"}</div>\n      </CardHeader>\n      <ReactstrapTable size=\"md\" responsive striped>\n        <TableHeader columns={columns} />\n        <TableBody\n          data={data}\n          columns={columns}\n          loading={\n            typeof getLoading === \"fucntion\"\n              ? getLoading(state, { isPatch: true })\n              : {}\n          }\n        />\n        <TableFooter />\n      </ReactstrapTable>\n    </Card>\n  );\n};\nconst mapStateToProps = (state, ownProps) => ({ state, ...ownProps });\n\nexport default connect(mapStateToProps)(Table);\n","import { constants } from \"../reducer\";\n\nexport const stateName = \"page_values\";\n\nexport const getState = (rootState) => {\n  if (rootState[stateName]) {\n    return rootState[stateName];\n  } else {\n    return null;\n  }\n};\n\nexport const setPageValues = (\n  state,\n  dispatch,\n  results,\n  options = {},\n  activeTab = \"\"\n) => {\n  if (typeof results !== \"undefined\") {\n    if (results.count === 0) return null;\n    dispatch({\n      type: constants.UPDATE,\n      stateName,\n      payload: {\n        results,\n        options,\n        pageLimit: results.length ? Math.ceil(results.length / 5) * 5 : 5,\n        amount: getState(state) ? getState(state).amount + 1 : 0,\n        activeTab,\n      },\n    });\n  }\n};\n\nexport const setPageLimit = (state = {}, dispatch, pageLimit) => {\n  let currentTab = \"\";\n  if (state) {\n    const response = getState(state);\n    if (typeof response.activeTab !== \"undefined\")\n      currentTab = response.activeTab;\n  }\n\n  dispatch({\n    type: constants.UPDATE,\n    stateName,\n    payload: {\n      pageLimit,\n      activeTab: currentTab,\n    },\n  });\n};\n\nexport const getPageLimit = (rootState) => {\n  const results = rootState[stateName];\n  try {\n    const payload = results[\"pageLimit\"] ? results[\"pageLimit\"] : 0;\n    return payload ? payload : 0;\n  } catch (err) {}\n};\n\n// Needs to be deleted\nexport const setPageOptions = (\n  _,\n  dispatch,\n  options = { offset: 0, limit: 0 }\n) => {\n  dispatch({\n    type: constants.UPDATE,\n    stateName,\n    payload: {\n      options,\n    },\n  });\n};\n","export const FilterByName = (\n  data = [],\n  tag = \"name\",\n  searchValue = \"\",\n  fullScan = false\n) => {\n  var filteredData = undefined;\n  if (searchValue.length > 0) {\n    filteredData = data.filter((item) => {\n      const identifier = fullScan ? \"\" : \"^\";\n      try {\n        return (\n          searchValue &&\n          String(item[tag]).match(new RegExp(identifier + searchValue, \"gi\"))\n        );\n      } catch (err) {\n        console.error(`Tag does not exist: ${String(err)}`);\n      }\n      return null;\n    });\n  }\n  return typeof filteredData === \"undefined\" ? data : filteredData;\n};\n\nexport const FilterByDate = (\n  data = [],\n  tag = \"posting_date\",\n  startDate = \"\",\n  endDate = \"\"\n) => {\n  var filteredData = undefined;\n  if (startDate.length > 0 && endDate.length > 0) {\n    filteredData = data.filter((item) => {\n      try {\n        const dateItem = new Date(item[tag]).getTime();\n        const dateStart = new Date(startDate).getTime();\n        const dateEnd = new Date(endDate).getTime();\n        return (\n          startDate && endDate && dateItem <= dateEnd && dateItem >= dateStart\n        );\n      } catch (err) {\n        console.error(`Tag does not exist: ${String(err)}`);\n      }\n      return null;\n    });\n  }\n  return typeof filteredData === \"undefined\" ? data : filteredData;\n};\n\nexport const FilterByProperty = (\n  data = [],\n  tag = \"country\",\n  searchValue = \"\",\n  arrayTag = \"addresses\",\n  fullScan = false\n) => {\n  var filteredData = undefined;\n  if (searchValue.length > 0) {\n    filteredData = data.filter((item) => {\n      const identifier = fullScan ? \"\" : \"^\";\n      try {\n        const index = item[arrayTag].findIndex((prop) =>\n          prop[tag].match(new RegExp(identifier + searchValue, \"gi\"))\n        );\n        return searchValue && index >= 0;\n      } catch (err) {\n        console.error(`Tag does not exist: ${String(err)}`);\n      }\n      return null;\n    });\n  }\n  return typeof filteredData === \"undefined\" ? data : filteredData;\n};\n","// export const reverse = (array = []) => array.slice(0).reverse()\n\nexport const reverse = (array = []) => array","export const statusTypes = {\n    ADD: \"ADDING_LINE\",\n    IDLE: \"IDLE\",\n    EDIT: \"EDIT\",\n    SAVED: \"SAVED\",\n    CANCELED: \"CANCELED\",\n};\n\nexport const initialState = {\n    addCount: 0,\n    status: statusTypes.IDLE,\n    hasEdit: true,\n    hasDelete: true,\n    _data: []\n}\n\nexport const constants = {\n    ADD: \"_ADD\",\n    UPDATE: \"UPDATE\"\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case constants.ADD: {\n            return {\n                ...state,\n                addCount: state.addCount + 1,\n                status: statusTypes.ADD\n            }\n        }\n\n        case constants.UPDATE: {\n            return {\n                ...state,\n                _data: action.payload\n            }\n        }\n\n        default: return state\n    }\n}\n\nexport const addLine = (dispatch) => dispatch({ type: constants.ADD })\n\nexport const updateData = (data) => dispatch => {\n    dispatch({ type: constants.UPDATE, payload: data })\n}\n\nexport const getData = (state) => state._data","import React, { useState, useEffect } from \"react\";\nimport { Table as ReactstrapTable, Button, Input } from \"reactstrap\";\nimport { MdEdit, MdDelete } from \"react-icons/md\";\nimport { updateData } from \"./reducer\";\nimport Joi from \"joi-browser\";\nimport _ from \"lodash\";\n\nconst uuid = () => Math.random().toString(36).substring(7);\n\nexport const populateLine = (obj, _id) => {\n  let returnObj = {};\n  for (let prop in obj) {\n    returnObj[prop] = \"\";\n  }\n  return {\n    ...returnObj,\n    _id,\n  };\n};\n\nexport const statusTypes = {\n  ADD: \"ADDING_LINE\",\n  IDLE: \"IDLE\",\n  EDIT: \"EDIT\",\n  SAVED: \"SAVED\",\n  CANCELED: \"CANCELED\",\n};\n\nexport const DisplayTable = ({\n  data,\n  columns,\n  hasEdit,\n  hasDelete,\n  status,\n  addCount,\n  schema,\n  dispatch,\n  callback,\n}) => {\n  const [fetchedData, setFetchedData] = useState([]);\n  const [formStatus, setFormStatus] = useState(statusTypes.IDLE);\n  const [displayValues, setDisplay] = useState(data.map(() => false));\n  const [defaultValues, setDefaultValues] = useState({});\n\n  useEffect(() => {\n    if (\n      statusTypes.IDLE === formStatus ||\n      statusTypes.SAVED === formStatus ||\n      statusTypes.CANCELED === formStatus\n    ) {\n      setFormStatus(status);\n    }\n  }, [status, setFormStatus, addCount]);\n\n  useEffect(() => {\n    if (data.length > 0 && fetchedData.length === 0) {\n      const filteredData = data.map((item) => {\n        var returnObj = {};\n        for (var prop in item) {\n          // eslint-disable-next-line no-loop-func\n          const found = columns.find((_item) => _item.tag === prop);\n          if (found) {\n            returnObj[found.tag] = _.get(item, found.tag);\n          }\n        }\n        return {\n          ...returnObj,\n          _id: uuid(),\n        };\n      });\n      setDisplay(filteredData.map(() => false));\n      setFetchedData(filteredData);\n    }\n  }, [data, setFetchedData]);\n\n  useEffect(() => {\n    updateData(fetchedData)(dispatch);\n    callback(fetchedData);\n  }, [fetchedData, dispatch]);\n\n  const [formData, setForm] = useState({});\n  const [validationData, setValidation] = useState({});\n  const [completed, setCompleted] = useState(false);\n  const [generalOptions, setGeneralOptions] = useState({});\n\n  useEffect(() => {\n    const options = {};\n    columns.forEach((item) => {\n      if (item.type === \"select\") {\n        options[item.tag] = item.options;\n      }\n    });\n    setGeneralOptions(options);\n  }, [setGeneralOptions]);\n\n  useEffect(() => {\n    if (formStatus === statusTypes.ADD) {\n      const _id = uuid();\n      setFetchedData(fetchedData.concat(populateLine(fetchedData[0], _id)));\n      populateData(populateLine(fetchedData[0], _id));\n      setDisplay(displayValues.concat(true));\n    }\n  }, [formStatus]);\n\n  const populateData = (data) => {\n    setValidation(schema);\n    setForm({\n      ...defaultValues,\n      ...data,\n    });\n  };\n\n  useEffect(() => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(formData, validationData, options);\n\n    if (!error) {\n      if (Object.values(formData).length > 1) {\n        setCompleted(true);\n      }\n    } else {\n      console.warn(error);\n      setCompleted(false);\n    }\n  }, [formData]);\n\n  const handleChange = ({ currentTarget: { name, value, callback } }) => {\n    const setOptions = (tag, options) => {\n      let updatedOptions = generalOptions;\n      const index = Object.keys(generalOptions).findIndex(\n        (data) => data === tag\n      );\n      if (index >= 0) {\n        updatedOptions[tag] = options;\n        setGeneralOptions(updatedOptions);\n      }\n    };\n\n    setForm({\n      ...formData,\n      [name]: value,\n    });\n\n    const setValue = (values = []) => {\n      var updates = {};\n      values.map(({ name, value }) => {\n        updates[name] = value;\n        return null;\n      });\n      setForm({\n        ...formData,\n        ...updates,\n      });\n    };\n    callback({\n      name,\n      value,\n      setOptions,\n      options: generalOptions,\n      setValue,\n      formData,\n    });\n  };\n\n  const cancelCallback = () => {\n    if (formStatus === statusTypes.ADD) {\n      const index = fetchedData.findIndex((data) => data._id === formData._id);\n      if (index >= 0) {\n        setFetchedData(fetchedData.filter((_, idx) => index !== idx));\n        setDisplay(displayValues.filter((_, idx) => index !== idx));\n      }\n      setCompleted(true);\n    } else {\n      setDisplay(displayValues.map(() => false));\n    }\n    setFormStatus(statusTypes.CANCELED);\n    setValidation({});\n  };\n\n  const deleteCallback = (_id) => {\n    const index = fetchedData.findIndex((data) => data._id === _id);\n    if (index >= 0) {\n      setFetchedData(fetchedData.filter((_, idx) => idx !== index));\n      setDisplay(displayValues.filter((_, idx) => idx !== index));\n      setFormStatus(statusTypes.CANCELED);\n    }\n  };\n\n  const saveCallback = () => {\n    setFetchedData(\n      fetchedData.map((data) => {\n        if (data._id === formData._id) {\n          return {\n            _id: uuid(),\n            ...formData,\n          };\n        } else {\n          return data;\n        }\n      })\n    );\n    setDisplay(displayValues.map(() => false));\n  };\n\n  const returnName = (dataItem, item) => {\n    if (item.optionsFrom === \"server\") {\n      const found = item.options.find(\n        (prop) => String(prop.id) === String(dataItem[item.tag])\n      );\n      if (found) return found.name;\n    } else {\n      return dataItem[item.tag];\n    }\n  };\n\n  useEffect(() => {\n    var formUpdates = {};\n    columns.forEach((item) => {\n      if (item.defaultValue) {\n        formUpdates = {\n          ...formUpdates,\n          [item.tag]: item.defaultValue,\n        };\n      }\n    });\n    if (Object.values(formUpdates).length > 0) {\n      setForm({\n        ...formData,\n        ...formUpdates,\n      });\n      setDefaultValues(formUpdates);\n    }\n  }, [columns, setForm]);\n\n\n  return (\n    <ReactstrapTable size=\"md\" responsive striped>\n      <thead>\n        <tr>\n          {columns\n            .filter((prop) => !Boolean(prop.isView))\n            .map((item) => (\n              <th>{item.label}</th>\n            ))}\n        </tr>\n      </thead>\n      <tbody>\n        {fetchedData.map((dataItem, idx) => {\n          return (\n            <tr>\n              {columns\n                .filter((prop) => !Boolean(prop.isView))\n                .map((item) => {\n                  return displayValues[idx] && !item.noEdit ? (\n                    <td>\n                      {item.type === \"select\" ? (\n                        <Input\n                          type={item.type}\n                          name={item.tag}\n                          value={_.get(formData, item.tag)}\n                          onChange={({ currentTarget: { name, value } }) => {\n                            const callback = item.callback\n                              ? item.callback\n                              : () => null;\n                            handleChange({\n                              currentTarget: { name, value, callback },\n                            });\n                          }}\n                          disabled={item.disabled}\n                        >\n                          <option></option>\n                          {item.optionsFrom === \"server\"\n                            ? generalOptions[item.tag].map((_item) => (\n                                <option value={_item.id}>{_item.name}</option>\n                              ))\n                            : generalOptions[item.tag].map((_item) => (\n                                <option value={_item}>{_item}</option>\n                              ))}\n                        </Input>\n                      ) : (\n                        <Input\n                          type={item.type ? item.type : \"text\"}\n                          name={item.tag}\n                          disabled={item.disabled}\n                          value={_.get(formData, item.tag)}\n                          onChange={({ currentTarget: { name, value } }) => {\n                            const callback = item.callback\n                              ? item.callback\n                              : () => null;\n                            handleChange({\n                              currentTarget: { name, value, callback },\n                            });\n                          }}\n                        />\n                      )}\n                    </td>\n                  ) : (\n                    <td>{returnName(dataItem, item)}</td>\n                  );\n                })}\n              {hasEdit ? (\n                <td>\n                  {displayValues[idx] ? (\n                    <div>\n                      <Button\n                        className=\"m-1\"\n                        size=\"sm\"\n                        outline\n                        color=\"info\"\n                        onClick={() => {\n                          saveCallback();\n                          setFormStatus(statusTypes.SAVED);\n                        }}\n                        disabled={!completed}\n                      >\n                        Save\n                      </Button>\n                      <Button\n                        className=\"m-1\"\n                        size=\"sm\"\n                        outline\n                        color=\"danger\"\n                        onClick={() => {\n                          cancelCallback();\n                        }}\n                      >\n                        Cancel\n                      </Button>\n                    </div>\n                  ) : (\n                    <Button\n                      className=\"m-1\"\n                      size=\"sm\"\n                      outline\n                      color=\"warning\"\n                      onClick={() => {\n                        setDisplay(\n                          displayValues.map((_, value) => value === idx)\n                        );\n                        populateData(dataItem);\n                        setFormStatus(statusTypes.EDIT);\n                      }}\n                    >\n                      <MdEdit />\n                    </Button>\n                  )}\n                </td>\n              ) : (\n                <></>\n              )}\n              {hasDelete ? (\n                <td>\n                  <Button\n                    className=\"m-1\"\n                    size=\"sm\"\n                    outline\n                    color=\"danger\"\n                    onClick={() => deleteCallback(dataItem._id)}\n                  >\n                    <MdDelete />\n                  </Button>\n                </td>\n              ) : (\n                <></>\n              )}\n            </tr>\n          );\n        })}\n      </tbody>\n    </ReactstrapTable>\n  );\n};\n","import React, { useState, useReducer, useEffect } from \"react\";\nimport { Button, Col } from \"reactstrap\";\nimport { initialState, reducer, addLine, DisplayTable } from \"./index\";\n\nexport const InlineTable = ({\n  data,\n  columns,\n  callback,\n  schema,\n  lineTag,\n  disabled,\n  startForm\n}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [dataAllocated, setAllocated] = useState(false)\n\n  useEffect(() => {\n    if (startForm) {\n      addLine(dispatch)\n    }\n  }, [startForm, dispatch])\n\n  const _callback = (data) => {\n    if (!dataAllocated && data.length > 0 && Object.values(data[0]).length > 1) {\n      callback(data)\n      setAllocated(true)\n    } else if (state._data.length >= data.length) {\n      callback(data);\n    }\n  };\n\n  return (\n    <div>\n      {disabled? <></> : <Col align=\"right\" className=\"mb-1 pl-3 pr-3\">\n        <Button\n          className=\"m-1 align-right\"\n          size=\"sm\"\n          outline\n          color=\"info\"\n          onClick={() => addLine(dispatch)}\n        >\n          {lineTag? lineTag : \"Add Line\"}\n        </Button>\n      </Col>}\n      <DisplayTable\n        {...state}\n        dispatch={dispatch}\n        data={data}\n        schema={schema}\n        columns={columns}\n        callback={_callback}\n        hasEdit={!disabled}\n        hasDelete={!disabled}\n      />\n    </div>\n  );\n};\n","export { DisplayTable } from \"./main\"\nexport { addLine, getData, initialState, reducer } from \"./reducer\"\nexport { InlineTable } from \"./render\"","import { constants } from \"../reducer\";\n\nexport const stateName = \"current_department\";\n\nexport const getState = (rootState) => {\n  if (rootState[stateName]) {\n    return rootState[stateName];\n  } else {\n    return null;\n  }\n};\n\nexport const setDepartment = (\n  _,\n  dispatch,\n  department = \"\"\n) => {\n  dispatch({\n    type: constants.UPDATE,\n    stateName,\n    payload: {\n      department\n    },\n  });\n};\n\nexport const setPermissions = (\n    _,\n    dispatch,\n    permissions = {}\n  ) => {\n    dispatch({\n      type: constants.UPDATE,\n      stateName,\n      payload: {\n        permissions\n      },\n    });\n  };\n\nexport const defaultPermissions = {\n  create: true, read: true, update: true, delete: true\n}","import Joi from \"joi-browser\";\n\nexport const addressSaveLineTag = \"customer_address_lines\";\nexport const contactSaveLineTag = \"customer_contact_lines\";\n\nexport const mainSchema = {\n  id: Joi.string().allow(\"\").optional(),\n  number: Joi.string().allow(\"\").optional(),\n  name: Joi.string(),\n  tin_number: Joi.number(),\n  currency: Joi.string().required(),\n  customer_posting_group: Joi.string(),\n  vat_posting_group: Joi.string(),\n  credit_limit: Joi.number(),\n  remarks: Joi.string().allow(\"\").optional(),\n  [addressSaveLineTag]: Joi.array().items(Joi.object()).min(1),\n  [contactSaveLineTag]: Joi.array().items(Joi.object()).min(0),\n};\n\nexport const initialState = {\n  data: {\n    id: \"\",\n    number: \"\",\n    name: \"\",\n    tin_number: \"\",\n    currency: \"\",\n    customer_posting_group: \"\",\n    vat_posting_group: \"\",\n    credit_limit: \"\",\n    remarks: \"\",\n    [contactSaveLineTag]: [],\n    [addressSaveLineTag]: [],\n  },\n  lineCounter: 1,\n  errors: {},\n};\n\nexport const populateState = (data) => {\n  return {\n    id: data.id ? data.id : \"\",\n    number: data.document_number,\n    name: data.name,\n    tin_number: Number(data.tin_number),\n    currency: data.currency.id,\n    customer_posting_group: data.customer_posting_group.id,\n    vat_posting_group: data.vat_posting_group.id,\n    credit_limit: data.credit_limit,\n    remarks: data.remarks,\n    [addressSaveLineTag]: addressLineMapper(data),\n    [contactSaveLineTag]: contactLineMapper(data)\n  };\n};\n\nexport const addressLineMapper = (data) => {\n  const returnedData = data[addressSaveLineTag].map((line) => ({\n    country: line.country.country_id,\n    region: line.region.region_id,\n    city: line.city.id,\n    p_o_box: line.p_o_box,\n    is_head_office: line.is_head_office? \"Yes\": \"No\",\n    office_telephone_number: line.office_telephone_number,\n    remarks: line.remarks\n  }));\n  return returnedData\n};\n\nexport const contactLineMapper = (data) => {\n  return data[contactSaveLineTag].map(line => ({\n    _id: line.id,\n    name: line.name,\n    office_telephone_number: line.office_telephone_number,\n    mobile_phone_number: line.mobile_phone_number,\n    email: line.email,\n    remarks: line.remarks,\n  }))\n}\n\nexport const addressLineSchema = {\n  _id: Joi.any().allow(\"\").optional(),\n  country: Joi.string(),\n  region: Joi.string(),\n  city: Joi.string(),\n  p_o_box: Joi.string(),\n  is_head_office: Joi.string(),\n  office_telephone_number: Joi.string(),\n  remarks: Joi.string().allow(\"\").optional(),\n};\n\nexport const getAddressColumns = (data) => {\n  const { countries, regions, cities } = data;\n\n  return [\n    {\n      tag: \"country\",\n      label: \"Country\",\n      type: \"select\",\n      options: countries,\n      optionsFrom: \"server\",\n    },\n    {\n      tag: \"region\",\n      label: \"Region\",\n      type: \"select\",\n      options: regions,\n      optionsFrom: \"server\",\n    },\n    {\n      tag: \"city\",\n      label: \"Cities\",\n      type: \"select\",\n      options: cities,\n      optionsFrom: \"server\",\n    },\n    { tag: \"p_o_box\", label: \"Postal Code\", type: \"text\" },\n    {\n      tag: \"is_head_office\",\n      label: \"Is Head Office\",\n      type: \"select\",\n      options: [\"Yes\", \"No\"],\n    },\n    {\n      tag: \"office_telephone_number\",\n      label: \"Office Telephone Number\",\n      type: \"text\",\n    },\n    { tag: \"remarks\", label: \"Remarks\", type: \"text\" },\n  ];\n};\n\nexport const contactLineSchema = {\n  _id: Joi.any().allow(\"\").optional(),\n  name: Joi.string(),\n  office_telephone_number: Joi.string(),\n  mobile_phone_number: Joi.string(),\n  email: Joi.string(),\n  remarks: Joi.string().allow(\"\").optional(),\n};\n\nexport const getContactColumns = () => {\n  return [\n    {\n      tag: \"name\",\n      label: \"Name\",\n      type: \"text\",\n    },\n    {\n      tag: \"office_telephone_number\",\n      label: \"Office Telephone Number\",\n      type: \"text\",\n    },\n    {\n      tag: \"mobile_phone_number\",\n      label: \"Mobile Number\",\n      type: \"text\",\n    },\n    { tag: \"email\", label: \"Email\", type: \"text\" },\n    { tag: \"remarks\", label: \"Remarks\", type: \"text\" },\n  ];\n};\n","import React from \"react\";\nimport { Card, CardBody,  Form, Row, Col } from \"reactstrap\";\nimport ReusabelForm from \"../../../common/form\";\nimport { InlineTable } from \"../../../common/InLineEditableTable\";\nimport {\n  initialState,\n  mainSchema,\n  getAddressColumns,\n  addressLineSchema,\n  addressLineMapper,\n  populateState,\n  addressSaveLineTag,\n  contactLineSchema,\n  contactSaveLineTag,\n  getContactColumns,\n} from \"./config\";\nimport { getLoading } from \"../../../../store/Sales/MasterData/Customer\";\nimport { connect } from \"react-redux\";\n\nclass CustomerForm extends ReusabelForm {\n  constructor(props) {\n    super(props);\n    this.initialState = initialState;\n    this.state = JSON.parse(JSON.stringify(this.initialState));\n    this.schema = mainSchema;\n    this.populateState = this.populateState.bind(this);\n    this.updateAddressLines = this.updateAddressLines.bind(this);\n    this.updateContactLines = this.updateContactLines.bind(this);\n    this.lineMapper = this.lineMapper.bind(this);\n  }\n\n  doSubmit = async () => {\n    this.props.submit(this.state.data);\n  };\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  lineMapper() {\n    if (this.props.isEdit || this.props.isView) {\n      return addressLineMapper(this.props.data);\n    } else {\n      return [];\n    }\n  }\n\n  populateState(data) {\n    const newData = populateState(data);\n    this.setState({ lockUpdate: true, data: newData });\n  }\n\n  updateAddressLines(lines) {\n    if (lines.length > 0 || this.state.data[addressSaveLineTag].length > 0) {\n      this.setState({\n        data: {\n          ...this.state.data,\n          [addressSaveLineTag]: lines,\n        },\n      });\n    }\n  }\n\n  updateContactLines(lines) {\n    if (lines.length > 0 || this.state.data[contactSaveLineTag].length > 0) {\n      this.setState({\n        data: {\n          ...this.state.data,\n          [contactSaveLineTag]: lines,\n        },\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if ((this.props.isEdit || this.props.isView) && !this.state.lockUpdate) {\n      this.populateState(this.props.data);\n    }\n  }\n\n  render() {\n    const { postingGroups, currencies, vatPostingGroups } = this.props.options;\n    return (\n      <Card className=\"border-0\">\n        <CardBody>\n          <Form onSubmit={this.handleSubmit}>\n            <Row>\n              {this.props.isView && (\n                <Col md={4} sm={12} xs={12}>\n                  {this.renderInput({\n                    name: \"number\",\n                    label: \"Customer Number\",\n                  })}\n                </Col>\n              )}\n              <Col md={4} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"name\",\n                  label: \"Customer Name\",\n                })}\n              </Col>\n              <Col md={4} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"tin_number\",\n                  label: \"Tin Number\",\n                  type: \"number\",\n                })}\n              </Col>\n              <Col md={4} sm={12} xs={12}>\n                {this.renderSelect({\n                  name: \"currency\",\n                  label: \"Currency\",\n                  options: currencies,\n                  optionsFrom: \"server\",\n                })}\n              </Col>\n              <Col md={4} sm={12} xs={12}>\n                {this.renderSelect({\n                  name: \"customer_posting_group\",\n                  label: \"Customer Posting Group\",\n                  options: postingGroups,\n                  optionsFrom: \"server\",\n                })}\n              </Col>\n              <Col md={4} sm={12} xs={12}>\n                {this.renderSelect({\n                  name: \"vat_posting_group\",\n                  label: \"VAT Posting Group\",\n                  options: vatPostingGroups,\n                  optionsFrom: \"server\",\n                })}\n              </Col>\n              <Col md={4} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"credit_limit\",\n                  label: \"Credit Limit\",\n                  type: \"number\",\n                })}\n              </Col>\n              <Col md={12} sm={12} xs={12}>\n                {this.renderInput(\"remarks\", \"Remarks\", \"textarea\")}\n              </Col>\n              <Col md={12} sm={12} xs={12}>\n                Address Line\n                <InlineTable\n                  columns={getAddressColumns(this.props.options)}\n                  disabled={this.props.disabled}\n                  data={this.state.data[addressSaveLineTag]}\n                  callback={this.updateAddressLines}\n                  schema={addressLineSchema}\n                  startForm={this.props.isAdd}\n                />\n              </Col>\n              <Col md={12} sm={12} xs={12}>\n                Contact Line\n                <InlineTable\n                  columns={getContactColumns()}\n                  disabled={this.props.disabled}\n                  data={this.state.data[contactSaveLineTag]}\n                  callback={this.updateContactLines}\n                  schema={contactLineSchema}\n                  startForm={this.props.isAdd}\n                />\n              </Col>\n              <Col size=\"xl\" align=\"right\">\n                {this.renderButton(\"Save\")}\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default connect(getLoading)(CustomerForm);\n","import React, { useReducer, useEffect, useContext, useState } from \"react\";\nimport Page from \"../../../../components/Page\";\nimport { Card, Button, Col } from \"reactstrap\";\nimport CustomerForm from \"./CustomerForm\";\nimport { MdRemoveRedEye, MdEdit, MdDelete } from \"react-icons/md\";\nimport { reverse } from \"../../../../helpers/reverse\";\nimport CustomTable from \"../../../common/table\";\nimport { _toggle, initialState, reducer } from \"../../../common/ModalOptions\";\nimport CommonModals from \"../../../../components/CommonModal\";\nimport { MainContext } from \"../../../../context/Main\";\nimport {\n  getState,\n  defaultPermissions,\n} from \"../../../../context/Main/States/Department\";\n\nconst FEATURE = \"CUSTOMER\";\nconst Customer = ({\n  customers,\n  addCustomer,\n  editCustomer,\n  deleteCustomer,\n  doneAdd,\n  doneEdit,\n  postingGroups,\n  vatPostingGroups,\n  currencies,\n  countries,\n  regions,\n  cities,\n}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { rootState } = useContext(MainContext);\n  const [permissions, setPermissions] = useState(defaultPermissions);\n\n  useEffect(() => {\n    const state = getState(rootState);\n    if (state) {\n      if (state.permissions) {\n        setPermissions(state.permissions[FEATURE]);\n      }\n    }\n  }, [rootState]);\n\n  const columns = [\n    { path: \"document_number\", label: \"Customer Number\" },\n    { path: \"name\", label: \"Customer Name\" },\n    { path: \"tin_number\", label: \"Tin Number \" },\n    { path: \"currency.symbol\", label: \"Currency\" },\n    // { path: \"customer_posting_group.name\", label: \"Customer Posting Group\" },\n    { path: \"credit_limit\", label: \"Credit Limit\" },\n    // { path: \"remark\", label: \"Remarks\" },\n    {\n      key: \"view\",\n      content: (customer) => (\n        <>\n          {permissions.read ? (\n            <Button\n              className=\"m-1\"\n              size=\"sm\"\n              outline\n              color=\"info\"\n              onClick={() => {\n                _toggle(\n                  {\n                    type: \"VIEW\",\n                    Component: CustomerForm,\n                    data: customer,\n                    title: \"View Customer\",\n                    options: {\n                      postingGroups,\n                      currencies,\n                      countries,\n                      regions,\n                      cities,\n                      vatPostingGroups,\n                    },\n                  },\n                  dispatch\n                );\n              }}\n            >\n              <MdRemoveRedEye />\n            </Button>\n          ) : (\n            <></>\n          )}\n          {permissions.update ? (\n            <Button\n              className=\"m-1\"\n              size=\"sm\"\n              outline\n              color=\"warning\"\n              onClick={() => {\n                _toggle(\n                  {\n                    type: \"EDIT\",\n                    title:\"Edit Customer\",\n                    Component: CustomerForm,\n                    submit: editCustomer,\n                    isEdit: true,\n                    data: customer,\n                    options: {\n                      postingGroups,\n                      currencies,\n                      countries,\n                      regions,\n                      cities,\n                      vatPostingGroups,\n                    },\n                  },\n                  dispatch\n                );\n              }}\n            >\n              <MdEdit />\n            </Button>\n          ) : (\n            <></>\n          )}\n          {permissions.delete ? (\n            <Button\n              className=\"m-1\"\n              size=\"sm\"\n              outline\n              color=\"danger\"\n              onClick={() => {\n                _toggle(\n                  {\n                    type: \"DELETE\",\n                    deleteOptions: {\n                      okCallback: okDelete,\n                      title: \"Are you sure?\",\n                      id: customer.id,\n                      message: \"\",\n                    },\n                  },\n                  dispatch\n                );\n              }}\n            >\n              <MdDelete />\n            </Button>\n          ) : (\n            <></>\n          )}\n        </>\n      ),\n    },\n  ];\n\n  const okDelete = (id) => {\n    deleteCustomer(id);\n  };\n\n  useEffect(() => {\n    if (doneAdd || doneEdit) {\n      _toggle({ type: \"CLOSE\" }, dispatch);\n    }\n  }, [doneAdd, doneEdit]);\n\n  return (\n    <div>\n      <Page>\n        <CommonModals\n          data={state.data}\n          openModal={state.openModal}\n          component={state.Component}\n          toggle={_toggle}\n          dispatch={dispatch}\n          title={state.title}\n        />\n        {permissions.create ? (\n          <Col align=\"right\" className=\"mb-1 pl-3 pr-3\">\n            <Button\n              onClick={() => {\n                _toggle(\n                  {\n                    type: \"ADD\",\n                    Component: CustomerForm,\n                    submit: addCustomer,\n                    isEdit: true,\n                    data: customers,\n                    title: \"Add Customer\",\n\n                    options: {\n                      postingGroups,\n                      currencies,\n                      regions,\n                      cities,\n                      countries,\n                      vatPostingGroups,\n                    },\n                  },\n                  dispatch\n                );\n              }}\n              outline\n              size=\"sm\"\n            >\n              New Customer\n            </Button>\n          </Col>\n        ) : (\n          <></>\n        )}\n        {permissions.read ? (\n          <Card className=\"border-0\">\n            <CustomTable\n              title=\"Customers\"\n              columns={columns}\n              data={reverse(\n                customers.map((item) => ({\n                  ...item,\n                  currency: item.currency\n                    ? item.currency\n                    : { id: \"\", name: \"\" },\n                  cic: item.currency ? item.currency : { id: \"\", name: \"\" },\n                }))\n              )}\n            />\n          </Card>\n        ) : (\n          <></>\n        )}\n      </Page>\n    </div>\n  );\n};\n\nexport default Customer;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Customer from \"./Customer\";\nimport {\n  selectFetchStatus,\n  selectAddStatus,\n  selectCustomers,\n  Fetch,\n  Add,\n  selectEditStatus,\n  Edit,\n  selectDeleteStatus,\n  Remove,\n} from \"../../../../store/Sales/MasterData/Customer/\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { reduxStatus } from \"../../../../constants/reduxStatus\";\nimport { SearchContext, MainContext } from \"../../../../context/\";\nimport {\n  assignFilterComponent,\n  setLockComponent,\n} from \"../../../../context/Main/States/search\";\nimport {\n  setPageValues,\n  getState,\n} from \"../../../../context/Main/States/Pagination\";\nimport { FilterByName, FilterByProperty } from \"../../../../helpers/Filter\";\nimport { Input } from \"reactstrap\";\nimport { selectCustomerPostingGroups } from \"../../../../store/GeneralSetup/Posting/CustomerPostingGroups\";\nimport { selectVATPostingGroups } from \"../../../../store/GeneralSetup/Posting/VAT_Posting_Group\";\nimport { selectCurrencies } from \"../../../../store/GeneralSetup/Currencies\";\nimport { selectCountries } from \"../../../../store/GeneralSetup/Countries\";\nimport { selectRegions } from \"../../../../store/GeneralSetup/Regions\";\nimport { selectCities } from \"../../../../store/GeneralSetup/Cities\";\nimport { selectCompany } from \"../../../../store/GeneralSetup/Company\";\nimport { addressSaveLineTag, contactSaveLineTag } from \"./config\";\n\nconst Loader = ({\n  fetchStatus,\n  addStatus,\n  fetchCustomers,\n  addCustomer,\n  editStatus,\n  editCustomer,\n  deleteStatus,\n  deleteCustomer,\n  customers,\n  postingGroups,\n  vatPostingGroups,\n  currencies,\n  countries,\n  regions,\n  cities,\n  companyID,\n}) => {\n  const [data, setData] = useState([]);\n  const [fetchLock, setFetchLock] = useState(true);\n  const [addLock, setAddLock] = useState(true);\n  const [editLock, setEditLock] = useState(true);\n  const [deleteLock, setDeleteLock] = useState(true);\n  const [filterType, setFilterType] = useState(\"document_number\");\n\n  const { rootState, dispatch } = useContext(MainContext);\n\n  useEffect(() => {\n    try {\n      const {\n        options: { offset, limit, onClick },\n      } = getState(rootState);\n      if (onClick) {\n        fetchCustomers([\n          { key: \"offset\", value: offset },\n          { key: \"limit\", value: limit },\n        ]);\n      }\n    } catch (e) {}\n  }, [getState(rootState)]);\n\n  useEffect(() => {\n    setData(customers);\n  }, [customers, setData]);\n\n  const FilterTypes = () => {\n    const [selectedFilter, setFilter] = useState(filterType);\n\n    useEffect(() => setFilterType(selectedFilter), [selectedFilter]);\n\n    return (\n      <>\n        <Input\n          type=\"select\"\n          onChange={({ currentTarget: { value } }) => setFilter(value)}\n        >\n          <option value=\"document_number\">By Customer Number</option>\n          <option value=\"name\">Customer Name</option>\n          <option value=\"tin_number\">Tin Number</option>\n          <option value=\"region\">Region</option>\n          <option value=\"country\">Country</option>\n        </Input>\n      </>\n    );\n  };\n  useEffect(() => {\n    setLockComponent({}, dispatch, false);\n    assignFilterComponent({}, dispatch, FilterTypes);\n  }, [dispatch]);\n\n  const { searchValue } = useContext(SearchContext);\n  useEffect(() => {\n    let filteredData = [];\n    if (filterType === \"country\" || filterType === \"region\") {\n      filteredData = FilterByProperty(\n        customers.map((prop) => ({\n          ...prop,\n          [addressSaveLineTag]: prop[addressSaveLineTag].map((item) => ({\n            ...item,\n            country: item.city.country_name,\n            region: item.city.region_name,\n          })),\n        })),\n        filterType,\n        searchValue,\n        addressSaveLineTag\n      );\n    } else {\n      filteredData = FilterByName(\n        customers,\n        filterType,\n        searchValue,\n        filterType === \"document_number\"\n      );\n    }\n    setData(filteredData);\n  }, [searchValue, setData, filterType]);\n\n  useEffect(() => {\n    setFetchLock(false);\n    fetchCustomers();\n  }, [fetchCustomers, setFetchLock]);\n\n  useEffect(() => {\n    const { status, response } = fetchStatus;\n    if (status === reduxStatus.failure && !fetchLock) {\n      toast.error(\"Failed fetching customers\");\n      setFetchLock(true);\n    } else {\n      setPageValues(rootState, dispatch, response);\n    }\n  }, [fetchStatus, setFetchLock, dispatch]);\n\n  useEffect(() => {\n    const { status } = addStatus;\n    if (status === reduxStatus.failure && !addLock) {\n      setAddLock(true);\n    } else if (status === reduxStatus.success && !addLock) {\n      toast.success(\"Added Customer\");\n      setAddLock(true);\n    }\n  }, [addStatus, setAddLock]);\n\n  useEffect(() => {\n    const { status } = editStatus;\n    if (status === reduxStatus.failure && !editLock) {\n      setEditLock(true);\n    } else if (status === reduxStatus.success && !editLock) {\n      toast.success(\"Edited Customer\");\n      setEditLock(true);\n    }\n  }, [editStatus, setEditLock]);\n\n  useEffect(() => {\n    const { status } = deleteStatus;\n    if (status === reduxStatus.failure && !deleteLock) {\n      setDeleteLock(true);\n    } else if (status === reduxStatus.success && !deleteLock) {\n      toast.success(\"Deleted Customer\");\n      setDeleteLock(true);\n    }\n  }, [deleteStatus, setDeleteLock]);\n\n  const _addCustomer = (data) => {\n    setAddLock(false);\n    const requestBody = {\n      id: data.id,\n      name: data.name,\n      tin_number: data.tin_number,\n      currency: data.currency,\n      customer_posting_group: data.customer_posting_group,\n      vat_posting_group: data.vat_posting_group,\n      credit_limit: data.credit_limit,\n      remarks: data.remarks,\n      company: companyID,\n      [contactSaveLineTag]: data[contactSaveLineTag],\n      [addressSaveLineTag]: data[addressSaveLineTag].map((item) => ({\n        ...item,\n        is_head_office: item.is_head_office === \"Yes\",\n      })),\n    };\n\n    addCustomer(requestBody);\n  };\n\n  const _editCustomer = (data) => {\n    setEditLock(false);\n    const requestBody = {\n      id: data.id,\n      name: data.name,\n      tin_number: data.tin_number,\n      currency: data.currency,\n      customer_posting_group: data.customer_posting_group,\n      vat_posting_group: data.vat_posting_group,\n      credit_limit: data.credit_limit,\n      remarks: data.remarks,\n      company: companyID,\n      [contactSaveLineTag]: data[contactSaveLineTag],\n      [addressSaveLineTag]: data[addressSaveLineTag].map((item) => ({\n        ...item,\n        is_head_office: item.is_head_office === \"Yes\",\n      })),\n    };\n\n    editCustomer(requestBody);\n  };\n\n  const _deleteCustomer = (id) => {\n    setDeleteLock(false);\n    deleteCustomer(id);\n  };\n\n  return (\n    <Customer\n      doneAdd={addStatus.status === reduxStatus.success && !addLock}\n      addCustomer={_addCustomer}\n      doneEdit={editStatus.status === reduxStatus.success && !editLock}\n      editCustomer={_editCustomer}\n      doneDelete={deleteStatus.status === reduxStatus.success && !deleteLock}\n      deleteCustomer={_deleteCustomer}\n      customers={data}\n      postingGroups={postingGroups}\n      currencies={currencies}\n      countries={countries}\n      cities={cities}\n      regions={regions}\n      vatPostingGroups={vatPostingGroups}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fetchStatus: selectFetchStatus(state),\n  addStatus: selectAddStatus(state),\n  customers: selectCustomers(state),\n  editStatus: selectEditStatus(state),\n  deleteStatus: selectDeleteStatus(state),\n  postingGroups: selectCustomerPostingGroups(state),\n  vatPostingGroups: selectVATPostingGroups(state),\n  currencies: selectCurrencies(state),\n  countries: selectCountries(state),\n  regions: selectRegions(state),\n  cities: selectCities(state),\n  companyID: selectCompany(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCustomers: (data = null) => dispatch(Fetch(data)),\n  addCustomer: (data) => dispatch(Add(data)),\n  editCustomer: (data) => dispatch(Edit(data)),\n  deleteCustomer: (id) => dispatch(Remove(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loader);\n"],"sourceRoot":""}