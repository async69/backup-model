{"version":3,"sources":["pages/common/tableHeader.jsx","helpers/number.js","pages/common/tableBody.jsx","pages/common/TableFooter.jsx","pages/common/table.jsx","context/Main/States/Pagination.jsx","pages/common/InLineEditableTable/reducer.jsx","pages/common/InLineEditableTable/main.jsx","pages/common/InLineEditableTable/render.jsx","pages/common/InLineEditableTable/index.jsx","context/Main/States/Department.jsx","pages/IT/Employees/config.jsx","pages/IT/Employees/Permissions.jsx","pages/IT/Employees/Employees.jsx","pages/IT/Employees/index.jsx","pages/IT/EmployeeTabs.jsx"],"names":["TableHeader","react_default","a","createElement","this","props","columns","map","column","key","path","label","Component","maskRegex","notMaskRegex","getIndex","mask","search","processValue","value","maskObj","options","isNegative","valObj","sign","Number","toFixed","fraction","length","toString","posTrailZero","lastIndexOf","_valObj$value$split","split","_valObj$value$split2","Object","slicedToArray","_valObj$value$split2$","valInteger","_valObj$value$split2$2","valFraction","replace","integer","result","szSep","separator","maskInteger","join","posLeadZero","indexOf","posSeparator","len","offset","indx","charAt","decimal","addSeparators","maskHasPositiveSign","enforceMaskSign","maskHasNegativeSign","number","arguments","undefined","isNaN","start","prefix","substring","end","reverse","substr","suffix","match","processMask","TableBody","renderCell","item","loading","console","log","content","_","get","numberIndex","numberTypes","findIndex","type","String","dateTypes","getFormattedDate","getFormattedNumber","createKey","_id","_this2","_this$props","data","id","TableFooter","_useContext","useContext","MainContext","rootState","dispatch","_useState","useState","_useState2","setOffset","_useState3","_useState4","pageLimit","setPageLimit","_useState5","_useState6","maxLimit","setMaxLimit","_useState7","_useState8","numberOfPages","setNumberOfPages","_useState9","_useState10","lock","setLock","_useState11","_useState12","clicked","setClicked","_useState13","count","results","_useState14","buffer","setBuffer","_useState15","_useState16","setCount","_useState17","_useState18","openTab","setOpenTab","useEffect","getPageLimit","Math","ceil","fetchedCount","_getState","getState","amount","activeTab","warn","e","handleChange","limit","setPageOptions","onClick","Pagination","className","size","color","PaginationItem","disabled","PaginationLink","first","href","previous","Array","fill","idx","active","floor","next","last","connect","state","ownProps","objectSpread","_ref","title","getLoading","isPatch","Card","CardHeader","es_Table","responsive","striped","tableHeader","tableBody","common_TableFooter","__webpack_require__","d","__webpack_exports__","setPageValues","_reducer__WEBPACK_IMPORTED_MODULE_0__","constants","UPDATE","stateName","payload","err","statusTypes","initialState","addCount","status","hasEdit","hasDelete","_data","reducer","action","addLine","uuid","random","populateLine","obj","returnObj","prop","DisplayTable","schema","callback","fetchedData","setFetchedData","formStatus","setFormStatus","displayValues","setDisplay","defaultValues","setDefaultValues","filteredData","found","find","_item","tag","formData","setForm","validationData","setValidation","completed","setCompleted","generalOptions","setGeneralOptions","forEach","concat","populateData","error","Joi","validate","abortEarly","values","_ref2","_ref2$currentTarget","currentTarget","name","defineProperty","setOptions","updatedOptions","keys","setValue","updates","_ref3","formUpdates","defaultValue","Table","filter","Boolean","isView","dataItem","noEdit","Input","onChange","_ref4","_ref4$currentTarget","optionsFrom","_ref5","_ref5$currentTarget","returnName","Button","outline","index","cancelCallback","index_esm","Fragment","deleteCallback","InlineTable","lineTag","startForm","_useReducer","useReducer","_useReducer2","dataAllocated","setAllocated","Col","align","main_DisplayTable","assign","reducer_reducer","render_InlineTable","setDepartment","setPermissions","defaultPermissions","department","permissions","create","read","update","delete","mainSchema","any","allow","optional","firstName","string","required","lastName","array","items","object","min","errors","selectedLine","lineCounter","lineSchema","resource","boolean","getColumns","SalesInvoiceForm","_this","classCallCheck","_super","call","doSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","submit","stop","JSON","parse","stringify","handleLineSave","bind","assertThisInitialized","populateState","updateLines","lineMapper","componentDidUpdate","isEdit","context","lineContentMapper","newData","claims","setState","lockUpdate","lines","CardBody","Form","onSubmit","handleSubmit","Row","md","sm","xs","renderInput","InLineEditableTable","isAdd","renderButton","ReusabelForm","contextType","Employees","employees","patchEmployee","editITEmployee","doneEdit","employee","hasAccount","_toggle","Permissions","CommonModal","openModal","component","toggle","Page","table","fetchStatus","selectFetchStatus","addStatus","selectAddStatus","selectITEmployees","editStatus","selectEditStatus","patchStatus","selectPatchStatus","deleteStatus","selectDeleteStatus","getPermissions","fetchITEmployees","Fetch","addITEmployee","Add","Edit","patchITEmployee","Patch","deleteITEmployee","Remove","fetchLock","setFetchLock","addLock","setAddLock","editLock","setEditLock","patchLock","setPatchLock","deleteLock","setDeleteLock","_getState$options","activeTabs","PURCHASE_LEDGER_ENTRY","response","reduxStatus","failure","toast","success","getLines","line","objectSet","IT_Employees_Employees","doneAdd","requestBody","donePatch","doneDelete","EMPLOYEES","EmployeeTabs","setActiveTab","Nav","tabs","NavItem","NavLink","tab","TabContent","TabPane","tabId","pages_IT_Employees"],"mappings":"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","file":"static/js/62.ca360dba.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n// columns: array\n// sortColumn: object\n// onSort: function\nclass TableHeader extends Component {\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((column) => (\n            <th key={column.path || column.key}>{column.label}</th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","const maskRegex = /[0-9\\-+#]/;\nconst notMaskRegex = /[^\\d\\-+#]/g;\n\nfunction getIndex(mask) {\n  return mask.search(maskRegex);\n}\n\nfunction processMask(mask = \"#.##\") {\n  const maskObj = {};\n  const len = mask.length;\n  const start = getIndex(mask);\n  maskObj.prefix = start > 0 ? mask.substring(0, start) : \"\";\n\n  // Reverse string: not an ideal method if there are surrogate pairs\n  const end = getIndex(mask.split(\"\").reverse().join(\"\"));\n  const offset = len - end;\n  const substr = mask.substring(offset, offset + 1);\n  // Add 1 to offset if mask has a trailing decimal/comma\n  const indx = offset + (substr === \".\" || substr === \",\" ? 1 : 0);\n  maskObj.suffix = end > 0 ? mask.substring(indx, len) : \"\";\n\n  maskObj.mask = mask.substring(start, indx);\n  maskObj.maskHasNegativeSign = maskObj.mask.charAt(0) === \"-\";\n  maskObj.maskHasPositiveSign = maskObj.mask.charAt(0) === \"+\";\n\n  // Search for group separator & decimal; anything not digit,\n  // not +/- sign, and not #\n  let result = maskObj.mask.match(notMaskRegex);\n  // Treat the right most symbol as decimal\n  maskObj.decimal = (result && result[result.length - 1]) || \".\";\n  // Treat the left most symbol as group separator\n  maskObj.separator = (result && result[1] && result[0]) || \",\";\n\n  // Split the decimal for the format string if any\n  result = maskObj.mask.split(maskObj.decimal);\n  maskObj.integer = result[0];\n  maskObj.fraction = result[1];\n  return maskObj;\n}\n\nfunction processValue(value, maskObj, options) {\n  let isNegative = false;\n  const valObj = {\n    value,\n  };\n  if (value < 0) {\n    isNegative = true;\n    // Process only abs(), and turn on flag.\n    valObj.value = -valObj.value;\n  }\n\n  valObj.sign = isNegative ? \"-\" : \"\";\n\n  // Fix the decimal first, toFixed will auto fill trailing zero.\n  valObj.value = Number(valObj.value).toFixed(\n    maskObj.fraction && maskObj.fraction.length\n  );\n  // Convert number to string to trim off *all* trailing decimal zero(es)\n  valObj.value = Number(valObj.value).toString();\n\n  // Fill back any trailing zero according to format\n  // look for last zero in format\n  const posTrailZero = maskObj.fraction && maskObj.fraction.lastIndexOf(\"0\");\n  let [valInteger = \"0\", valFraction = \"\"] = valObj.value.split(\".\");\n  if (!valFraction || (valFraction && valFraction.length <= posTrailZero)) {\n    valFraction =\n      posTrailZero < 0\n        ? \"\"\n        : Number(\"0.\" + valFraction)\n            .toFixed(posTrailZero + 1)\n            .replace(\"0.\", \"\");\n  }\n\n  valObj.integer = valInteger;\n  valObj.fraction = valFraction;\n  addSeparators(valObj, maskObj);\n\n  // Remove negative sign if result is zero\n  if (valObj.result === \"0\" || valObj.result === \"\") {\n    // Remove negative sign if result is zero\n    isNegative = false;\n    valObj.sign = \"\";\n  }\n\n  if (!isNegative && maskObj.maskHasPositiveSign) {\n    valObj.sign = \"+\";\n  } else if (isNegative && maskObj.maskHasPositiveSign) {\n    valObj.sign = \"-\";\n  } else if (isNegative) {\n    valObj.sign =\n      options && options.enforceMaskSign && !maskObj.maskHasNegativeSign\n        ? \"\"\n        : \"-\";\n  }\n\n  return valObj;\n}\n\nfunction addSeparators(valObj, maskObj) {\n  valObj.result = \"\";\n  // Look for separator\n  const szSep = maskObj.integer.split(maskObj.separator);\n  // Join back without separator for counting the pos of any leading 0\n  const maskInteger = szSep.join(\"\");\n\n  const posLeadZero = maskInteger && maskInteger.indexOf(\"0\");\n  if (posLeadZero > -1) {\n    while (valObj.integer.length < maskInteger.length - posLeadZero) {\n      valObj.integer = \"0\" + valObj.integer;\n    }\n  } else if (Number(valObj.integer) === 0) {\n    valObj.integer = \"\";\n  }\n\n  // Process the first group separator from decimal (.) only, the rest ignore.\n  // get the length of the last slice of split result.\n  const posSeparator = szSep[1] && szSep[szSep.length - 1].length;\n  if (posSeparator) {\n    const len = valObj.integer.length;\n    const offset = len % posSeparator;\n    for (let indx = 0; indx < len; indx++) {\n      valObj.result += valObj.integer.charAt(indx);\n      // -posSeparator so that won't trail separator on full length\n      if (!((indx - offset + 1) % posSeparator) && indx < len - posSeparator) {\n        valObj.result += maskObj.separator;\n      }\n    }\n  } else {\n    valObj.result = valObj.integer;\n  }\n\n  valObj.result +=\n    maskObj.fraction && valObj.fraction\n      ? maskObj.decimal + valObj.fraction\n      : \"\";\n  return valObj;\n}\n\nexport default (mask, value, options = {}) => {\n  if (!mask || isNaN(Number(value))) {\n    // Invalid inputs\n    return value;\n  }\n\n  const maskObj = processMask(mask);\n  const valObj = processValue(value, maskObj, options);\n  return maskObj.prefix + valObj.sign + valObj.result + maskObj.suffix;\n};\n","import React, { Component } from \"react\";\nimport _ from \"lodash\"; // for nesting property\nimport { getFormattedDate } from \"helpers/date\";\nimport getFormattedNumber from \"helpers/number\";\nimport numberTypes from \"static/data/helpers/numberTypes.json\";\nimport dateTypes from \"static/data/helpers/dateTypes.json\";\n\nclass TableBody extends Component {\n  //for nested s\n  renderCell = (item, column, loading) => {\n    console.log(\"loaded\", loading)\n    if (column.content) return column.content(item, loading);\n    const result = _.get(item, column.path);\n    const numberIndex = numberTypes.findIndex(\n      (type) => type === String(column.path)\n    );\n    const index = dateTypes.findIndex((type) => type === String(column.path));\n    if (index >= 0) {\n      const date = getFormattedDate(result);\n      return date\n    } else if (numberIndex >= 0) {\n      return getFormattedNumber(\"#,###.00\", result, { enforceMaskSign: true });\n    } else {\n      return result? String(result) : \"\";\n    }\n  };\n\n  //for buttons\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item.id}>\n            {columns.map((column) => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column, this.props.loading)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;","import React, { useContext, useEffect, useState } from \"react\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport { MainContext } from \"../../context/Main/\";\nimport { getState, setPageOptions, getPageLimit } from \"../../context/Main/States/Pagination\";\n\nconst TableFooter = () => {\n  const { rootState, dispatch } = useContext(MainContext);\n  const [offset, setOffset] = useState(0);\n  const [pageLimit, setPageLimit] = useState(0);\n  const [maxLimit, setMaxLimit] = useState(0);\n  const [numberOfPages, setNumberOfPages] = useState(0);\n  const [lock, setLock] = useState(false);\n  const [clicked, setClicked] = useState(false);\n  const [buffer, setBuffer] = useState({ count: 0, results: [] });\n  const [count, setCount] = useState(0);\n  const [openTab, setOpenTab] = useState(\"\")\n\n  useEffect(() => {\n    const limit = getPageLimit(rootState)\n    if (typeof limit !== \"undefined\") {\n      if (pageLimit !== limit) {\n        // handleChange(offset, limit)\n      }\n    }\n  }, [rootState])\n\n  useEffect(() => {\n    const { count, results } = buffer\n    if (!(results.length === 0 && count === 0)) {\n      setNumberOfPages(Math.ceil(count / results.length));\n      setPageLimit(results.length);\n      setMaxLimit(count);\n      setLock(true);\n    }\n  }, [openTab, setNumberOfPages, setPageLimit, setMaxLimit, setLock])\n\n  useEffect(() => {\n    if (count) {\n      const { count: fetchedCount, results: data } = buffer;\n      if (pageLimit <= data.length) {\n        setNumberOfPages(Math.ceil(fetchedCount / data.length));\n        setPageLimit(data.length);\n        setMaxLimit(fetchedCount);\n        setLock(true);\n      }\n    }\n  }, [count, buffer]);\n\n  useEffect(() => {\n    try {\n      const { results, amount, activeTab } = getState(rootState);\n      activeTab !== \"\"? setOpenTab(activeTab) : console.warn(\"Pass active tab for paginations\")\n      if (amount !== count) {\n        if (typeof amount !== \"undefined\") {\n          setCount(amount);\n          setBuffer(results);\n        }\n      }\n      if (String(results) !== \"undefined\" && !lock) {\n        const { count, results: data } = results;\n        setNumberOfPages(Math.ceil(count / data.length));\n        setPageLimit(data.length);\n        setMaxLimit(count);\n        setLock(true);\n      }\n    } catch (e) {}\n  }, [rootState, setCount, setBuffer]);\n\n  const handleChange = (offset, limit = null) => {\n    if (!clicked) {\n      setClicked(true);\n    }\n    setOffset(offset);\n    if (limit) {\n      setPageLimit(limit)\n    }\n  };\n\n  useEffect(() => {\n    if (offset < maxLimit) {\n      if (clicked) {\n        setPageOptions({}, dispatch, {\n          offset,\n          limit: pageLimit,\n          onClick: clicked,\n        });\n      }  \n    }\n  }, [offset, pageLimit]);\n\n  return (\n    <div>\n      <Pagination className=\"pagination left\" size=\"md\" color=\"primary\">\n        <PaginationItem disabled={offset === 0}>\n          <PaginationLink first href=\"#\" onClick={() => handleChange(0)}>\n            First\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink\n            previous\n            disabled={offset === 0}\n            onClick={() => handleChange(offset - pageLimit)}\n          />\n        </PaginationItem>\n        {Array(numberOfPages)\n          .fill(\"\")\n          .map((_, idx) => (\n            <PaginationItem active={idx === Math.floor(offset / pageLimit)}>\n              <PaginationLink onClick={() => handleChange(idx * pageLimit)}>\n                {idx + 1}\n              </PaginationLink>\n            </PaginationItem>\n          ))}\n        <PaginationItem>\n          <PaginationLink\n            next\n            onClick={() => handleChange(offset + pageLimit)}\n            disabled={offset + pageLimit >= maxLimit}\n          />\n        </PaginationItem>\n        <PaginationItem disabled={offset + pageLimit >= maxLimit}>\n          <PaginationLink\n            last\n            onClick={() => handleChange((numberOfPages - 1) * pageLimit)}\n          >\n            Last\n          </PaginationLink>\n        </PaginationItem>\n      </Pagination>\n    </div>\n  );\n};\n\nexport default TableFooter;","import React, { useContext, useEffect } from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\nimport TableFooter from \"./TableFooter\";\nimport { Table as ReactstrapTable, CardHeader, Card } from \"reactstrap\";\nimport { MainContext } from \"../../context/Main/\";\nimport { connect } from \"react-redux\";\n\nconst Table = ({ columns, data, title, state, getLoading }) => {\n  let objectSet = {};\n  useEffect(() => {\n    if (typeof getLoading === \"function\") {\n      // const result = status(state)\n      console.log(\"result\", getLoading(state, { isPatch: true }));\n    }\n  }, [state, getLoading]);\n  const { rootState } = useContext(MainContext);\n\n  useEffect(() => {\n    try {\n      // setCurrenctTab(activeTab)\n    } catch (err) {}\n  }, [rootState]);\n\n  console.log(getLoading(state, { isPatch: true }))\n  return (\n    <Card className=\"p-2\">\n      <CardHeader className=\"tableHeaders border-0\">\n        <div>{\"\" + title ? title : \"\"}</div>\n      </CardHeader>\n      <ReactstrapTable size=\"md\" responsive striped>\n        <TableHeader columns={columns} />\n        <TableBody\n          data={data}\n          columns={columns}\n          loading={\n            typeof getLoading === \"fucntion\"\n              ? getLoading(state, { isPatch: true })\n              : {}\n          }\n        />\n        <TableFooter />\n      </ReactstrapTable>\n    </Card>\n  );\n};\nconst mapStateToProps = (state, ownProps) => ({ state, ...ownProps });\n\nexport default connect(mapStateToProps)(Table);\n","import { constants } from \"../reducer\";\n\nexport const stateName = \"page_values\";\n\nexport const getState = (rootState) => {\n  if (rootState[stateName]) {\n    return rootState[stateName];\n  } else {\n    return null;\n  }\n};\n\nexport const setPageValues = (\n  state,\n  dispatch,\n  results,\n  options = {},\n  activeTab = \"\"\n) => {\n  if (typeof results !== \"undefined\") {\n    if (results.count === 0) return null;\n    dispatch({\n      type: constants.UPDATE,\n      stateName,\n      payload: {\n        results,\n        options,\n        pageLimit: results.length ? Math.ceil(results.length / 5) * 5 : 5,\n        amount: getState(state) ? getState(state).amount + 1 : 0,\n        activeTab,\n      },\n    });\n  }\n};\n\nexport const setPageLimit = (state = {}, dispatch, pageLimit) => {\n  let currentTab = \"\";\n  if (state) {\n    const response = getState(state);\n    if (typeof response.activeTab !== \"undefined\")\n      currentTab = response.activeTab;\n  }\n\n  dispatch({\n    type: constants.UPDATE,\n    stateName,\n    payload: {\n      pageLimit,\n      activeTab: currentTab,\n    },\n  });\n};\n\nexport const getPageLimit = (rootState) => {\n  const results = rootState[stateName];\n  try {\n    const payload = results[\"pageLimit\"] ? results[\"pageLimit\"] : 0;\n    return payload ? payload : 0;\n  } catch (err) {}\n};\n\n// Needs to be deleted\nexport const setPageOptions = (\n  _,\n  dispatch,\n  options = { offset: 0, limit: 0 }\n) => {\n  dispatch({\n    type: constants.UPDATE,\n    stateName,\n    payload: {\n      options,\n    },\n  });\n};\n","export const statusTypes = {\n    ADD: \"ADDING_LINE\",\n    IDLE: \"IDLE\",\n    EDIT: \"EDIT\",\n    SAVED: \"SAVED\",\n    CANCELED: \"CANCELED\",\n};\n\nexport const initialState = {\n    addCount: 0,\n    status: statusTypes.IDLE,\n    hasEdit: true,\n    hasDelete: true,\n    _data: []\n}\n\nexport const constants = {\n    ADD: \"_ADD\",\n    UPDATE: \"UPDATE\"\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case constants.ADD: {\n            return {\n                ...state,\n                addCount: state.addCount + 1,\n                status: statusTypes.ADD\n            }\n        }\n\n        case constants.UPDATE: {\n            return {\n                ...state,\n                _data: action.payload\n            }\n        }\n\n        default: return state\n    }\n}\n\nexport const addLine = (dispatch) => dispatch({ type: constants.ADD })\n\nexport const updateData = (data) => dispatch => {\n    dispatch({ type: constants.UPDATE, payload: data })\n}\n\nexport const getData = (state) => state._data","import React, { useState, useEffect } from \"react\";\nimport { Table as ReactstrapTable, Button, Input } from \"reactstrap\";\nimport { MdEdit, MdDelete } from \"react-icons/md\";\nimport { updateData } from \"./reducer\";\nimport Joi from \"joi-browser\";\nimport _ from \"lodash\";\n\nconst uuid = () => Math.random().toString(36).substring(7);\n\nexport const populateLine = (obj, _id) => {\n  let returnObj = {};\n  for (let prop in obj) {\n    returnObj[prop] = \"\";\n  }\n  return {\n    ...returnObj,\n    _id,\n  };\n};\n\nexport const statusTypes = {\n  ADD: \"ADDING_LINE\",\n  IDLE: \"IDLE\",\n  EDIT: \"EDIT\",\n  SAVED: \"SAVED\",\n  CANCELED: \"CANCELED\",\n};\n\nexport const DisplayTable = ({\n  data,\n  columns,\n  hasEdit,\n  hasDelete,\n  status,\n  addCount,\n  schema,\n  dispatch,\n  callback,\n}) => {\n  const [fetchedData, setFetchedData] = useState([]);\n  const [formStatus, setFormStatus] = useState(statusTypes.IDLE);\n  const [displayValues, setDisplay] = useState(data.map(() => false));\n  const [defaultValues, setDefaultValues] = useState({});\n\n  useEffect(() => {\n    if (\n      statusTypes.IDLE === formStatus ||\n      statusTypes.SAVED === formStatus ||\n      statusTypes.CANCELED === formStatus\n    ) {\n      setFormStatus(status);\n    }\n  }, [status, setFormStatus, addCount]);\n\n  useEffect(() => {\n    if (data.length > 0 && fetchedData.length === 0) {\n      const filteredData = data.map((item) => {\n        var returnObj = {};\n        for (var prop in item) {\n          // eslint-disable-next-line no-loop-func\n          const found = columns.find((_item) => _item.tag === prop);\n          if (found) {\n            returnObj[found.tag] = _.get(item, found.tag);\n          }\n        }\n        return {\n          ...returnObj,\n          _id: uuid(),\n        };\n      });\n      setDisplay(filteredData.map(() => false));\n      setFetchedData(filteredData);\n    }\n  }, [data, setFetchedData]);\n\n  useEffect(() => {\n    updateData(fetchedData)(dispatch);\n    callback(fetchedData);\n  }, [fetchedData, dispatch]);\n\n  const [formData, setForm] = useState({});\n  const [validationData, setValidation] = useState({});\n  const [completed, setCompleted] = useState(false);\n  const [generalOptions, setGeneralOptions] = useState({});\n\n  useEffect(() => {\n    const options = {};\n    columns.forEach((item) => {\n      if (item.type === \"select\") {\n        options[item.tag] = item.options;\n      }\n    });\n    setGeneralOptions(options);\n  }, [setGeneralOptions]);\n\n  useEffect(() => {\n    if (formStatus === statusTypes.ADD) {\n      const _id = uuid();\n      setFetchedData(fetchedData.concat(populateLine(fetchedData[0], _id)));\n      populateData(populateLine(fetchedData[0], _id));\n      setDisplay(displayValues.concat(true));\n    }\n  }, [formStatus]);\n\n  const populateData = (data) => {\n    setValidation(schema);\n    setForm({\n      ...defaultValues,\n      ...data,\n    });\n  };\n\n  useEffect(() => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(formData, validationData, options);\n\n    if (!error) {\n      if (Object.values(formData).length > 1) {\n        setCompleted(true);\n      }\n    } else {\n      console.warn(error);\n      setCompleted(false);\n    }\n  }, [formData]);\n\n  const handleChange = ({ currentTarget: { name, value, callback } }) => {\n    const setOptions = (tag, options) => {\n      let updatedOptions = generalOptions;\n      const index = Object.keys(generalOptions).findIndex(\n        (data) => data === tag\n      );\n      if (index >= 0) {\n        updatedOptions[tag] = options;\n        setGeneralOptions(updatedOptions);\n      }\n    };\n\n    setForm({\n      ...formData,\n      [name]: value,\n    });\n\n    const setValue = (values = []) => {\n      var updates = {};\n      values.map(({ name, value }) => {\n        updates[name] = value;\n        return null;\n      });\n      setForm({\n        ...formData,\n        ...updates,\n      });\n    };\n    callback({\n      name,\n      value,\n      setOptions,\n      options: generalOptions,\n      setValue,\n      formData,\n    });\n  };\n\n  const cancelCallback = () => {\n    if (formStatus === statusTypes.ADD) {\n      const index = fetchedData.findIndex((data) => data._id === formData._id);\n      if (index >= 0) {\n        setFetchedData(fetchedData.filter((_, idx) => index !== idx));\n        setDisplay(displayValues.filter((_, idx) => index !== idx));\n      }\n      setCompleted(true);\n    } else {\n      setDisplay(displayValues.map(() => false));\n    }\n    setFormStatus(statusTypes.CANCELED);\n    setValidation({});\n  };\n\n  const deleteCallback = (_id) => {\n    const index = fetchedData.findIndex((data) => data._id === _id);\n    if (index >= 0) {\n      setFetchedData(fetchedData.filter((_, idx) => idx !== index));\n      setDisplay(displayValues.filter((_, idx) => idx !== index));\n      setFormStatus(statusTypes.CANCELED);\n    }\n  };\n\n  const saveCallback = () => {\n    setFetchedData(\n      fetchedData.map((data) => {\n        if (data._id === formData._id) {\n          return {\n            _id: uuid(),\n            ...formData,\n          };\n        } else {\n          return data;\n        }\n      })\n    );\n    setDisplay(displayValues.map(() => false));\n  };\n\n  const returnName = (dataItem, item) => {\n    if (item.optionsFrom === \"server\") {\n      const found = item.options.find(\n        (prop) => String(prop.id) === String(dataItem[item.tag])\n      );\n      if (found) return found.name;\n    } else {\n      return dataItem[item.tag];\n    }\n  };\n\n  useEffect(() => {\n    var formUpdates = {};\n    columns.forEach((item) => {\n      if (item.defaultValue) {\n        formUpdates = {\n          ...formUpdates,\n          [item.tag]: item.defaultValue,\n        };\n      }\n    });\n    if (Object.values(formUpdates).length > 0) {\n      setForm({\n        ...formData,\n        ...formUpdates,\n      });\n      setDefaultValues(formUpdates);\n    }\n  }, [columns, setForm]);\n\n\n  return (\n    <ReactstrapTable size=\"md\" responsive striped>\n      <thead>\n        <tr>\n          {columns\n            .filter((prop) => !Boolean(prop.isView))\n            .map((item) => (\n              <th>{item.label}</th>\n            ))}\n        </tr>\n      </thead>\n      <tbody>\n        {fetchedData.map((dataItem, idx) => {\n          return (\n            <tr>\n              {columns\n                .filter((prop) => !Boolean(prop.isView))\n                .map((item) => {\n                  return displayValues[idx] && !item.noEdit ? (\n                    <td>\n                      {item.type === \"select\" ? (\n                        <Input\n                          type={item.type}\n                          name={item.tag}\n                          value={_.get(formData, item.tag)}\n                          onChange={({ currentTarget: { name, value } }) => {\n                            const callback = item.callback\n                              ? item.callback\n                              : () => null;\n                            handleChange({\n                              currentTarget: { name, value, callback },\n                            });\n                          }}\n                          disabled={item.disabled}\n                        >\n                          <option></option>\n                          {item.optionsFrom === \"server\"\n                            ? generalOptions[item.tag].map((_item) => (\n                                <option value={_item.id}>{_item.name}</option>\n                              ))\n                            : generalOptions[item.tag].map((_item) => (\n                                <option value={_item}>{_item}</option>\n                              ))}\n                        </Input>\n                      ) : (\n                        <Input\n                          type={item.type ? item.type : \"text\"}\n                          name={item.tag}\n                          disabled={item.disabled}\n                          value={_.get(formData, item.tag)}\n                          onChange={({ currentTarget: { name, value } }) => {\n                            const callback = item.callback\n                              ? item.callback\n                              : () => null;\n                            handleChange({\n                              currentTarget: { name, value, callback },\n                            });\n                          }}\n                        />\n                      )}\n                    </td>\n                  ) : (\n                    <td>{returnName(dataItem, item)}</td>\n                  );\n                })}\n              {hasEdit ? (\n                <td>\n                  {displayValues[idx] ? (\n                    <div>\n                      <Button\n                        className=\"m-1\"\n                        size=\"sm\"\n                        outline\n                        color=\"info\"\n                        onClick={() => {\n                          saveCallback();\n                          setFormStatus(statusTypes.SAVED);\n                        }}\n                        disabled={!completed}\n                      >\n                        Save\n                      </Button>\n                      <Button\n                        className=\"m-1\"\n                        size=\"sm\"\n                        outline\n                        color=\"danger\"\n                        onClick={() => {\n                          cancelCallback();\n                        }}\n                      >\n                        Cancel\n                      </Button>\n                    </div>\n                  ) : (\n                    <Button\n                      className=\"m-1\"\n                      size=\"sm\"\n                      outline\n                      color=\"warning\"\n                      onClick={() => {\n                        setDisplay(\n                          displayValues.map((_, value) => value === idx)\n                        );\n                        populateData(dataItem);\n                        setFormStatus(statusTypes.EDIT);\n                      }}\n                    >\n                      <MdEdit />\n                    </Button>\n                  )}\n                </td>\n              ) : (\n                <></>\n              )}\n              {hasDelete ? (\n                <td>\n                  <Button\n                    className=\"m-1\"\n                    size=\"sm\"\n                    outline\n                    color=\"danger\"\n                    onClick={() => deleteCallback(dataItem._id)}\n                  >\n                    <MdDelete />\n                  </Button>\n                </td>\n              ) : (\n                <></>\n              )}\n            </tr>\n          );\n        })}\n      </tbody>\n    </ReactstrapTable>\n  );\n};\n","import React, { useState, useReducer, useEffect } from \"react\";\nimport { Button, Col } from \"reactstrap\";\nimport { initialState, reducer, addLine, DisplayTable } from \"./index\";\n\nexport const InlineTable = ({\n  data,\n  columns,\n  callback,\n  schema,\n  lineTag,\n  disabled,\n  startForm\n}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [dataAllocated, setAllocated] = useState(false)\n\n  useEffect(() => {\n    if (startForm) {\n      addLine(dispatch)\n    }\n  }, [startForm, dispatch])\n\n  const _callback = (data) => {\n    if (!dataAllocated && data.length > 0 && Object.values(data[0]).length > 1) {\n      callback(data)\n      setAllocated(true)\n    } else if (state._data.length >= data.length) {\n      callback(data);\n    }\n  };\n\n  return (\n    <div>\n      {disabled? <></> : <Col align=\"right\" className=\"mb-1 pl-3 pr-3\">\n        <Button\n          className=\"m-1 align-right\"\n          size=\"sm\"\n          outline\n          color=\"info\"\n          onClick={() => addLine(dispatch)}\n        >\n          {lineTag? lineTag : \"Add Line\"}\n        </Button>\n      </Col>}\n      <DisplayTable\n        {...state}\n        dispatch={dispatch}\n        data={data}\n        schema={schema}\n        columns={columns}\n        callback={_callback}\n        hasEdit={!disabled}\n        hasDelete={!disabled}\n      />\n    </div>\n  );\n};\n","export { DisplayTable } from \"./main\"\nexport { addLine, getData, initialState, reducer } from \"./reducer\"\nexport { InlineTable } from \"./render\"","import { constants } from \"../reducer\";\n\nexport const stateName = \"current_department\";\n\nexport const getState = (rootState) => {\n  if (rootState[stateName]) {\n    return rootState[stateName];\n  } else {\n    return null;\n  }\n};\n\nexport const setDepartment = (\n  _,\n  dispatch,\n  department = \"\"\n) => {\n  dispatch({\n    type: constants.UPDATE,\n    stateName,\n    payload: {\n      department\n    },\n  });\n};\n\nexport const setPermissions = (\n    _,\n    dispatch,\n    permissions = {}\n  ) => {\n    dispatch({\n      type: constants.UPDATE,\n      stateName,\n      payload: {\n        permissions\n      },\n    });\n  };\n\nexport const defaultPermissions = {\n  create: true, read: true, update: true, delete: true\n}","import Joi from \"joi-browser\";\n\nexport const saveLineTag = \"lines\";\n\nexport const apiLineTag = \"lines\";\n\nexport const mainSchema = {\n  id: Joi.any().allow(\"\").optional(),\n  firstName: Joi.string().required().label(\"firstName\"),\n  lastName: Joi.string().required().label(\"lastName\"),\n  department: Joi.string().required().label(\"department\"),\n  [saveLineTag]: Joi.array().items(Joi.object()).min(1),\n};\n\nexport const initialState = {\n  data: {\n    firstName: \"\",\n    lastName: \"\",\n    department: \"\",\n    [saveLineTag]: [],\n  },\n  errors: {},\n  selectedLine: \"\",\n  lineCounter: 1,\n};\n\nexport const populateState = (data, lineMapper, claims) => {\n  return {\n    id: data.id ? data.id : \"\",\n    firstName: String(data.firstName),\n    lastName: String(data.lastName),\n    department: String(data.department),\n    [saveLineTag]: lineMapper(claims),\n  };\n};\n\nexport const lineContentMapper = (data, lineTag = saveLineTag, context) => {\n  const columns = Object.keys(context.permissions);\n  const values = Object.values(context.permissions);\n  return values.map((value, idx) => ({\n    _id: String(idx),\n    resource: columns[idx],\n    create: value.create,\n    read: value.read,\n    update: value.update,\n    delete: value.delete,\n  }));\n};\n\nexport const lineSchema = {\n  _id: Joi.any().allow(\"\").optional(),\n  resource: Joi.string().required().label(\"resource\"),\n  create: Joi.boolean().required().label(\"create\"),\n  read: Joi.boolean().required().label(\"read\"),\n  update: Joi.boolean().required().label(\"update\"),\n  delete: Joi.boolean().required().label(\"delete\"),\n};\n\nexport const getColumns = (data) => {\n  const options = [\n    { id: true, name: \"Yes\" },\n    { id: false, name: \"No\" },\n  ];\n  return [\n    { tag: \"resource\", label: \"Resource\", noEdit: true },\n    {\n      tag: \"create\",\n      label: \"Create\",\n      type: \"select\",\n      options,\n      optionsFrom: \"server\",\n    },\n    {\n      tag: \"read\",\n      label: \"Read\",\n      type: \"select\",\n      options,\n      optionsFrom: \"server\",\n    },\n    {\n      tag: \"update\",\n      label: \"Update\",\n      type: \"select\",\n      options,\n      optionsFrom: \"server\",\n    },\n    {\n      tag: \"delete\",\n      label: \"Delete\",\n      type: \"select\",\n      options,\n      optionsFrom: \"server\",\n    },\n  ];\n};\n","import React from \"react\";\nimport { Card, CardBody, CardHeader, Form, Row, Col } from \"reactstrap\";\nimport ReusabelForm from \"../../common/form\";\nimport { InlineTable } from \"../../common/InLineEditableTable/\";\nimport { MainContext } from \"../../../context/Main/\";\nimport { getState } from \"../../../context/Main/States/Department\";\nimport {\n  initialState,\n  mainSchema,\n  getColumns,\n  lineSchema,\n  lineContentMapper,\n  populateState,\n  saveLineTag,\n  apiLineTag,\n} from \"./config\";\n\nclass SalesInvoiceForm extends ReusabelForm {\n  constructor(props) {\n    super(props);\n    this.initialState = initialState;\n    this.state = JSON.parse(JSON.stringify(this.initialState));\n    this.schema = mainSchema;\n    this.handleLineSave = this.handleLineSave.bind(this);\n    this.populateState = this.populateState.bind(this);\n    this.updateLines = this.updateLines.bind(this);\n    this.lineMapper = this.lineMapper.bind(this);\n  }\n\n  doSubmit = async () => {\n    this.props.submit(this.state.data);\n  };\n\n  static contextType = MainContext;\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  lineMapper() {\n    if (this.props.isEdit || this.props.isView) {\n      return lineContentMapper(\n        this.props.data,\n        apiLineTag,\n        getState(this.context.rootState)\n      );\n    } else {\n      return [];\n    }\n  }\n\n  populateState(data) {\n    const newData = populateState(data, this.lineMapper);\n    this.setState({ lockUpdate: true, data: newData });\n  }\n\n  updateLines(lines) {\n    if (lines.length > 0 || this.state.data[saveLineTag].length > 0) {\n      this.setState({\n        data: {\n          ...this.state.data,\n          [saveLineTag]: lines,\n        },\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if ((this.props.isEdit || this.props.isView) && !this.state.lockUpdate) {\n      this.populateState(this.props.data);\n    }\n  }\n\n  handleLineSave(data) {\n    this.setState({\n      data: {\n        ...this.state.data,\n        [saveLineTag]: data,\n      },\n    });\n  }\n\n  render() {\n    return (\n      <Card className=\"border-0\">\n        <CardHeader className=\"border-0\">{this.props.title}</CardHeader>\n        <CardBody>\n          <Form onSubmit={this.handleSubmit}>\n            <Row>\n              <Col md={4} sm={12} xs={12}>\n                {this.renderInput(\"firstName\", \"First Name\")}\n              </Col>\n              <Col md={4} sm={12} xs={12}>\n                {this.renderInput(\"lastName\", \"Last Name\")}\n              </Col>\n              <Col md={4} sm={12} xs={12}>\n                {this.renderInput({\n                  name: \"department\",\n                  label: \"Department\",\n                })}\n              </Col>\n              <Col md={12} sm={12} xs={12}>\n                {this.renderInput(\"remarks\", \"Remarks\", \"textarea\")}\n              </Col>\n\n              <Col md={12} sm={12} xs={12}>\n                <InlineTable\n                  columns={getColumns(this.props.options)}\n                  disabled={this.props.disabled}\n                  data={this.state.data[saveLineTag]}\n                  callback={this.updateLines}\n                  startForm={this.props.isAdd}\n                  schema={lineSchema}\n                />\n              </Col>\n              <Col size=\"xl\" align=\"right\">\n                {this.renderButton(\"Save\")}\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default SalesInvoiceForm;\n","import React, { useReducer, useEffect } from \"react\";\nimport Page from \"../../../components/Page\";\nimport { Card, CardBody, CardHeader, Button, Col } from \"reactstrap\";\nimport { MdRemoveRedEye, MdEdit } from \"react-icons/md\";\nimport CustomTable from \"../../common/table\";\nimport { _toggle, initialState, reducer } from \"../../common/ModalOptions\";\nimport CommonModals from \"../../../components/CommonModal\";\nimport Permissions from \"./Permissions\";\n\nconst Employees = ({ employees, patchEmployee, editITEmployee, doneEdit }) => {\n  console.log(\"employees\", employees);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const columns = [\n    { path: \"firstName\", label: \"First Name\" },\n    { path: \"lastName\", label: \"Last Name\" },\n    { path: \"department\", label: \"Department\" },\n    {\n      key: \"view\",\n      content: (employee) => (\n        <>\n          {Boolean(employee.hasAccount) ? (\n            <Button\n              className=\"m-1\"\n              size=\"sm\"\n              outline\n              color=\"info\"\n              onClick={() => {\n                _toggle(\n                  {\n                    type: \"VIEW\",\n                    Component: Permissions,\n                    data: employee,\n                    title: \"View Employee\",\n                  },\n                  dispatch\n                );\n              }}\n            >\n              <MdRemoveRedEye />\n            </Button>\n          ) : (\n            <></>\n          )}\n          {!Boolean(employee.hasAccount) ? (\n            <Button\n              className=\"m-1\"\n              size=\"sm\"\n              outline\n              color=\"info\"\n              onClick={() => patchEmployee(employee)}\n            >\n              Add Account\n            </Button>\n          ) : (\n            <></>\n          )}\n          {Boolean(employee.hasAccount) ? (\n            <Button\n              className=\"m-1\"\n              size=\"sm\"\n              outline\n              color=\"info\"\n              onClick={() => {\n                _toggle(\n                  {\n                    type: \"EDIT\",\n                    Component: Permissions,\n                    data: employee,\n                    title: \"Edit Employee\",\n                    submit: editITEmployee,\n                  },\n                  dispatch\n                );\n              }}\n            >\n              <MdEdit />\n            </Button>\n          ) : (\n            <></>\n          )}\n        </>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    if (doneEdit) {\n      _toggle({ type: \"CLOSE\" }, dispatch);\n    }\n  }, [doneEdit]);\n\n  return (\n    <div>\n      <CommonModals\n        data={state.data}\n        openModal={state.openModal}\n        component={state.Component}\n        toggle={_toggle}\n        dispatch={dispatch}\n        title={state.title}\n      />\n      <Page>\n        <Card className=\"border-0\">\n          <Col md={12} sm={12} xs={12}>\n            <CardHeader className=\"border-0\">Employees</CardHeader>\n          </Col>\n          <CardBody>\n            <CustomTable columns={columns} data={employees} />\n          </CardBody>\n        </Card>\n      </Page>\n    </div>\n  );\n};\n\nexport default Employees;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Employees from \"./Employees\";\nimport {\n  selectFetchStatus,\n  selectAddStatus,\n  selectITEmployees,\n  Fetch,\n  Add,\n  selectEditStatus,\n  Edit,\n  selectDeleteStatus,\n  Remove,\n  selectPatchStatus,\n  Patch,\n} from \"../../../store/IT/Employees/\";\nimport { getPermissions } from \"../../../store/Permissions/Mocked/\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { reduxStatus } from \"../../../constants/reduxStatus\";\nimport { MainContext } from \"../../../context/Main/\";\nimport {\n  setDepartment,\n  setPermissions,\n} from \"../../../context/Main/States/Department\";\nimport {\n  setPageValues,\n  getState,\n} from \"../../../context/Main/States/Pagination\";\nimport { activeTabs } from \"../EmployeeTabs\";\n\nconst Loader = ({\n  fetchStatus,\n  addStatus,\n  employees,\n  fetchITEmployees,\n  addITEmployee,\n  editStatus,\n  editITEmployee,\n  deleteStatus,\n  deleteITEmployee,\n  activeTab,\n  patchStatus,\n  patchITEmployee,\n  permissions,\n}) => {\n  const [fetchLock, setFetchLock] = useState(true);\n  const [addLock, setAddLock] = useState(true);\n  const [editLock, setEditLock] = useState(true);\n  const [patchLock, setPatchLock] = useState(true);\n  const [deleteLock, setDeleteLock] = useState(true);\n\n  const { rootState, dispatch } = useContext(MainContext);\n\n  useEffect(() => {\n    try {\n      const {\n        options: { offset, limit, onClick },\n      } = getState(rootState);\n      if (onClick && activeTab === activeTabs.PURCHASE_LEDGER_ENTRY) {\n        fetchITEmployees([\n          { key: \"offset\", value: offset },\n          { key: \"limit\", value: limit },\n        ]);\n      }\n    } catch (e) {}\n  }, [getState(rootState)]);\n\n  useEffect(() => {\n    setFetchLock(false);\n    if (!(employees.length > 0)) {\n      fetchITEmployees();\n    }\n  }, [fetchITEmployees, setFetchLock]);\n\n  useEffect(() => {\n    const { status, response } = fetchStatus;\n    if (status === reduxStatus.failure && !fetchLock) {\n      toast.error(\"Failed Fetching LedgerEntries\");\n      setFetchLock(true);\n    } else {\n      if (activeTab === activeTabs.PURCHASE_LEDGER_ENTRY) {\n        setPageValues(rootState, dispatch, response, \"\", activeTab);\n      }\n    }\n  }, [fetchStatus, setFetchLock, activeTab, setPageValues]);\n\n  useEffect(() => {\n    const { status } = addStatus;\n    if (status === reduxStatus.failure && !addLock) {\n      toast.error(\"Failed Adding Employee\");\n      setAddLock(true);\n    } else if (status === reduxStatus.success && !addLock) {\n      toast.success(\"Added Employee\");\n      setAddLock(true);\n    }\n  }, [addStatus, setAddLock]);\n\n  useEffect(() => {\n    const { status, response } = editStatus;\n    console.log(\"edited\", response);\n    if (status === reduxStatus.failure && !editLock) {\n      toast.error(\"Failed Editing Employee\");\n      setEditLock(true);\n    } else if (status === reduxStatus.success && !editLock) {\n      toast.success(\"Edited Employee\");\n      setEditLock(true);\n    }\n  }, [editStatus, setEditLock]);\n\n  useEffect(() => {\n    const { status, response } = patchStatus;\n    if (response) {\n      setDepartment({}, dispatch, response.department);\n      setPermissions({}, dispatch, permissions[response.department]);\n    }\n    if (status === reduxStatus.failure && !patchLock) {\n      toast.error(\"Failed Patching Employee\");\n      setPatchLock(true);\n    } else if (status === reduxStatus.success && !patchLock) {\n      toast.success(\"Employee Account Added\");\n      setPatchLock(true);\n    }\n  }, [patchStatus, setPatchLock]);\n\n  useEffect(() => {\n    const { status } = deleteStatus;\n    if (status === reduxStatus.failure && !deleteLock) {\n      toast.error(\"Failed Deleting Employee\");\n      setDeleteLock(true);\n    } else if (status === reduxStatus.success && !deleteLock) {\n      toast.success(\"Deleted Employee\");\n      setDeleteLock(true);\n    }\n  }, [deleteStatus, setDeleteLock]);\n\n  const _addITEmployee = () => {\n    setAddLock(false);\n    const requestBody = {};\n\n    addITEmployee(requestBody);\n  };\n\n  const getLines = (lines = []) => {\n    const columns = lines.map((line) => line.resource);\n    const data = lines.map((line) => {\n      let objectSet = {};\n      objectSet.create = String(line.create) === \"true\";\n      objectSet.read = String(line.read) === \"true\";\n      objectSet.update = String(line.update) === \"true\";\n      objectSet.delete = String(line.create) === \"true\";\n      return objectSet;\n    });\n    const permissions = {};\n    columns.forEach((resource, idx) => {\n      permissions[resource] = data[idx];\n    });\n    setPermissions({}, dispatch, permissions);\n  };\n\n  const _editITEmployee = (data) => {\n    setEditLock(false);\n    const requestBody = {\n      id: data.id ? data.id : \"\",\n      permissions: getLines(data.lines),\n      ...data,\n    };\n\n    editITEmployee(requestBody);\n  };\n\n  const _patchEmployee = (data) => {\n    setPatchLock(false);\n    const requestBody = {\n      id: data.id,\n      department: data.department,\n      hasAccount: true,\n    };\n    patchITEmployee(requestBody);\n  };\n\n  const _deleteITEmployee = (id) => {\n    setDeleteLock(false);\n    deleteITEmployee(id);\n  };\n\n  return (\n    <Employees\n      employees={employees}\n      doneAdd={addStatus.status === reduxStatus.success && !addLock}\n      addITEmployee={_addITEmployee}\n      doneEdit={editStatus.status === reduxStatus.success && !editLock}\n      editITEmployee={_editITEmployee}\n      donePatch={patchStatus.status === reduxStatus.success && !patchLock}\n      patchEmployee={_patchEmployee}\n      doneDelete={deleteStatus.status === reduxStatus.success && !deleteLock}\n      deleteITEmployee={_deleteITEmployee}\n    />\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  fetchStatus: selectFetchStatus(state),\n  addStatus: selectAddStatus(state),\n  employees: selectITEmployees(state),\n  editStatus: selectEditStatus(state),\n  patchStatus: selectPatchStatus(state),\n  deleteStatus: selectDeleteStatus(state),\n  permissions: getPermissions(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchITEmployees: (data = null) => dispatch(Fetch(data)),\n  addITEmployee: (data) => dispatch(Add(data)),\n  editITEmployee: (data) => dispatch(Edit(data)),\n  patchITEmployee: (data) => dispatch(Patch(data)),\n  deleteITEmployee: (id) => dispatch(Remove(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loader);\n","import React, { useState, useContext } from \"react\";\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Page from \"../../components/Page\";\nimport Employees from \"./Employees\";\nimport { MainContext } from \"../../context/Main/\"\nimport { getState } from \"../../context/Main/States/Department\"\n\nexport const activeTabs = {\n  EMPLOYEES: \"1\"\n}\n\nconst EmployeeTabs = (props) => {\n  const [activeTab, setActiveTab] = useState(activeTabs.EMPLOYEES);\n\n  const { rootState } = useContext(MainContext)\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  console.log(\"department\", getState(rootState))\n\n  return (\n    <div>\n      <Page>\n        <Nav tabs className=\"mb-2\">\n          <NavItem>\n            <NavLink\n              className={\n                activeTab === activeTabs.EMPLOYEES ? \"activepageTabBlue\" : \"notactivePageTabBlue\"\n              }\n              onClick={() => {\n                toggle(activeTabs.EMPLOYEES);\n              }}\n            >\n              Employees\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId={activeTabs.EMPLOYEES}>\n            <Row>\n              <Col>\n                <Employees activeTab={activeTab} />\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </Page>\n    </div>\n  );\n};\n\nexport default EmployeeTabs;\n"],"sourceRoot":""}